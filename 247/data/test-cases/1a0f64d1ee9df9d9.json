{"uid":"1a0f64d1ee9df9d9","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_15000rub_and_above_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_15000rub_and_above_smoke","historyId":"80c9c9998dd6f0127b9f082013ee4f02","time":{"start":1710464455438,"stop":1710464456679,"duration":1241},"status":"skipped","statusMessage":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x555d54d96f33 <unknown>\n#1 0x555d54a8ece6 <unknown>\n#2 0x555d54a940bc <unknown>\n#3 0x555d54a95e4b <unknown>\n#4 0x555d54a95eec <unknown>\n#5 0x555d54adbffc <unknown>\n#6 0x555d54adaf54 <unknown>\n#7 0x555d54aced27 <unknown>\n#8 0x555d54afbeb2 <unknown>\n#9 0x555d54ace6b8 <unknown>\n#10 0x555d54afc07e <unknown>\n#11 0x555d54b1a899 <unknown>\n#12 0x555d54afbc53 <unknown>\n#13 0x555d54accdb3 <unknown>\n#14 0x555d54acd77e <unknown>\n#15 0x555d54d5c86b <unknown>\n#16 0x555d54d60885 <unknown>\n#17 0x555d54d4a181 <unknown>\n#18 0x555d54d61412 <unknown>\n#19 0x555d54d2e25f <unknown>\n#20 0x555d54d85528 <unknown>\n#21 0x555d54d85723 <unknown>\n#22 0x555d54d960e4 <unknown>\n#23 0x78ef6fced134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x75c430d5b3d0>\nlink = 'https://stroyrem-nn.ru/catalog/rastvoronasosy'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x75c431511a50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_15000rub_and_above_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{RASTVORONASOSY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{RASTVORONASOSY_PAGE_URL}\"])\n    @pytest.mark.xfail(reason=\"Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\")\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_15000rub_and_above_smoke(self, link,\n                                                                                                   product_page_open):\n        product_page_open.get_field_price_first().send_keys(15000)\n        product_page_open.get_field_price_last().click()\n        time.sleep(1)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x75c430d538d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#21 0x555d54d85723 \\\\u003Cunknown>\\\\n#22 0x555d54d960e4 \\\\u003Cunknown>\\\\n#23 0x78ef6fced134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x555d54d96f33 <unknown>\nE       #1 0x555d54a8ece6 <unknown>\nE       #2 0x555d54a940bc <unknown>\nE       #3 0x555d54a95e4b <unknown>\nE       #4 0x555d54a95eec <unknown>\nE       #5 0x555d54adbffc <unknown>\nE       #6 0x555d54adaf54 <unknown>\nE       #7 0x555d54aced27 <unknown>\nE       #8 0x555d54afbeb2 <unknown>\nE       #9 0x555d54ace6b8 <unknown>\nE       #10 0x555d54afc07e <unknown>\nE       #11 0x555d54b1a899 <unknown>\nE       #12 0x555d54afbc53 <unknown>\nE       #13 0x555d54accdb3 <unknown>\nE       #14 0x555d54acd77e <unknown>\nE       #15 0x555d54d5c86b <unknown>\nE       #16 0x555d54d60885 <unknown>\nE       #17 0x555d54d4a181 <unknown>\nE       #18 0x555d54d61412 <unknown>\nE       #19 0x555d54d2e25f <unknown>\nE       #20 0x555d54d85528 <unknown>\nE       #21 0x555d54d85723 <unknown>\nE       #22 0x555d54d960e4 <unknown>\nE       #23 0x78ef6fced134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1710463716265,"stop":1710463716331,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1710463716331,"stop":1710463716331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1710464448531,"stop":1710464449310,"duration":779},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1710464449310,"stop":1710464449310,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1710464449311,"stop":1710464455438,"duration":6127},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nselenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x555d54d96f33 <unknown>\n#1 0x555d54a8ece6 <unknown>\n#2 0x555d54a940bc <unknown>\n#3 0x555d54a95e4b <unknown>\n#4 0x555d54a95eec <unknown>\n#5 0x555d54adbffc <unknown>\n#6 0x555d54adaf54 <unknown>\n#7 0x555d54aced27 <unknown>\n#8 0x555d54afbeb2 <unknown>\n#9 0x555d54ace6b8 <unknown>\n#10 0x555d54afc07e <unknown>\n#11 0x555d54b1a899 <unknown>\n#12 0x555d54afbc53 <unknown>\n#13 0x555d54accdb3 <unknown>\n#14 0x555d54acd77e <unknown>\n#15 0x555d54d5c86b <unknown>\n#16 0x555d54d60885 <unknown>\n#17 0x555d54d4a181 <unknown>\n#18 0x555d54d61412 <unknown>\n#19 0x555d54d2e25f <unknown>\n#20 0x555d54d85528 <unknown>\n#21 0x555d54d85723 <unknown>\n#22 0x555d54d960e4 <unknown>\n#23 0x78ef6fced134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x75c430d5b3d0>\nlink = 'https://stroyrem-nn.ru/catalog/rastvoronasosy'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x75c431511a50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_15000rub_and_above_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{RASTVORONASOSY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{RASTVORONASOSY_PAGE_URL}\"])\n    @pytest.mark.xfail(reason=\"Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\")\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_15000rub_and_above_smoke(self, link,\n                                                                                                   product_page_open):\n        product_page_open.get_field_price_first().send_keys(15000)\n        product_page_open.get_field_price_last().click()\n        time.sleep(1)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:69: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x75c430d538d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#21 0x555d54d85723 \\\\u003Cunknown>\\\\n#22 0x555d54d960e4 \\\\u003Cunknown>\\\\n#23 0x78ef6fced134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=122.0.6261.128); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x555d54d96f33 <unknown>\nE       #1 0x555d54a8ece6 <unknown>\nE       #2 0x555d54a940bc <unknown>\nE       #3 0x555d54a95e4b <unknown>\nE       #4 0x555d54a95eec <unknown>\nE       #5 0x555d54adbffc <unknown>\nE       #6 0x555d54adaf54 <unknown>\nE       #7 0x555d54aced27 <unknown>\nE       #8 0x555d54afbeb2 <unknown>\nE       #9 0x555d54ace6b8 <unknown>\nE       #10 0x555d54afc07e <unknown>\nE       #11 0x555d54b1a899 <unknown>\nE       #12 0x555d54afbc53 <unknown>\nE       #13 0x555d54accdb3 <unknown>\nE       #14 0x555d54acd77e <unknown>\nE       #15 0x555d54d5c86b <unknown>\nE       #16 0x555d54d60885 <unknown>\nE       #17 0x555d54d4a181 <unknown>\nE       #18 0x555d54d61412 <unknown>\nE       #19 0x555d54d2e25f <unknown>\nE       #20 0x555d54d85528 <unknown>\nE       #21 0x555d54d85723 <unknown>\nE       #22 0x555d54d960e4 <unknown>\nE       #23 0x78ef6fced134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1710464455438,"stop":1710464455466,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1710464455525,"stop":1710464455551,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1710464456586,"stop":1710464456634,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"1e1e7468eaad28a7","name":"Screenshot","source":"1e1e7468eaad28a7.png","type":"image/png","size":200485},{"uid":"42eb917e05e7e885","name":"HTML source","source":"42eb917e05e7e885.html","type":"text/html","size":698186}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1710464456883,"stop":1710464456949,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1710464456883,"stop":1710464456883,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='Ждем исправление бага - Разная цена товара в каталоге и на карточке товара')"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"558f97d74ace"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/rastvoronasosy'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":227,"passed":0,"unknown":0,"total":227},"items":[{"uid":"8316ac806ae2a6c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/246//#testresult/8316ac806ae2a6c4","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1710378029335,"stop":1710378037209,"duration":7874}},{"uid":"48f38222e20f0d12","reportUrl":"https://Nat754.github.io/StroyremAutomation/245//#testresult/48f38222e20f0d12","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1710291794644,"stop":1710291802224,"duration":7580}},{"uid":"9527b6bbe42be7b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/244//#testresult/9527b6bbe42be7b3","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1710205250521,"stop":1710205258419,"duration":7898}},{"uid":"30107d097871ef5b","reportUrl":"https://Nat754.github.io/StroyremAutomation/243//#testresult/30107d097871ef5b","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1710118979955,"stop":1710118987837,"duration":7882}},{"uid":"80db104ec56845e","reportUrl":"https://Nat754.github.io/StroyremAutomation/242//#testresult/80db104ec56845e","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1710032630854,"stop":1710032637970,"duration":7116}},{"uid":"38239667027c5ff8","reportUrl":"https://Nat754.github.io/StroyremAutomation/241//#testresult/38239667027c5ff8","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709945851023,"stop":1709945857892,"duration":6869}},{"uid":"914e9f9eee4b08b5","reportUrl":"https://Nat754.github.io/StroyremAutomation/240//#testresult/914e9f9eee4b08b5","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709859512752,"stop":1709859519475,"duration":6723}},{"uid":"27e41f2a3a387594","reportUrl":"https://Nat754.github.io/StroyremAutomation/239//#testresult/27e41f2a3a387594","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709772558357,"stop":1709772564795,"duration":6438}},{"uid":"21445e761408205","reportUrl":"https://Nat754.github.io/StroyremAutomation/238//#testresult/21445e761408205","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709686798622,"stop":1709686806257,"duration":7635}},{"uid":"59bcffbcd589dd9a","reportUrl":"https://Nat754.github.io/StroyremAutomation/237//#testresult/59bcffbcd589dd9a","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709600386395,"stop":1709600394116,"duration":7721}},{"uid":"b6c64e414f8860cb","reportUrl":"https://Nat754.github.io/StroyremAutomation/236//#testresult/b6c64e414f8860cb","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709514195374,"stop":1709514203391,"duration":8017}},{"uid":"ee95471060a14d97","reportUrl":"https://Nat754.github.io/StroyremAutomation/235//#testresult/ee95471060a14d97","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709427924262,"stop":1709427932262,"duration":8000}},{"uid":"84351277ffe8beb3","reportUrl":"https://Nat754.github.io/StroyremAutomation/234//#testresult/84351277ffe8beb3","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709341037460,"stop":1709341043948,"duration":6488}},{"uid":"251460e709a7ebaa","reportUrl":"https://Nat754.github.io/StroyremAutomation/233//#testresult/251460e709a7ebaa","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709255029387,"stop":1709255036271,"duration":6884}},{"uid":"543e4cedc3f5d351","reportUrl":"https://Nat754.github.io/StroyremAutomation/232//#testresult/543e4cedc3f5d351","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709168273260,"stop":1709168280308,"duration":7048}},{"uid":"b917b8a659007d82","reportUrl":"https://Nat754.github.io/StroyremAutomation/231//#testresult/b917b8a659007d82","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1709081928986,"stop":1709081936991,"duration":8005}},{"uid":"5a40b1ac6225c524","reportUrl":"https://Nat754.github.io/StroyremAutomation/230//#testresult/5a40b1ac6225c524","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1708995604260,"stop":1708995612137,"duration":7877}},{"uid":"5374bc8fee5e2f6e","reportUrl":"https://Nat754.github.io/StroyremAutomation/229//#testresult/5374bc8fee5e2f6e","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1708909182686,"stop":1708909189226,"duration":6540}},{"uid":"ce24bfe6efc4d21b","reportUrl":"https://Nat754.github.io/StroyremAutomation/228//#testresult/ce24bfe6efc4d21b","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1708823025358,"stop":1708823033024,"duration":7666}},{"uid":"5d7d8f46de72ab18","reportUrl":"https://Nat754.github.io/StroyremAutomation/227//#testresult/5d7d8f46de72ab18","status":"skipped","statusDetails":"XFAIL Ждем исправление бага - Разная цена товара в каталоге и на карточке товара\n\nAssertionError: ОР: Стоимость товара = 931117.8,ФР: стоимость товара = 931117.86\nassert 931117.86 == 931117.8\n +  where 931117.8 = round((980124.0 * 0.95), 2)","time":{"start":1708736173435,"stop":1708736179984,"duration":6549}}]},"tags":["smoke_test","@pytest.mark.xfail(reason='Ждем исправление бага - Разная цена товара в каталоге и на карточке товара')","flaky(max_runs=3, min_passes=1)"]},"source":"1a0f64d1ee9df9d9.json","parameterValues":["'https://stroyrem-nn.ru/catalog/rastvoronasosy'"]}