{"uid":"b84d4b8141996340","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1716253961080,"stop":1716253963368,"duration":2288},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5566fc471eca <unknown>\n#1 0x5566fc15b45c <unknown>\n#2 0x5566fc1ae336 <unknown>\n#3 0x5566fc1ac176 <unknown>\n#4 0x5566fc1a9b57 <unknown>\n#5 0x5566fc1a897c <unknown>\n#6 0x5566fc19c0ff <unknown>\n#7 0x5566fc1ca4b2 <unknown>\n#8 0x5566fc19ba79 <unknown>\n#9 0x5566fc1ca67e <unknown>\n#10 0x5566fc1e92cc <unknown>\n#11 0x5566fc1ca253 <unknown>\n#12 0x5566fc19a1c7 <unknown>\n#13 0x5566fc19ab3e <unknown>\n#14 0x5566fc43830b <unknown>\n#15 0x5566fc43c3b7 <unknown>\n#16 0x5566fc424e3e <unknown>\n#17 0x5566fc43ce82 <unknown>\n#18 0x5566fc4097df <unknown>\n#19 0x5566fc4611b8 <unknown>\n#20 0x5566fc46138b <unknown>\n#21 0x5566fc470ffc <unknown>\n#22 0x7efd3c689134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0beb65d0>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0b7fb050>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0cb25450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5566fc46138b \\\\u003Cunknown>\\\\n#21 0x5566fc470ffc \\\\u003Cunknown>\\\\n#22 0x7efd3c689134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x5566fc471eca <unknown>\nE       #1 0x5566fc15b45c <unknown>\nE       #2 0x5566fc1ae336 <unknown>\nE       #3 0x5566fc1ac176 <unknown>\nE       #4 0x5566fc1a9b57 <unknown>\nE       #5 0x5566fc1a897c <unknown>\nE       #6 0x5566fc19c0ff <unknown>\nE       #7 0x5566fc1ca4b2 <unknown>\nE       #8 0x5566fc19ba79 <unknown>\nE       #9 0x5566fc1ca67e <unknown>\nE       #10 0x5566fc1e92cc <unknown>\nE       #11 0x5566fc1ca253 <unknown>\nE       #12 0x5566fc19a1c7 <unknown>\nE       #13 0x5566fc19ab3e <unknown>\nE       #14 0x5566fc43830b <unknown>\nE       #15 0x5566fc43c3b7 <unknown>\nE       #16 0x5566fc424e3e <unknown>\nE       #17 0x5566fc43ce82 <unknown>\nE       #18 0x5566fc4097df <unknown>\nE       #19 0x5566fc4611b8 <unknown>\nE       #20 0x5566fc46138b <unknown>\nE       #21 0x5566fc470ffc <unknown>\nE       #22 0x7efd3c689134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716252743785,"stop":1716252743854,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1716252743854,"stop":1716252743854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1716253947152,"stop":1716253947839,"duration":687},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1716253947839,"stop":1716253947839,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1716253947840,"stop":1716253961079,"duration":13239},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5566fc471eca <unknown>\n#1 0x5566fc15b45c <unknown>\n#2 0x5566fc1ae336 <unknown>\n#3 0x5566fc1ac176 <unknown>\n#4 0x5566fc1a9b57 <unknown>\n#5 0x5566fc1a897c <unknown>\n#6 0x5566fc19c0ff <unknown>\n#7 0x5566fc1ca4b2 <unknown>\n#8 0x5566fc19ba79 <unknown>\n#9 0x5566fc1ca67e <unknown>\n#10 0x5566fc1e92cc <unknown>\n#11 0x5566fc1ca253 <unknown>\n#12 0x5566fc19a1c7 <unknown>\n#13 0x5566fc19ab3e <unknown>\n#14 0x5566fc43830b <unknown>\n#15 0x5566fc43c3b7 <unknown>\n#16 0x5566fc424e3e <unknown>\n#17 0x5566fc43ce82 <unknown>\n#18 0x5566fc4097df <unknown>\n#19 0x5566fc4611b8 <unknown>\n#20 0x5566fc46138b <unknown>\n#21 0x5566fc470ffc <unknown>\n#22 0x7efd3c689134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0beb65d0>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0b7fb050>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0cb25450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5566fc46138b \\\\u003Cunknown>\\\\n#21 0x5566fc470ffc \\\\u003Cunknown>\\\\n#22 0x7efd3c689134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x5566fc471eca <unknown>\nE       #1 0x5566fc15b45c <unknown>\nE       #2 0x5566fc1ae336 <unknown>\nE       #3 0x5566fc1ac176 <unknown>\nE       #4 0x5566fc1a9b57 <unknown>\nE       #5 0x5566fc1a897c <unknown>\nE       #6 0x5566fc19c0ff <unknown>\nE       #7 0x5566fc1ca4b2 <unknown>\nE       #8 0x5566fc19ba79 <unknown>\nE       #9 0x5566fc1ca67e <unknown>\nE       #10 0x5566fc1e92cc <unknown>\nE       #11 0x5566fc1ca253 <unknown>\nE       #12 0x5566fc19a1c7 <unknown>\nE       #13 0x5566fc19ab3e <unknown>\nE       #14 0x5566fc43830b <unknown>\nE       #15 0x5566fc43c3b7 <unknown>\nE       #16 0x5566fc424e3e <unknown>\nE       #17 0x5566fc43ce82 <unknown>\nE       #18 0x5566fc4097df <unknown>\nE       #19 0x5566fc4611b8 <unknown>\nE       #20 0x5566fc46138b <unknown>\nE       #21 0x5566fc470ffc <unknown>\nE       #22 0x7efd3c689134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1716253961080,"stop":1716253961117,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1716253961169,"stop":1716253961202,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1716253962238,"stop":1716253962279,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"98096e47e8144146","name":"Screenshot","source":"98096e47e8144146.png","type":"image/png","size":57054},{"uid":"fc9c5d1f6d9158f4","name":"HTML source","source":"fc9c5d1f6d9158f4.html","type":"text/html","size":952590}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1716253963546,"stop":1716253963546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1716253963546,"stop":1716253963617,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"bac0df4fc046"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":274,"unknown":0,"total":280},"items":[{"uid":"22c537523ecb4fe7","reportUrl":"https://Nat754.github.io/StroyremAutomation/313//#testresult/22c537523ecb4fe7","status":"passed","time":{"start":1716167354311,"stop":1716167362704,"duration":8393}},{"uid":"55c139f4665edbd8","reportUrl":"https://Nat754.github.io/StroyremAutomation/312//#testresult/55c139f4665edbd8","status":"passed","time":{"start":1716081174208,"stop":1716081184462,"duration":10254}},{"uid":"ec83bdeae3e75058","reportUrl":"https://Nat754.github.io/StroyremAutomation/311//#testresult/ec83bdeae3e75058","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55d77dcbbeca <unknown>\n#1 0x55d77d9a545c <unknown>\n#2 0x55d77d9f8336 <unknown>\n#3 0x55d77d9f6176 <unknown>\n#4 0x55d77d9f3b57 <unknown>\n#5 0x55d77d9f297c <unknown>\n#6 0x55d77d9e60ff <unknown>\n#7 0x55d77da144b2 <unknown>\n#8 0x55d77d9e5a79 <unknown>\n#9 0x55d77da1467e <unknown>\n#10 0x55d77da332cc <unknown>\n#11 0x55d77da14253 <unknown>\n#12 0x55d77d9e41c7 <unknown>\n#13 0x55d77d9e4b3e <unknown>\n#14 0x55d77dc8230b <unknown>\n#15 0x55d77dc863b7 <unknown>\n#16 0x55d77dc6ee3e <unknown>\n#17 0x55d77dc86e82 <unknown>\n#18 0x55d77dc537df <unknown>\n#19 0x55d77dcab1b8 <unknown>\n#20 0x55d77dcab38b <unknown>\n#21 0x55d77dcbaffc <unknown>\n#22 0x7f23bce35134 <unknown>","time":{"start":1715994699665,"stop":1715994701958,"duration":2293}},{"uid":"f4193c3d3e5239a","reportUrl":"https://Nat754.github.io/StroyremAutomation/310//#testresult/f4193c3d3e5239a","status":"passed","time":{"start":1715908134077,"stop":1715908145211,"duration":11134}},{"uid":"ca0f88b5f787957c","reportUrl":"https://Nat754.github.io/StroyremAutomation/309//#testresult/ca0f88b5f787957c","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x560935574eca <unknown>\n#1 0x56093525e45c <unknown>\n#2 0x5609352b1336 <unknown>\n#3 0x5609352af176 <unknown>\n#4 0x5609352acb57 <unknown>\n#5 0x5609352ab97c <unknown>\n#6 0x56093529f0ff <unknown>\n#7 0x5609352cd4b2 <unknown>\n#8 0x56093529ea79 <unknown>\n#9 0x5609352cd67e <unknown>\n#10 0x5609352ec2cc <unknown>\n#11 0x5609352cd253 <unknown>\n#12 0x56093529d1c7 <unknown>\n#13 0x56093529db3e <unknown>\n#14 0x56093553b30b <unknown>\n#15 0x56093553f3b7 <unknown>\n#16 0x560935527e3e <unknown>\n#17 0x56093553fe82 <unknown>\n#18 0x56093550c7df <unknown>\n#19 0x5609355641b8 <unknown>\n#20 0x56093556438b <unknown>\n#21 0x560935573ffc <unknown>\n#22 0x7fbda109e134 <unknown>","time":{"start":1715821943885,"stop":1715821946172,"duration":2287}},{"uid":"ce263d61e009e0d3","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/ce263d61e009e0d3","status":"passed","time":{"start":1715735329416,"stop":1715735339474,"duration":10058}},{"uid":"de79df811abb18d7","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/de79df811abb18d7","status":"passed","time":{"start":1715648906528,"stop":1715648915744,"duration":9216}},{"uid":"9ac856bb1976b59b","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/9ac856bb1976b59b","status":"passed","time":{"start":1715562803783,"stop":1715562813156,"duration":9373}},{"uid":"6361df9e06d87b7f","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/6361df9e06d87b7f","status":"passed","time":{"start":1715476228529,"stop":1715476236762,"duration":8233}},{"uid":"d5e900d7c758394d","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/d5e900d7c758394d","status":"passed","time":{"start":1715389523597,"stop":1715389531322,"duration":7725}},{"uid":"230689110ac3e09f","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/230689110ac3e09f","status":"passed","time":{"start":1715303462117,"stop":1715303470783,"duration":8666}},{"uid":"27ecfd40f84a6d40","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/27ecfd40f84a6d40","status":"passed","time":{"start":1715216760173,"stop":1715216768062,"duration":7889}},{"uid":"4245d4ad01df2f27","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/4245d4ad01df2f27","status":"passed","time":{"start":1715130071536,"stop":1715130080533,"duration":8997}},{"uid":"42c99c03965eaa5b","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/42c99c03965eaa5b","status":"passed","time":{"start":1715043942862,"stop":1715043950543,"duration":7681}},{"uid":"4ce077807237f0fa","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/4ce077807237f0fa","status":"passed","time":{"start":1714957601128,"stop":1714957609047,"duration":7919}},{"uid":"3891646376659b0b","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/3891646376659b0b","status":"passed","time":{"start":1714871340428,"stop":1714871348343,"duration":7915}},{"uid":"88fc48945b8f9620","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/88fc48945b8f9620","status":"passed","time":{"start":1714784734084,"stop":1714784741837,"duration":7753}},{"uid":"917d87016bf497fd","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/917d87016bf497fd","status":"passed","time":{"start":1714698590382,"stop":1714698598308,"duration":7926}},{"uid":"a784ad85e63aee2e","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/a784ad85e63aee2e","status":"passed","time":{"start":1714611881241,"stop":1714611888927,"duration":7686}},{"uid":"1127c0b48699f5ed","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/1127c0b48699f5ed","status":"passed","time":{"start":1714525738686,"stop":1714525746649,"duration":7963}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"b84d4b8141996340.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}