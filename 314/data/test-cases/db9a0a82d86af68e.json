{"uid":"db9a0a82d86af68e","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke","historyId":"60ac608ef0b195b1f9aff92ab9d21fa8","time":{"start":1716253873425,"stop":1716253875737,"duration":2312},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x564fb2257eca <unknown>\n#1 0x564fb1f4145c <unknown>\n#2 0x564fb1f94336 <unknown>\n#3 0x564fb1f92176 <unknown>\n#4 0x564fb1f8fb57 <unknown>\n#5 0x564fb1f8e97c <unknown>\n#6 0x564fb1f820ff <unknown>\n#7 0x564fb1fb04b2 <unknown>\n#8 0x564fb1f81a79 <unknown>\n#9 0x564fb1fb067e <unknown>\n#10 0x564fb1fcf2cc <unknown>\n#11 0x564fb1fb0253 <unknown>\n#12 0x564fb1f801c7 <unknown>\n#13 0x564fb1f80b3e <unknown>\n#14 0x564fb221e30b <unknown>\n#15 0x564fb22223b7 <unknown>\n#16 0x564fb220ae3e <unknown>\n#17 0x564fb2222e82 <unknown>\n#18 0x564fb21ef7df <unknown>\n#19 0x564fb22471b8 <unknown>\n#20 0x564fb224738b <unknown>\n#21 0x564fb2256ffc <unknown>\n#22 0x7f9bb8e35134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0cb61750>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0a8621d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0b85b210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564fb224738b \\\\u003Cunknown>\\\\n#21 0x564fb2256ffc \\\\u003Cunknown>\\\\n#22 0x7f9bb8e35134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x564fb2257eca <unknown>\nE       #1 0x564fb1f4145c <unknown>\nE       #2 0x564fb1f94336 <unknown>\nE       #3 0x564fb1f92176 <unknown>\nE       #4 0x564fb1f8fb57 <unknown>\nE       #5 0x564fb1f8e97c <unknown>\nE       #6 0x564fb1f820ff <unknown>\nE       #7 0x564fb1fb04b2 <unknown>\nE       #8 0x564fb1f81a79 <unknown>\nE       #9 0x564fb1fb067e <unknown>\nE       #10 0x564fb1fcf2cc <unknown>\nE       #11 0x564fb1fb0253 <unknown>\nE       #12 0x564fb1f801c7 <unknown>\nE       #13 0x564fb1f80b3e <unknown>\nE       #14 0x564fb221e30b <unknown>\nE       #15 0x564fb22223b7 <unknown>\nE       #16 0x564fb220ae3e <unknown>\nE       #17 0x564fb2222e82 <unknown>\nE       #18 0x564fb21ef7df <unknown>\nE       #19 0x564fb22471b8 <unknown>\nE       #20 0x564fb224738b <unknown>\nE       #21 0x564fb2256ffc <unknown>\nE       #22 0x7f9bb8e35134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716252743785,"stop":1716252743854,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1716252743854,"stop":1716252743854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1716253856951,"stop":1716253857644,"duration":693},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1716253857644,"stop":1716253857644,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1716253857644,"stop":1716253873424,"duration":15780},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x564fb2257eca <unknown>\n#1 0x564fb1f4145c <unknown>\n#2 0x564fb1f94336 <unknown>\n#3 0x564fb1f92176 <unknown>\n#4 0x564fb1f8fb57 <unknown>\n#5 0x564fb1f8e97c <unknown>\n#6 0x564fb1f820ff <unknown>\n#7 0x564fb1fb04b2 <unknown>\n#8 0x564fb1f81a79 <unknown>\n#9 0x564fb1fb067e <unknown>\n#10 0x564fb1fcf2cc <unknown>\n#11 0x564fb1fb0253 <unknown>\n#12 0x564fb1f801c7 <unknown>\n#13 0x564fb1f80b3e <unknown>\n#14 0x564fb221e30b <unknown>\n#15 0x564fb22223b7 <unknown>\n#16 0x564fb220ae3e <unknown>\n#17 0x564fb2222e82 <unknown>\n#18 0x564fb21ef7df <unknown>\n#19 0x564fb22471b8 <unknown>\n#20 0x564fb224738b <unknown>\n#21 0x564fb2256ffc <unknown>\n#22 0x7f9bb8e35134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0cb61750>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0a8621d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0b85b210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564fb224738b \\\\u003Cunknown>\\\\n#21 0x564fb2256ffc \\\\u003Cunknown>\\\\n#22 0x7f9bb8e35134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x564fb2257eca <unknown>\nE       #1 0x564fb1f4145c <unknown>\nE       #2 0x564fb1f94336 <unknown>\nE       #3 0x564fb1f92176 <unknown>\nE       #4 0x564fb1f8fb57 <unknown>\nE       #5 0x564fb1f8e97c <unknown>\nE       #6 0x564fb1f820ff <unknown>\nE       #7 0x564fb1fb04b2 <unknown>\nE       #8 0x564fb1f81a79 <unknown>\nE       #9 0x564fb1fb067e <unknown>\nE       #10 0x564fb1fcf2cc <unknown>\nE       #11 0x564fb1fb0253 <unknown>\nE       #12 0x564fb1f801c7 <unknown>\nE       #13 0x564fb1f80b3e <unknown>\nE       #14 0x564fb221e30b <unknown>\nE       #15 0x564fb22223b7 <unknown>\nE       #16 0x564fb220ae3e <unknown>\nE       #17 0x564fb2222e82 <unknown>\nE       #18 0x564fb21ef7df <unknown>\nE       #19 0x564fb22471b8 <unknown>\nE       #20 0x564fb224738b <unknown>\nE       #21 0x564fb2256ffc <unknown>\nE       #22 0x7f9bb8e35134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1716253873425,"stop":1716253873457,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1716253873530,"stop":1716253873557,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1716253874598,"stop":1716253874637,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"39c58f302ba49121","name":"Screenshot","source":"39c58f302ba49121.png","type":"image/png","size":163898},{"uid":"7d2cd191badd10d9","name":"HTML source","source":"7d2cd191badd10d9.html","type":"text/html","size":896636}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1716253875940,"stop":1716253875940,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1716253875941,"stop":1716253876021,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"bac0df4fc046"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/elektroinstrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":279,"unknown":0,"total":289},"items":[{"uid":"55f9e7a7104dbc5e","reportUrl":"https://Nat754.github.io/StroyremAutomation/313//#testresult/55f9e7a7104dbc5e","status":"passed","time":{"start":1716167271421,"stop":1716167280365,"duration":8944}},{"uid":"33b4697facd781b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/312//#testresult/33b4697facd781b3","status":"passed","time":{"start":1716081099265,"stop":1716081109662,"duration":10397}},{"uid":"b9fa2a2868059b01","reportUrl":"https://Nat754.github.io/StroyremAutomation/311//#testresult/b9fa2a2868059b01","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55da32c9deca <unknown>\n#1 0x55da3298745c <unknown>\n#2 0x55da329da336 <unknown>\n#3 0x55da329d8176 <unknown>\n#4 0x55da329d5b57 <unknown>\n#5 0x55da329d497c <unknown>\n#6 0x55da329c80ff <unknown>\n#7 0x55da329f64b2 <unknown>\n#8 0x55da329c7a79 <unknown>\n#9 0x55da329f667e <unknown>\n#10 0x55da32a152cc <unknown>\n#11 0x55da329f6253 <unknown>\n#12 0x55da329c61c7 <unknown>\n#13 0x55da329c6b3e <unknown>\n#14 0x55da32c6430b <unknown>\n#15 0x55da32c683b7 <unknown>\n#16 0x55da32c50e3e <unknown>\n#17 0x55da32c68e82 <unknown>\n#18 0x55da32c357df <unknown>\n#19 0x55da32c8d1b8 <unknown>\n#20 0x55da32c8d38b <unknown>\n#21 0x55da32c9cffc <unknown>\n#22 0x7f781e9de134 <unknown>","time":{"start":1715994602939,"stop":1715994605232,"duration":2293}},{"uid":"68011ab4ce8936fc","reportUrl":"https://Nat754.github.io/StroyremAutomation/310//#testresult/68011ab4ce8936fc","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5610c80b6eca <unknown>\n#1 0x5610c7da045c <unknown>\n#2 0x5610c7df3336 <unknown>\n#3 0x5610c7df1176 <unknown>\n#4 0x5610c7deeb57 <unknown>\n#5 0x5610c7ded97c <unknown>\n#6 0x5610c7de10ff <unknown>\n#7 0x5610c7e0f4b2 <unknown>\n#8 0x5610c7de0a79 <unknown>\n#9 0x5610c7e0f67e <unknown>\n#10 0x5610c7e2e2cc <unknown>\n#11 0x5610c7e0f253 <unknown>\n#12 0x5610c7ddf1c7 <unknown>\n#13 0x5610c7ddfb3e <unknown>\n#14 0x5610c807d30b <unknown>\n#15 0x5610c80813b7 <unknown>\n#16 0x5610c8069e3e <unknown>\n#17 0x5610c8081e82 <unknown>\n#18 0x5610c804e7df <unknown>\n#19 0x5610c80a61b8 <unknown>\n#20 0x5610c80a638b <unknown>\n#21 0x5610c80b5ffc <unknown>\n#22 0x7f9f08fe7134 <unknown>","time":{"start":1715908054596,"stop":1715908056893,"duration":2297}},{"uid":"73c55e28ad11e08d","reportUrl":"https://Nat754.github.io/StroyremAutomation/309//#testresult/73c55e28ad11e08d","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5618288cbeca <unknown>\n#1 0x5618285b545c <unknown>\n#2 0x561828608336 <unknown>\n#3 0x561828606176 <unknown>\n#4 0x561828603b57 <unknown>\n#5 0x56182860297c <unknown>\n#6 0x5618285f60ff <unknown>\n#7 0x5618286244b2 <unknown>\n#8 0x5618285f5a79 <unknown>\n#9 0x56182862467e <unknown>\n#10 0x5618286432cc <unknown>\n#11 0x561828624253 <unknown>\n#12 0x5618285f41c7 <unknown>\n#13 0x5618285f4b3e <unknown>\n#14 0x56182889230b <unknown>\n#15 0x5618288963b7 <unknown>\n#16 0x56182887ee3e <unknown>\n#17 0x561828896e82 <unknown>\n#18 0x5618288637df <unknown>\n#19 0x5618288bb1b8 <unknown>\n#20 0x5618288bb38b <unknown>\n#21 0x5618288caffc <unknown>\n#22 0x7f5aea3ef134 <unknown>","time":{"start":1715821846652,"stop":1715821848960,"duration":2308}},{"uid":"6040052cc5d6465c","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/6040052cc5d6465c","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=124.0.6367.207); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5615ba12bdc3 <unknown>\n#1 0x5615b9e1a4e7 <unknown>\n#2 0x5615b9e1fa9c <unknown>\n#3 0x5615b9e217ef <unknown>\n#4 0x5615b9e2187c <unknown>\n#5 0x5615b9e6becc <unknown>\n#6 0x5615b9e69eb6 <unknown>\n#7 0x5615b9e67887 <unknown>\n#8 0x5615b9e66c54 <unknown>\n#9 0x5615b9e5a209 <unknown>\n#10 0x5615b9e87452 <unknown>\n#11 0x5615b9e59b98 <unknown>\n#12 0x5615b9e8761e <unknown>\n#13 0x5615b9ea5c29 <unknown>\n#14 0x5615b9e871f3 <unknown>\n#15 0x5615b9e5828a <unknown>\n#16 0x5615b9e58c5e <unknown>\n#17 0x5615ba0f00eb <unknown>\n#18 0x5615ba0f403b <unknown>\n#19 0x5615ba0dc201 <unknown>\n#20 0x5615ba0f4ba2 <unknown>\n#21 0x5615ba0c10bf <unknown>\n#22 0x5615ba11af18 <unknown>\n#23 0x5615ba11b0f0 <unknown>\n#24 0x5615ba12af14 <unknown>\n#25 0x7f05c4b34134 <unknown>","time":{"start":1715735248890,"stop":1715735253735,"duration":4845}},{"uid":"42ba0458f6e1480f","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/42ba0458f6e1480f","status":"passed","time":{"start":1715648824030,"stop":1715648835023,"duration":10993}},{"uid":"600638a1f5a06db5","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/600638a1f5a06db5","status":"passed","time":{"start":1715562703126,"stop":1715562712825,"duration":9699}},{"uid":"b9358190caa2d15a","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/b9358190caa2d15a","status":"passed","time":{"start":1715476151875,"stop":1715476160149,"duration":8274}},{"uid":"5d08f2ce4dfbc81d","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/5d08f2ce4dfbc81d","status":"passed","time":{"start":1715389446965,"stop":1715389455192,"duration":8227}},{"uid":"5a2aa7561ffc74b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/5a2aa7561ffc74b1","status":"passed","time":{"start":1715303364420,"stop":1715303373303,"duration":8883}},{"uid":"dfd28cc63dcebf","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/dfd28cc63dcebf","status":"passed","time":{"start":1715216685003,"stop":1715216693075,"duration":8072}},{"uid":"aa44be380b531f71","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/aa44be380b531f71","status":"passed","time":{"start":1715129971810,"stop":1715129980976,"duration":9166}},{"uid":"8bad2bd684bc4ff","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/8bad2bd684bc4ff","status":"passed","time":{"start":1715043867129,"stop":1715043875261,"duration":8132}},{"uid":"25f15e8cd29dc82e","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/25f15e8cd29dc82e","status":"passed","time":{"start":1714957525382,"stop":1714957533968,"duration":8586}},{"uid":"5f5609488be32676","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/5f5609488be32676","status":"passed","time":{"start":1714871264063,"stop":1714871272313,"duration":8250}},{"uid":"481bd5f9d2c7016a","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/481bd5f9d2c7016a","status":"passed","time":{"start":1714784657124,"stop":1714784665362,"duration":8238}},{"uid":"b03e4627ccf8a8c","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/b03e4627ccf8a8c","status":"passed","time":{"start":1714698509201,"stop":1714698517462,"duration":8261}},{"uid":"6900aabc033ff75e","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/6900aabc033ff75e","status":"passed","time":{"start":1714611804739,"stop":1714611812953,"duration":8214}},{"uid":"1de7a2e8a9b276cb","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/1de7a2e8a9b276cb","status":"passed","time":{"start":1714525663982,"stop":1714525672143,"duration":8161}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"db9a0a82d86af68e.json","parameterValues":["'https://stroyrem-nn.ru/catalog/elektroinstrument'"]}