{"uid":"e57cadaeb673cd4a","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"8519a10778cf28e105209a17627cfb4a","time":{"start":1716253663522,"stop":1716253665839,"duration":2317},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55fefc0abeca <unknown>\n#1 0x55fefbd9545c <unknown>\n#2 0x55fefbde8336 <unknown>\n#3 0x55fefbde6176 <unknown>\n#4 0x55fefbde3b57 <unknown>\n#5 0x55fefbde297c <unknown>\n#6 0x55fefbdd60ff <unknown>\n#7 0x55fefbe044b2 <unknown>\n#8 0x55fefbdd5a79 <unknown>\n#9 0x55fefbe0467e <unknown>\n#10 0x55fefbe232cc <unknown>\n#11 0x55fefbe04253 <unknown>\n#12 0x55fefbdd41c7 <unknown>\n#13 0x55fefbdd4b3e <unknown>\n#14 0x55fefc07230b <unknown>\n#15 0x55fefc0763b7 <unknown>\n#16 0x55fefc05ee3e <unknown>\n#17 0x55fefc076e82 <unknown>\n#18 0x55fefc0437df <unknown>\n#19 0x55fefc09b1b8 <unknown>\n#20 0x55fefc09b38b <unknown>\n#21 0x55fefc0aaffc <unknown>\n#22 0x7f21013f5134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0cb72d10>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0b8d2d90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0a80e5d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fefc09b38b \\\\u003Cunknown>\\\\n#21 0x55fefc0aaffc \\\\u003Cunknown>\\\\n#22 0x7f21013f5134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55fefc0abeca <unknown>\nE       #1 0x55fefbd9545c <unknown>\nE       #2 0x55fefbde8336 <unknown>\nE       #3 0x55fefbde6176 <unknown>\nE       #4 0x55fefbde3b57 <unknown>\nE       #5 0x55fefbde297c <unknown>\nE       #6 0x55fefbdd60ff <unknown>\nE       #7 0x55fefbe044b2 <unknown>\nE       #8 0x55fefbdd5a79 <unknown>\nE       #9 0x55fefbe0467e <unknown>\nE       #10 0x55fefbe232cc <unknown>\nE       #11 0x55fefbe04253 <unknown>\nE       #12 0x55fefbdd41c7 <unknown>\nE       #13 0x55fefbdd4b3e <unknown>\nE       #14 0x55fefc07230b <unknown>\nE       #15 0x55fefc0763b7 <unknown>\nE       #16 0x55fefc05ee3e <unknown>\nE       #17 0x55fefc076e82 <unknown>\nE       #18 0x55fefc0437df <unknown>\nE       #19 0x55fefc09b1b8 <unknown>\nE       #20 0x55fefc09b38b <unknown>\nE       #21 0x55fefc0aaffc <unknown>\nE       #22 0x7f21013f5134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716252743785,"stop":1716252743854,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1716252743854,"stop":1716252743854,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1716253650124,"stop":1716253650818,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1716253650819,"stop":1716253650819,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1716253650819,"stop":1716253663521,"duration":12702},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55fefc0abeca <unknown>\n#1 0x55fefbd9545c <unknown>\n#2 0x55fefbde8336 <unknown>\n#3 0x55fefbde6176 <unknown>\n#4 0x55fefbde3b57 <unknown>\n#5 0x55fefbde297c <unknown>\n#6 0x55fefbdd60ff <unknown>\n#7 0x55fefbe044b2 <unknown>\n#8 0x55fefbdd5a79 <unknown>\n#9 0x55fefbe0467e <unknown>\n#10 0x55fefbe232cc <unknown>\n#11 0x55fefbe04253 <unknown>\n#12 0x55fefbdd41c7 <unknown>\n#13 0x55fefbdd4b3e <unknown>\n#14 0x55fefc07230b <unknown>\n#15 0x55fefc0763b7 <unknown>\n#16 0x55fefc05ee3e <unknown>\n#17 0x55fefc076e82 <unknown>\n#18 0x55fefc0437df <unknown>\n#19 0x55fefc09b1b8 <unknown>\n#20 0x55fefc09b38b <unknown>\n#21 0x55fefc0aaffc <unknown>\n#22 0x7f21013f5134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9d0cb72d10>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9d0b8d2d90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9d0a80e5d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fefc09b38b \\\\u003Cunknown>\\\\n#21 0x55fefc0aaffc \\\\u003Cunknown>\\\\n#22 0x7f21013f5134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55fefc0abeca <unknown>\nE       #1 0x55fefbd9545c <unknown>\nE       #2 0x55fefbde8336 <unknown>\nE       #3 0x55fefbde6176 <unknown>\nE       #4 0x55fefbde3b57 <unknown>\nE       #5 0x55fefbde297c <unknown>\nE       #6 0x55fefbdd60ff <unknown>\nE       #7 0x55fefbe044b2 <unknown>\nE       #8 0x55fefbdd5a79 <unknown>\nE       #9 0x55fefbe0467e <unknown>\nE       #10 0x55fefbe232cc <unknown>\nE       #11 0x55fefbe04253 <unknown>\nE       #12 0x55fefbdd41c7 <unknown>\nE       #13 0x55fefbdd4b3e <unknown>\nE       #14 0x55fefc07230b <unknown>\nE       #15 0x55fefc0763b7 <unknown>\nE       #16 0x55fefc05ee3e <unknown>\nE       #17 0x55fefc076e82 <unknown>\nE       #18 0x55fefc0437df <unknown>\nE       #19 0x55fefc09b1b8 <unknown>\nE       #20 0x55fefc09b38b <unknown>\nE       #21 0x55fefc0aaffc <unknown>\nE       #22 0x7f21013f5134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1716253663522,"stop":1716253663555,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1716253663621,"stop":1716253663657,"duration":36},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1716253664700,"stop":1716253664743,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5c73720f5f25b7f2","name":"Screenshot","source":"5c73720f5f25b7f2.png","type":"image/png","size":128710},{"uid":"44ba83b6a292c72f","name":"HTML source","source":"44ba83b6a292c72f.html","type":"text/html","size":922031}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1716253666031,"stop":1716253666031,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1716253666032,"stop":1716253666106,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"bac0df4fc046"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":286,"unknown":0,"total":295},"items":[{"uid":"85f13e7e23603614","reportUrl":"https://Nat754.github.io/StroyremAutomation/313//#testresult/85f13e7e23603614","status":"passed","time":{"start":1716167059568,"stop":1716167069670,"duration":10102}},{"uid":"149f4d9eab92dfa7","reportUrl":"https://Nat754.github.io/StroyremAutomation/312//#testresult/149f4d9eab92dfa7","status":"passed","time":{"start":1716080881613,"stop":1716080893156,"duration":11543}},{"uid":"b4ac6879d1141217","reportUrl":"https://Nat754.github.io/StroyremAutomation/311//#testresult/b4ac6879d1141217","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x562cf4112eca <unknown>\n#1 0x562cf3dfc45c <unknown>\n#2 0x562cf3e4f336 <unknown>\n#3 0x562cf3e4d176 <unknown>\n#4 0x562cf3e4ab57 <unknown>\n#5 0x562cf3e4997c <unknown>\n#6 0x562cf3e3d0ff <unknown>\n#7 0x562cf3e6b4b2 <unknown>\n#8 0x562cf3e3ca79 <unknown>\n#9 0x562cf3e6b67e <unknown>\n#10 0x562cf3e8a2cc <unknown>\n#11 0x562cf3e6b253 <unknown>\n#12 0x562cf3e3b1c7 <unknown>\n#13 0x562cf3e3bb3e <unknown>\n#14 0x562cf40d930b <unknown>\n#15 0x562cf40dd3b7 <unknown>\n#16 0x562cf40c5e3e <unknown>\n#17 0x562cf40dde82 <unknown>\n#18 0x562cf40aa7df <unknown>\n#19 0x562cf41021b8 <unknown>\n#20 0x562cf410238b <unknown>\n#21 0x562cf4111ffc <unknown>\n#22 0x7fdba5268134 <unknown>","time":{"start":1715994401858,"stop":1715994404163,"duration":2305}},{"uid":"7050a15ad69ddcdf","reportUrl":"https://Nat754.github.io/StroyremAutomation/310//#testresult/7050a15ad69ddcdf","status":"passed","time":{"start":1715907846035,"stop":1715907857658,"duration":11623}},{"uid":"a31239e64636570c","reportUrl":"https://Nat754.github.io/StroyremAutomation/309//#testresult/a31239e64636570c","status":"passed","time":{"start":1715821612646,"stop":1715821625804,"duration":13158}},{"uid":"6bd8bca35cc2d73e","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/6bd8bca35cc2d73e","status":"passed","time":{"start":1715735029968,"stop":1715735041269,"duration":11301}},{"uid":"9cb95e28380c7d77","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/9cb95e28380c7d77","status":"passed","time":{"start":1715648614819,"stop":1715648625085,"duration":10266}},{"uid":"ed0f242c14e33cd4","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/ed0f242c14e33cd4","status":"passed","time":{"start":1715562456432,"stop":1715562467314,"duration":10882}},{"uid":"177b93e910fa96","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/177b93e910fa96","status":"passed","time":{"start":1715475954834,"stop":1715475963860,"duration":9026}},{"uid":"c6a339d36ceea9ca","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/c6a339d36ceea9ca","status":"passed","time":{"start":1715389250127,"stop":1715389259278,"duration":9151}},{"uid":"364c88f1ceee1b3a","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/364c88f1ceee1b3a","status":"passed","time":{"start":1715303122718,"stop":1715303133105,"duration":10387}},{"uid":"9dcc05192f8bf900","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/9dcc05192f8bf900","status":"passed","time":{"start":1715216490611,"stop":1715216499716,"duration":9105}},{"uid":"7fa84bcaf4586032","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/7fa84bcaf4586032","status":"passed","time":{"start":1715129729549,"stop":1715129739902,"duration":10353}},{"uid":"9b088afd41d384ce","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/9b088afd41d384ce","status":"passed","time":{"start":1715043671705,"stop":1715043681026,"duration":9321}},{"uid":"c3572f0d254ac69d","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/c3572f0d254ac69d","status":"passed","time":{"start":1714957329171,"stop":1714957338593,"duration":9422}},{"uid":"7e06e1755260ecdf","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/7e06e1755260ecdf","status":"passed","time":{"start":1714871067304,"stop":1714871076549,"duration":9245}},{"uid":"cf0526747e5149f6","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/cf0526747e5149f6","status":"passed","time":{"start":1714784459146,"stop":1714784468620,"duration":9474}},{"uid":"3a99e59b25455cfd","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/3a99e59b25455cfd","status":"passed","time":{"start":1714698300705,"stop":1714698310086,"duration":9381}},{"uid":"94f0fd42bf0da41d","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/94f0fd42bf0da41d","status":"passed","time":{"start":1714611606907,"stop":1714611616354,"duration":9447}},{"uid":"5337ab5038d8dfe0","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/5337ab5038d8dfe0","status":"passed","time":{"start":1714525470078,"stop":1714525479268,"duration":9190}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"e57cadaeb673cd4a.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}