{"uid":"949ebc3026df1631","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"15991ae52c76717db33988570d6dec01","time":{"start":1721438418632,"stop":1721438420913,"duration":2281},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.182)\nStacktrace:\n#0 0x55aa4aa06c5a <unknown>\n#1 0x55aa4a6e9e2c <unknown>\n#2 0x55aa4a73d406 <unknown>\n#3 0x55aa4a73b246 <unknown>\n#4 0x55aa4a738c27 <unknown>\n#5 0x55aa4a737a60 <unknown>\n#6 0x55aa4a72b15f <unknown>\n#7 0x55aa4a7595c2 <unknown>\n#8 0x55aa4a72aad9 <unknown>\n#9 0x55aa4a75978e <unknown>\n#10 0x55aa4a778303 <unknown>\n#11 0x55aa4a759363 <unknown>\n#12 0x55aa4a729247 <unknown>\n#13 0x55aa4a729b9e <unknown>\n#14 0x55aa4a9cd22b <unknown>\n#15 0x55aa4a9d12d1 <unknown>\n#16 0x55aa4a9b8ade <unknown>\n#17 0x55aa4a9d1e32 <unknown>\n#18 0x55aa4a99d77f <unknown>\n#19 0x55aa4a9f6618 <unknown>\n#20 0x55aa4a9f67f0 <unknown>\n#21 0x55aa4aa05d8c <unknown>\n#22 0x7f4bf7efb134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f850f0d7690>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f850ea69110>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f850f0f9350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55aa4a9f67f0 \\\\u003Cunknown>\\\\n#21 0x55aa4aa05d8c \\\\u003Cunknown>\\\\n#22 0x7f4bf7efb134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.182)\nE       Stacktrace:\nE       #0 0x55aa4aa06c5a <unknown>\nE       #1 0x55aa4a6e9e2c <unknown>\nE       #2 0x55aa4a73d406 <unknown>\nE       #3 0x55aa4a73b246 <unknown>\nE       #4 0x55aa4a738c27 <unknown>\nE       #5 0x55aa4a737a60 <unknown>\nE       #6 0x55aa4a72b15f <unknown>\nE       #7 0x55aa4a7595c2 <unknown>\nE       #8 0x55aa4a72aad9 <unknown>\nE       #9 0x55aa4a75978e <unknown>\nE       #10 0x55aa4a778303 <unknown>\nE       #11 0x55aa4a759363 <unknown>\nE       #12 0x55aa4a729247 <unknown>\nE       #13 0x55aa4a729b9e <unknown>\nE       #14 0x55aa4a9cd22b <unknown>\nE       #15 0x55aa4a9d12d1 <unknown>\nE       #16 0x55aa4a9b8ade <unknown>\nE       #17 0x55aa4a9d1e32 <unknown>\nE       #18 0x55aa4a99d77f <unknown>\nE       #19 0x55aa4a9f6618 <unknown>\nE       #20 0x55aa4a9f67f0 <unknown>\nE       #21 0x55aa4aa05d8c <unknown>\nE       #22 0x7f4bf7efb134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721436907673,"stop":1721436907741,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1721436907741,"stop":1721436907741,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721438408128,"stop":1721438408820,"duration":692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1721438408820,"stop":1721438418631,"duration":9811},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721438408820,"stop":1721438408820,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.182)\nStacktrace:\n#0 0x55aa4aa06c5a <unknown>\n#1 0x55aa4a6e9e2c <unknown>\n#2 0x55aa4a73d406 <unknown>\n#3 0x55aa4a73b246 <unknown>\n#4 0x55aa4a738c27 <unknown>\n#5 0x55aa4a737a60 <unknown>\n#6 0x55aa4a72b15f <unknown>\n#7 0x55aa4a7595c2 <unknown>\n#8 0x55aa4a72aad9 <unknown>\n#9 0x55aa4a75978e <unknown>\n#10 0x55aa4a778303 <unknown>\n#11 0x55aa4a759363 <unknown>\n#12 0x55aa4a729247 <unknown>\n#13 0x55aa4a729b9e <unknown>\n#14 0x55aa4a9cd22b <unknown>\n#15 0x55aa4a9d12d1 <unknown>\n#16 0x55aa4a9b8ade <unknown>\n#17 0x55aa4a9d1e32 <unknown>\n#18 0x55aa4a99d77f <unknown>\n#19 0x55aa4a9f6618 <unknown>\n#20 0x55aa4a9f67f0 <unknown>\n#21 0x55aa4aa05d8c <unknown>\n#22 0x7f4bf7efb134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f850f0d7690>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f850ea69110>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f850f0f9350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55aa4a9f67f0 \\\\u003Cunknown>\\\\n#21 0x55aa4aa05d8c \\\\u003Cunknown>\\\\n#22 0x7f4bf7efb134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.182)\nE       Stacktrace:\nE       #0 0x55aa4aa06c5a <unknown>\nE       #1 0x55aa4a6e9e2c <unknown>\nE       #2 0x55aa4a73d406 <unknown>\nE       #3 0x55aa4a73b246 <unknown>\nE       #4 0x55aa4a738c27 <unknown>\nE       #5 0x55aa4a737a60 <unknown>\nE       #6 0x55aa4a72b15f <unknown>\nE       #7 0x55aa4a7595c2 <unknown>\nE       #8 0x55aa4a72aad9 <unknown>\nE       #9 0x55aa4a75978e <unknown>\nE       #10 0x55aa4a778303 <unknown>\nE       #11 0x55aa4a759363 <unknown>\nE       #12 0x55aa4a729247 <unknown>\nE       #13 0x55aa4a729b9e <unknown>\nE       #14 0x55aa4a9cd22b <unknown>\nE       #15 0x55aa4a9d12d1 <unknown>\nE       #16 0x55aa4a9b8ade <unknown>\nE       #17 0x55aa4a9d1e32 <unknown>\nE       #18 0x55aa4a99d77f <unknown>\nE       #19 0x55aa4a9f6618 <unknown>\nE       #20 0x55aa4a9f67f0 <unknown>\nE       #21 0x55aa4aa05d8c <unknown>\nE       #22 0x7f4bf7efb134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1721438418632,"stop":1721438418661,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1721438418711,"stop":1721438418743,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1721438419778,"stop":1721438419816,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"5341bd37e843e267","name":"Screenshot","source":"5341bd37e843e267.png","type":"image/png","size":88583},{"uid":"1548f219824573cc","name":"HTML source","source":"1548f219824573cc.html","type":"text/html","size":722162}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1721438421074,"stop":1721438421146,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1721438421074,"stop":1721438421074,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"9317d4a23ef6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":50,"unknown":0,"total":52},"items":[{"uid":"691df3e42795524d","reportUrl":"https://Nat754.github.io/StroyremAutomation/373//#testresult/691df3e42795524d","status":"passed","time":{"start":1721352154162,"stop":1721352166375,"duration":12213}},{"uid":"7027b254d38025c","reportUrl":"https://Nat754.github.io/StroyremAutomation/372//#testresult/7027b254d38025c","status":"passed","time":{"start":1721265660494,"stop":1721265673785,"duration":13291}},{"uid":"82c2ccd3007f736d","reportUrl":"https://Nat754.github.io/StroyremAutomation/371//#testresult/82c2ccd3007f736d","status":"passed","time":{"start":1721179068108,"stop":1721179079408,"duration":11300}},{"uid":"997805478df5819e","reportUrl":"https://Nat754.github.io/StroyremAutomation/370//#testresult/997805478df5819e","status":"passed","time":{"start":1721092946524,"stop":1721092958961,"duration":12437}},{"uid":"27d4494335138994","reportUrl":"https://Nat754.github.io/StroyremAutomation/369//#testresult/27d4494335138994","status":"passed","time":{"start":1721007264348,"stop":1721007276710,"duration":12362}},{"uid":"f2c09df6d57403d9","reportUrl":"https://Nat754.github.io/StroyremAutomation/368//#testresult/f2c09df6d57403d9","status":"passed","time":{"start":1720920142740,"stop":1720920153949,"duration":11209}},{"uid":"9eb607769d150b3f","reportUrl":"https://Nat754.github.io/StroyremAutomation/367//#testresult/9eb607769d150b3f","status":"passed","time":{"start":1720833435489,"stop":1720833447506,"duration":12017}},{"uid":"dc1a973686db3c75","reportUrl":"https://Nat754.github.io/StroyremAutomation/366//#testresult/dc1a973686db3c75","status":"passed","time":{"start":1720747347200,"stop":1720747359791,"duration":12591}},{"uid":"6e1cae50e8c17417","reportUrl":"https://Nat754.github.io/StroyremAutomation/365//#testresult/6e1cae50e8c17417","status":"passed","time":{"start":1720660796404,"stop":1720660809999,"duration":13595}},{"uid":"376905af888f69d6","reportUrl":"https://Nat754.github.io/StroyremAutomation/364//#testresult/376905af888f69d6","status":"passed","time":{"start":1720574371990,"stop":1720574383431,"duration":11441}},{"uid":"852b5e103585e69f","reportUrl":"https://Nat754.github.io/StroyremAutomation/363//#testresult/852b5e103585e69f","status":"passed","time":{"start":1720488084906,"stop":1720488097204,"duration":12298}},{"uid":"a302e247254f4b8","reportUrl":"https://Nat754.github.io/StroyremAutomation/362//#testresult/a302e247254f4b8","status":"passed","time":{"start":1720401487920,"stop":1720401499953,"duration":12033}},{"uid":"ba03ce9b59eb383","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/ba03ce9b59eb383","status":"passed","time":{"start":1720315254009,"stop":1720315266644,"duration":12635}},{"uid":"e513b555e2e8123a","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/e513b555e2e8123a","status":"passed","time":{"start":1720228592079,"stop":1720228603850,"duration":11771}},{"uid":"ef70c917b362fa0c","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/ef70c917b362fa0c","status":"passed","time":{"start":1720142177849,"stop":1720142189222,"duration":11373}},{"uid":"3764dce119543aa9","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/3764dce119543aa9","status":"passed","time":{"start":1720055864603,"stop":1720055876129,"duration":11526}},{"uid":"9d7537abec255e69","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/9d7537abec255e69","status":"passed","time":{"start":1719969515264,"stop":1719969526664,"duration":11400}},{"uid":"2ecb6450b2146751","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/2ecb6450b2146751","status":"passed","time":{"start":1719883100417,"stop":1719883112161,"duration":11744}},{"uid":"c8aae19c508df0f9","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/c8aae19c508df0f9","status":"passed","time":{"start":1719796918667,"stop":1719796930914,"duration":12247}},{"uid":"2bc0b2eab3565dfc","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/2bc0b2eab3565dfc","status":"passed","time":{"start":1719710434176,"stop":1719710445047,"duration":10871}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"949ebc3026df1631.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}