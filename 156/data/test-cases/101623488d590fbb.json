{"uid":"101623488d590fbb","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"7f4f129a3704d352785ddaeba828a7cd","time":{"start":1702602211707,"stop":1702602215988,"duration":4281},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55645acd8d33 <unknown>\n#1 0x55645a995f87 <unknown>\n#2 0x55645a99c533 <unknown>\n#3 0x55645a99ea28 <unknown>\n#4 0x55645a99eb7c <unknown>\n#5 0x55645a9edf21 <unknown>\n#6 0x55645a9eba64 <unknown>\n#7 0x55645a9e8b04 <unknown>\n#8 0x55645a9e7729 <unknown>\n#9 0x55645a9d9583 <unknown>\n#10 0x55645aa0f342 <unknown>\n#11 0x55645a9d8db9 <unknown>\n#12 0x55645aa0f75e <unknown>\n#13 0x55645aa2e297 <unknown>\n#14 0x55645aa0f0e3 <unknown>\n#15 0x55645a9d7044 <unknown>\n#16 0x55645a9d844e <unknown>\n#17 0x55645ac9d861 <unknown>\n#18 0x55645aca1785 <unknown>\n#19 0x55645ac8b285 <unknown>\n#20 0x55645aca241f <unknown>\n#21 0x55645ac6f20f <unknown>\n#22 0x55645acc6028 <unknown>\n#23 0x55645acc61f7 <unknown>\n#24 0x55645acd7ed4 <unknown>\n#25 0x7f48e0f34044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab72a90>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff19971eb50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2]))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abacf50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55645acc61f7 \\\\u003Cunknown>\\\\n#24 0x55645acd7ed4 \\\\u003Cunknown>\\\\n#25 0x7f48e0f34044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55645acd8d33 <unknown>\nE       #1 0x55645a995f87 <unknown>\nE       #2 0x55645a99c533 <unknown>\nE       #3 0x55645a99ea28 <unknown>\nE       #4 0x55645a99eb7c <unknown>\nE       #5 0x55645a9edf21 <unknown>\nE       #6 0x55645a9eba64 <unknown>\nE       #7 0x55645a9e8b04 <unknown>\nE       #8 0x55645a9e7729 <unknown>\nE       #9 0x55645a9d9583 <unknown>\nE       #10 0x55645aa0f342 <unknown>\nE       #11 0x55645a9d8db9 <unknown>\nE       #12 0x55645aa0f75e <unknown>\nE       #13 0x55645aa2e297 <unknown>\nE       #14 0x55645aa0f0e3 <unknown>\nE       #15 0x55645a9d7044 <unknown>\nE       #16 0x55645a9d844e <unknown>\nE       #17 0x55645ac9d861 <unknown>\nE       #18 0x55645aca1785 <unknown>\nE       #19 0x55645ac8b285 <unknown>\nE       #20 0x55645aca241f <unknown>\nE       #21 0x55645ac6f20f <unknown>\nE       #22 0x55645acc6028 <unknown>\nE       #23 0x55645acc61f7 <unknown>\nE       #24 0x55645acd7ed4 <unknown>\nE       #25 0x7f48e0f34044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702601523080,"stop":1702601523150,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702601523150,"stop":1702601523150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702602200250,"stop":1702602201050,"duration":800},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702602201050,"stop":1702602201050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702602201050,"stop":1702602211707,"duration":10657},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55645acd8d33 <unknown>\n#1 0x55645a995f87 <unknown>\n#2 0x55645a99c533 <unknown>\n#3 0x55645a99ea28 <unknown>\n#4 0x55645a99eb7c <unknown>\n#5 0x55645a9edf21 <unknown>\n#6 0x55645a9eba64 <unknown>\n#7 0x55645a9e8b04 <unknown>\n#8 0x55645a9e7729 <unknown>\n#9 0x55645a9d9583 <unknown>\n#10 0x55645aa0f342 <unknown>\n#11 0x55645a9d8db9 <unknown>\n#12 0x55645aa0f75e <unknown>\n#13 0x55645aa2e297 <unknown>\n#14 0x55645aa0f0e3 <unknown>\n#15 0x55645a9d7044 <unknown>\n#16 0x55645a9d844e <unknown>\n#17 0x55645ac9d861 <unknown>\n#18 0x55645aca1785 <unknown>\n#19 0x55645ac8b285 <unknown>\n#20 0x55645aca241f <unknown>\n#21 0x55645ac6f20f <unknown>\n#22 0x55645acc6028 <unknown>\n#23 0x55645acc61f7 <unknown>\n#24 0x55645acd7ed4 <unknown>\n#25 0x7f48e0f34044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab72a90>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff19971eb50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2]))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abacf50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55645acc61f7 \\\\u003Cunknown>\\\\n#24 0x55645acd7ed4 \\\\u003Cunknown>\\\\n#25 0x7f48e0f34044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.71); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55645acd8d33 <unknown>\nE       #1 0x55645a995f87 <unknown>\nE       #2 0x55645a99c533 <unknown>\nE       #3 0x55645a99ea28 <unknown>\nE       #4 0x55645a99eb7c <unknown>\nE       #5 0x55645a9edf21 <unknown>\nE       #6 0x55645a9eba64 <unknown>\nE       #7 0x55645a9e8b04 <unknown>\nE       #8 0x55645a9e7729 <unknown>\nE       #9 0x55645a9d9583 <unknown>\nE       #10 0x55645aa0f342 <unknown>\nE       #11 0x55645a9d8db9 <unknown>\nE       #12 0x55645aa0f75e <unknown>\nE       #13 0x55645aa2e297 <unknown>\nE       #14 0x55645aa0f0e3 <unknown>\nE       #15 0x55645a9d7044 <unknown>\nE       #16 0x55645a9d844e <unknown>\nE       #17 0x55645ac9d861 <unknown>\nE       #18 0x55645aca1785 <unknown>\nE       #19 0x55645ac8b285 <unknown>\nE       #20 0x55645aca241f <unknown>\nE       #21 0x55645ac6f20f <unknown>\nE       #22 0x55645acc6028 <unknown>\nE       #23 0x55645acc61f7 <unknown>\nE       #24 0x55645acd7ed4 <unknown>\nE       #25 0x7f48e0f34044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702602211707,"stop":1702602211739,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702602211787,"stop":1702602211831,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702602212864,"stop":1702602212905,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость цены товара","time":{"start":1702602215687,"stop":1702602215727,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1702602215737,"stop":1702602215789,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"be28e48644bb4863","name":"Screenshot","source":"be28e48644bb4863.png","type":"image/png","size":120666},{"uid":"e1405cb979a4a813","name":"HTML source","source":"e1405cb979a4a813.html","type":"text/html","size":934127}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1702602216215,"stop":1702602216215,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1702602216216,"stop":1702602216288,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"8a3fb8002ead"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":9,"skipped":0,"passed":78,"unknown":0,"total":87},"items":[{"uid":"2f58e9a4d1fb662f","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/2f58e9a4d1fb662f","status":"passed","time":{"start":1702515575273,"stop":1702515583145,"duration":7872}},{"uid":"7c946b87f01d9ab7","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/7c946b87f01d9ab7","status":"passed","time":{"start":1702453376440,"stop":1702453386083,"duration":9643}},{"uid":"eda4469188186d67","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/eda4469188186d67","status":"passed","time":{"start":1700614992380,"stop":1700615000309,"duration":7929}},{"uid":"49eaa32376a2e24c","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/49eaa32376a2e24c","status":"passed","time":{"start":1700528765059,"stop":1700528774067,"duration":9008}},{"uid":"6392cdb78ca30ec8","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/6392cdb78ca30ec8","status":"passed","time":{"start":1700442199235,"stop":1700442207506,"duration":8271}},{"uid":"7a7b6cf8f12829cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/7a7b6cf8f12829cf","status":"passed","time":{"start":1700355900856,"stop":1700355908980,"duration":8124}},{"uid":"7216c5decf719704","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/7216c5decf719704","status":"passed","time":{"start":1700269221836,"stop":1700269229855,"duration":8019}},{"uid":"cf63cd34e4043085","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/cf63cd34e4043085","status":"passed","time":{"start":1700183083125,"stop":1700183091844,"duration":8719}},{"uid":"29b14b7d95443c9c","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/29b14b7d95443c9c","status":"passed","time":{"start":1700096590736,"stop":1700096598853,"duration":8117}},{"uid":"e94620d7971e694e","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/e94620d7971e694e","status":"passed","time":{"start":1700010255551,"stop":1700010264193,"duration":8642}},{"uid":"a0d15fd81623a0b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/a0d15fd81623a0b6","status":"passed","time":{"start":1699923539430,"stop":1699923547214,"duration":7784}},{"uid":"18395efebbba80f0","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/18395efebbba80f0","status":"passed","time":{"start":1699837317014,"stop":1699837325358,"duration":8344}},{"uid":"61c6fc635bc81a99","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/61c6fc635bc81a99","status":"passed","time":{"start":1699751040902,"stop":1699751049812,"duration":8910}},{"uid":"ea67d4bd4807114c","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/ea67d4bd4807114c","status":"passed","time":{"start":1699664496242,"stop":1699664505498,"duration":9256}},{"uid":"6e54def29cec78ce","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/6e54def29cec78ce","status":"passed","time":{"start":1699577975904,"stop":1699577983753,"duration":7849}},{"uid":"459580166e64c5b8","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/459580166e64c5b8","status":"passed","time":{"start":1699491534114,"stop":1699491541885,"duration":7771}},{"uid":"8d6f1bca275452e6","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/8d6f1bca275452e6","status":"passed","time":{"start":1699405289780,"stop":1699405298880,"duration":9100}},{"uid":"861faa3b1d8ccb4a","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/861faa3b1d8ccb4a","status":"passed","time":{"start":1699318881871,"stop":1699318889788,"duration":7917}},{"uid":"722eb2df5fa3f58d","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/722eb2df5fa3f58d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699232566396,"stop":1699232591280,"duration":24884}},{"uid":"512402ccfc46a782","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/512402ccfc46a782","status":"passed","time":{"start":1699146426579,"stop":1699146435063,"duration":8484}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"101623488d590fbb.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}