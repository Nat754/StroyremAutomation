{"uid":"1764a7ff065d2905","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1702602350850,"stop":1702602353135,"duration":2285},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x562573eded33 <unknown>\n#1 0x562573b9bf87 <unknown>\n#2 0x562573bf4002 <unknown>\n#3 0x562573bf1a64 <unknown>\n#4 0x562573beeb04 <unknown>\n#5 0x562573bed729 <unknown>\n#6 0x562573bdf583 <unknown>\n#7 0x562573c15342 <unknown>\n#8 0x562573bdedb9 <unknown>\n#9 0x562573c1575e <unknown>\n#10 0x562573c34297 <unknown>\n#11 0x562573c150e3 <unknown>\n#12 0x562573bdd044 <unknown>\n#13 0x562573bde44e <unknown>\n#14 0x562573ea3861 <unknown>\n#15 0x562573ea7785 <unknown>\n#16 0x562573e91285 <unknown>\n#17 0x562573ea841f <unknown>\n#18 0x562573e7520f <unknown>\n#19 0x562573ecc028 <unknown>\n#20 0x562573ecc1f7 <unknown>\n#21 0x562573edded4 <unknown>\n#22 0x7f3ed9635044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab63990>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1997d9b10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abe4890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562573ecc1f7 \\\\u003Cunknown>\\\\n#21 0x562573edded4 \\\\u003Cunknown>\\\\n#22 0x7f3ed9635044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x562573eded33 <unknown>\nE       #1 0x562573b9bf87 <unknown>\nE       #2 0x562573bf4002 <unknown>\nE       #3 0x562573bf1a64 <unknown>\nE       #4 0x562573beeb04 <unknown>\nE       #5 0x562573bed729 <unknown>\nE       #6 0x562573bdf583 <unknown>\nE       #7 0x562573c15342 <unknown>\nE       #8 0x562573bdedb9 <unknown>\nE       #9 0x562573c1575e <unknown>\nE       #10 0x562573c34297 <unknown>\nE       #11 0x562573c150e3 <unknown>\nE       #12 0x562573bdd044 <unknown>\nE       #13 0x562573bde44e <unknown>\nE       #14 0x562573ea3861 <unknown>\nE       #15 0x562573ea7785 <unknown>\nE       #16 0x562573e91285 <unknown>\nE       #17 0x562573ea841f <unknown>\nE       #18 0x562573e7520f <unknown>\nE       #19 0x562573ecc028 <unknown>\nE       #20 0x562573ecc1f7 <unknown>\nE       #21 0x562573edded4 <unknown>\nE       #22 0x7f3ed9635044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702601523080,"stop":1702601523150,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702601523150,"stop":1702601523150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702602341636,"stop":1702602342416,"duration":780},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702602342416,"stop":1702602350850,"duration":8434},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702602342416,"stop":1702602342416,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x562573eded33 <unknown>\n#1 0x562573b9bf87 <unknown>\n#2 0x562573bf4002 <unknown>\n#3 0x562573bf1a64 <unknown>\n#4 0x562573beeb04 <unknown>\n#5 0x562573bed729 <unknown>\n#6 0x562573bdf583 <unknown>\n#7 0x562573c15342 <unknown>\n#8 0x562573bdedb9 <unknown>\n#9 0x562573c1575e <unknown>\n#10 0x562573c34297 <unknown>\n#11 0x562573c150e3 <unknown>\n#12 0x562573bdd044 <unknown>\n#13 0x562573bde44e <unknown>\n#14 0x562573ea3861 <unknown>\n#15 0x562573ea7785 <unknown>\n#16 0x562573e91285 <unknown>\n#17 0x562573ea841f <unknown>\n#18 0x562573e7520f <unknown>\n#19 0x562573ecc028 <unknown>\n#20 0x562573ecc1f7 <unknown>\n#21 0x562573edded4 <unknown>\n#22 0x7f3ed9635044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab63990>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1997d9b10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abe4890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562573ecc1f7 \\\\u003Cunknown>\\\\n#21 0x562573edded4 \\\\u003Cunknown>\\\\n#22 0x7f3ed9635044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x562573eded33 <unknown>\nE       #1 0x562573b9bf87 <unknown>\nE       #2 0x562573bf4002 <unknown>\nE       #3 0x562573bf1a64 <unknown>\nE       #4 0x562573beeb04 <unknown>\nE       #5 0x562573bed729 <unknown>\nE       #6 0x562573bdf583 <unknown>\nE       #7 0x562573c15342 <unknown>\nE       #8 0x562573bdedb9 <unknown>\nE       #9 0x562573c1575e <unknown>\nE       #10 0x562573c34297 <unknown>\nE       #11 0x562573c150e3 <unknown>\nE       #12 0x562573bdd044 <unknown>\nE       #13 0x562573bde44e <unknown>\nE       #14 0x562573ea3861 <unknown>\nE       #15 0x562573ea7785 <unknown>\nE       #16 0x562573e91285 <unknown>\nE       #17 0x562573ea841f <unknown>\nE       #18 0x562573e7520f <unknown>\nE       #19 0x562573ecc028 <unknown>\nE       #20 0x562573ecc1f7 <unknown>\nE       #21 0x562573edded4 <unknown>\nE       #22 0x7f3ed9635044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702602350851,"stop":1702602350885,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702602350962,"stop":1702602350991,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702602352031,"stop":1702602352070,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"9d87db9fcb75106","name":"Screenshot","source":"9d87db9fcb75106.png","type":"image/png","size":149840},{"uid":"9bc4827dcfcca9bd","name":"HTML source","source":"9bc4827dcfcca9bd.html","type":"text/html","size":840196}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1702602353328,"stop":1702602353328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1702602353328,"stop":1702602353400,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"8a3fb8002ead"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":132,"unknown":0,"total":135},"items":[{"uid":"9f888eb3b69cfed","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/9f888eb3b69cfed","status":"passed","time":{"start":1702515697486,"stop":1702515705578,"duration":8092}},{"uid":"393bd5a9490c1c6d","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/393bd5a9490c1c6d","status":"passed","time":{"start":1702453490237,"stop":1702453499275,"duration":9038}},{"uid":"3a3352c52567b904","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/3a3352c52567b904","status":"passed","time":{"start":1700615102742,"stop":1700615110737,"duration":7995}},{"uid":"b76e9c6b493790a9","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/b76e9c6b493790a9","status":"passed","time":{"start":1700528914860,"stop":1700528924119,"duration":9259}},{"uid":"162dc34ce8f57c9d","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/162dc34ce8f57c9d","status":"passed","time":{"start":1700442317009,"stop":1700442325336,"duration":8327}},{"uid":"b68dd207b2d1dff5","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/b68dd207b2d1dff5","status":"passed","time":{"start":1700356012415,"stop":1700356020415,"duration":8000}},{"uid":"e3449028b81e0a48","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/e3449028b81e0a48","status":"passed","time":{"start":1700269331960,"stop":1700269340352,"duration":8392}},{"uid":"7215ce6ea5962b2a","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/7215ce6ea5962b2a","status":"passed","time":{"start":1700183217873,"stop":1700183226880,"duration":9007}},{"uid":"d0ffba42eb22886","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/d0ffba42eb22886","status":"passed","time":{"start":1700096709210,"stop":1700096717389,"duration":8179}},{"uid":"f53b7699e454cc94","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/f53b7699e454cc94","status":"passed","time":{"start":1700010390915,"stop":1700010399460,"duration":8545}},{"uid":"152f5231673c4b6d","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/152f5231673c4b6d","status":"passed","time":{"start":1699923648035,"stop":1699923656072,"duration":8037}},{"uid":"bec9b712fd2817e0","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/bec9b712fd2817e0","status":"passed","time":{"start":1699837429760,"stop":1699837438263,"duration":8503}},{"uid":"11163a43815a8333","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/11163a43815a8333","status":"passed","time":{"start":1699751157630,"stop":1699751166614,"duration":8984}},{"uid":"52dfe476d520d2f2","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/52dfe476d520d2f2","status":"passed","time":{"start":1699664632957,"stop":1699664641971,"duration":9014}},{"uid":"b1e942c286edb215","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/b1e942c286edb215","status":"passed","time":{"start":1699578088920,"stop":1699578097053,"duration":8133}},{"uid":"37573c58a41bde2b","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/37573c58a41bde2b","status":"passed","time":{"start":1699491643259,"stop":1699491651134,"duration":7875}},{"uid":"5d7956237d5205a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/5d7956237d5205a5","status":"passed","time":{"start":1699405420077,"stop":1699405429191,"duration":9114}},{"uid":"5d856c85fa40d90a","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/5d856c85fa40d90a","status":"passed","time":{"start":1699318992912,"stop":1699319000869,"duration":7957}},{"uid":"ab93b21b6c48e73c","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/ab93b21b6c48e73c","status":"passed","time":{"start":1699232701417,"stop":1699232710806,"duration":9389}},{"uid":"197accbec699575d","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/197accbec699575d","status":"passed","time":{"start":1699146559140,"stop":1699146567940,"duration":8800}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"1764a7ff065d2905.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}