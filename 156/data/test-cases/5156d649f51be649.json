{"uid":"5156d649f51be649","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"efd25b243308c430f9522a855290012b","time":{"start":1702602197649,"stop":1702602199943,"duration":2294},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x557a84b18d33 <unknown>\n#1 0x557a847d5f87 <unknown>\n#2 0x557a8482e002 <unknown>\n#3 0x557a8482ba64 <unknown>\n#4 0x557a84828b04 <unknown>\n#5 0x557a84827729 <unknown>\n#6 0x557a84819583 <unknown>\n#7 0x557a8484f342 <unknown>\n#8 0x557a84818db9 <unknown>\n#9 0x557a8484f75e <unknown>\n#10 0x557a8486e297 <unknown>\n#11 0x557a8484f0e3 <unknown>\n#12 0x557a84817044 <unknown>\n#13 0x557a8481844e <unknown>\n#14 0x557a84add861 <unknown>\n#15 0x557a84ae1785 <unknown>\n#16 0x557a84acb285 <unknown>\n#17 0x557a84ae241f <unknown>\n#18 0x557a84aaf20f <unknown>\n#19 0x557a84b06028 <unknown>\n#20 0x557a84b061f7 <unknown>\n#21 0x557a84b17ed4 <unknown>\n#22 0x7ff4c077b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab72c50>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1997e2690>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff1997305d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557a84b061f7 \\\\u003Cunknown>\\\\n#21 0x557a84b17ed4 \\\\u003Cunknown>\\\\n#22 0x7ff4c077b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x557a84b18d33 <unknown>\nE       #1 0x557a847d5f87 <unknown>\nE       #2 0x557a8482e002 <unknown>\nE       #3 0x557a8482ba64 <unknown>\nE       #4 0x557a84828b04 <unknown>\nE       #5 0x557a84827729 <unknown>\nE       #6 0x557a84819583 <unknown>\nE       #7 0x557a8484f342 <unknown>\nE       #8 0x557a84818db9 <unknown>\nE       #9 0x557a8484f75e <unknown>\nE       #10 0x557a8486e297 <unknown>\nE       #11 0x557a8484f0e3 <unknown>\nE       #12 0x557a84817044 <unknown>\nE       #13 0x557a8481844e <unknown>\nE       #14 0x557a84add861 <unknown>\nE       #15 0x557a84ae1785 <unknown>\nE       #16 0x557a84acb285 <unknown>\nE       #17 0x557a84ae241f <unknown>\nE       #18 0x557a84aaf20f <unknown>\nE       #19 0x557a84b06028 <unknown>\nE       #20 0x557a84b061f7 <unknown>\nE       #21 0x557a84b17ed4 <unknown>\nE       #22 0x7ff4c077b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702601523080,"stop":1702601523150,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702601523150,"stop":1702601523150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702602189414,"stop":1702602190198,"duration":784},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702602190198,"stop":1702602197649,"duration":7451},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702602190198,"stop":1702602190198,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x557a84b18d33 <unknown>\n#1 0x557a847d5f87 <unknown>\n#2 0x557a8482e002 <unknown>\n#3 0x557a8482ba64 <unknown>\n#4 0x557a84828b04 <unknown>\n#5 0x557a84827729 <unknown>\n#6 0x557a84819583 <unknown>\n#7 0x557a8484f342 <unknown>\n#8 0x557a84818db9 <unknown>\n#9 0x557a8484f75e <unknown>\n#10 0x557a8486e297 <unknown>\n#11 0x557a8484f0e3 <unknown>\n#12 0x557a84817044 <unknown>\n#13 0x557a8481844e <unknown>\n#14 0x557a84add861 <unknown>\n#15 0x557a84ae1785 <unknown>\n#16 0x557a84acb285 <unknown>\n#17 0x557a84ae241f <unknown>\n#18 0x557a84aaf20f <unknown>\n#19 0x557a84b06028 <unknown>\n#20 0x557a84b061f7 <unknown>\n#21 0x557a84b17ed4 <unknown>\n#22 0x7ff4c077b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab72c50>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1997e2690>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff1997305d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557a84b061f7 \\\\u003Cunknown>\\\\n#21 0x557a84b17ed4 \\\\u003Cunknown>\\\\n#22 0x7ff4c077b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x557a84b18d33 <unknown>\nE       #1 0x557a847d5f87 <unknown>\nE       #2 0x557a8482e002 <unknown>\nE       #3 0x557a8482ba64 <unknown>\nE       #4 0x557a84828b04 <unknown>\nE       #5 0x557a84827729 <unknown>\nE       #6 0x557a84819583 <unknown>\nE       #7 0x557a8484f342 <unknown>\nE       #8 0x557a84818db9 <unknown>\nE       #9 0x557a8484f75e <unknown>\nE       #10 0x557a8486e297 <unknown>\nE       #11 0x557a8484f0e3 <unknown>\nE       #12 0x557a84817044 <unknown>\nE       #13 0x557a8481844e <unknown>\nE       #14 0x557a84add861 <unknown>\nE       #15 0x557a84ae1785 <unknown>\nE       #16 0x557a84acb285 <unknown>\nE       #17 0x557a84ae241f <unknown>\nE       #18 0x557a84aaf20f <unknown>\nE       #19 0x557a84b06028 <unknown>\nE       #20 0x557a84b061f7 <unknown>\nE       #21 0x557a84b17ed4 <unknown>\nE       #22 0x7ff4c077b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702602197649,"stop":1702602197686,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702602197752,"stop":1702602197787,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702602198827,"stop":1702602198869,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"4161501ef71550ce","name":"Screenshot","source":"4161501ef71550ce.png","type":"image/png","size":63558},{"uid":"c62587f5ac642720","name":"HTML source","source":"c62587f5ac642720.html","type":"text/html","size":926561}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1702602200182,"stop":1702602200249,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1702602200182,"stop":1702602200182,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"8a3fb8002ead"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":84,"unknown":0,"total":87},"items":[{"uid":"33eeac0f1f54c82d","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/33eeac0f1f54c82d","status":"passed","time":{"start":1702515557709,"stop":1702515565828,"duration":8119}},{"uid":"b6468af01207d5de","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/b6468af01207d5de","status":"passed","time":{"start":1702453355275,"stop":1702453364152,"duration":8877}},{"uid":"ce97a0ae08bfc81f","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/ce97a0ae08bfc81f","status":"passed","time":{"start":1700614974890,"stop":1700614982922,"duration":8032}},{"uid":"905f6d5f4e4b89e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/905f6d5f4e4b89e1","status":"passed","time":{"start":1700528742154,"stop":1700528751291,"duration":9137}},{"uid":"34e6bd08dae5be75","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/34e6bd08dae5be75","status":"passed","time":{"start":1700442180396,"stop":1700442188759,"duration":8363}},{"uid":"a3b43795aee1a18e","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/a3b43795aee1a18e","status":"passed","time":{"start":1700355882966,"stop":1700355891429,"duration":8463}},{"uid":"8dfa75bfb32ee06","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/8dfa75bfb32ee06","status":"passed","time":{"start":1700269204241,"stop":1700269212347,"duration":8106}},{"uid":"ba66a06ba79350aa","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/ba66a06ba79350aa","status":"passed","time":{"start":1700183061250,"stop":1700183070003,"duration":8753}},{"uid":"133155f1bc650e67","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/133155f1bc650e67","status":"passed","time":{"start":1700096571507,"stop":1700096580011,"duration":8504}},{"uid":"e327534e9a96cbb2","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/e327534e9a96cbb2","status":"passed","time":{"start":1700010233849,"stop":1700010242763,"duration":8914}},{"uid":"d1ebee43b4f97867","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/d1ebee43b4f97867","status":"passed","time":{"start":1699923522107,"stop":1699923530035,"duration":7928}},{"uid":"b200c4a32d7c77e","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/b200c4a32d7c77e","status":"passed","time":{"start":1699837298376,"stop":1699837307489,"duration":9113}},{"uid":"50465326e3687676","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/50465326e3687676","status":"passed","time":{"start":1699751022291,"stop":1699751031351,"duration":9060}},{"uid":"b8808c1d422930b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/b8808c1d422930b1","status":"passed","time":{"start":1699664474357,"stop":1699664483613,"duration":9256}},{"uid":"d4c4f68bfe1ce76d","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/d4c4f68bfe1ce76d","status":"passed","time":{"start":1699577958077,"stop":1699577966419,"duration":8342}},{"uid":"208b2bd8a3c344a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/208b2bd8a3c344a0","status":"passed","time":{"start":1699491516784,"stop":1699491524820,"duration":8036}},{"uid":"aa52d90b3c6cde90","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/aa52d90b3c6cde90","status":"passed","time":{"start":1699405268970,"stop":1699405278314,"duration":9344}},{"uid":"570652b20813c570","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/570652b20813c570","status":"passed","time":{"start":1699318864406,"stop":1699318872408,"duration":8002}},{"uid":"3176b479f6913309","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/3176b479f6913309","status":"passed","time":{"start":1699232547474,"stop":1699232556583,"duration":9109}},{"uid":"287da130da97dc28","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/287da130da97dc28","status":"passed","time":{"start":1699146405260,"stop":1699146413959,"duration":8699}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"5156d649f51be649.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}