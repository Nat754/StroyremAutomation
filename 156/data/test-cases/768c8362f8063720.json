{"uid":"768c8362f8063720","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1702602489010,"stop":1702602491304,"duration":2294},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5615bd5c5d33 <unknown>\n#1 0x5615bd282f87 <unknown>\n#2 0x5615bd2db002 <unknown>\n#3 0x5615bd2d8a64 <unknown>\n#4 0x5615bd2d5b04 <unknown>\n#5 0x5615bd2d4729 <unknown>\n#6 0x5615bd2c6583 <unknown>\n#7 0x5615bd2fc342 <unknown>\n#8 0x5615bd2c5db9 <unknown>\n#9 0x5615bd2fc75e <unknown>\n#10 0x5615bd31b297 <unknown>\n#11 0x5615bd2fc0e3 <unknown>\n#12 0x5615bd2c4044 <unknown>\n#13 0x5615bd2c544e <unknown>\n#14 0x5615bd58a861 <unknown>\n#15 0x5615bd58e785 <unknown>\n#16 0x5615bd578285 <unknown>\n#17 0x5615bd58f41f <unknown>\n#18 0x5615bd55c20f <unknown>\n#19 0x5615bd5b3028 <unknown>\n#20 0x5615bd5b31f7 <unknown>\n#21 0x5615bd5c4ed4 <unknown>\n#22 0x7f9972f90044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff199eec490>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1987eab90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19ab51d50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5615bd5b31f7 \\\\u003Cunknown>\\\\n#21 0x5615bd5c4ed4 \\\\u003Cunknown>\\\\n#22 0x7f9972f90044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5615bd5c5d33 <unknown>\nE       #1 0x5615bd282f87 <unknown>\nE       #2 0x5615bd2db002 <unknown>\nE       #3 0x5615bd2d8a64 <unknown>\nE       #4 0x5615bd2d5b04 <unknown>\nE       #5 0x5615bd2d4729 <unknown>\nE       #6 0x5615bd2c6583 <unknown>\nE       #7 0x5615bd2fc342 <unknown>\nE       #8 0x5615bd2c5db9 <unknown>\nE       #9 0x5615bd2fc75e <unknown>\nE       #10 0x5615bd31b297 <unknown>\nE       #11 0x5615bd2fc0e3 <unknown>\nE       #12 0x5615bd2c4044 <unknown>\nE       #13 0x5615bd2c544e <unknown>\nE       #14 0x5615bd58a861 <unknown>\nE       #15 0x5615bd58e785 <unknown>\nE       #16 0x5615bd578285 <unknown>\nE       #17 0x5615bd58f41f <unknown>\nE       #18 0x5615bd55c20f <unknown>\nE       #19 0x5615bd5b3028 <unknown>\nE       #20 0x5615bd5b31f7 <unknown>\nE       #21 0x5615bd5c4ed4 <unknown>\nE       #22 0x7f9972f90044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702601523080,"stop":1702601523150,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702601523150,"stop":1702601523150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702602480300,"stop":1702602481085,"duration":785},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702602481085,"stop":1702602489009,"duration":7924},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702602481085,"stop":1702602481085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5615bd5c5d33 <unknown>\n#1 0x5615bd282f87 <unknown>\n#2 0x5615bd2db002 <unknown>\n#3 0x5615bd2d8a64 <unknown>\n#4 0x5615bd2d5b04 <unknown>\n#5 0x5615bd2d4729 <unknown>\n#6 0x5615bd2c6583 <unknown>\n#7 0x5615bd2fc342 <unknown>\n#8 0x5615bd2c5db9 <unknown>\n#9 0x5615bd2fc75e <unknown>\n#10 0x5615bd31b297 <unknown>\n#11 0x5615bd2fc0e3 <unknown>\n#12 0x5615bd2c4044 <unknown>\n#13 0x5615bd2c544e <unknown>\n#14 0x5615bd58a861 <unknown>\n#15 0x5615bd58e785 <unknown>\n#16 0x5615bd578285 <unknown>\n#17 0x5615bd58f41f <unknown>\n#18 0x5615bd55c20f <unknown>\n#19 0x5615bd5b3028 <unknown>\n#20 0x5615bd5b31f7 <unknown>\n#21 0x5615bd5c4ed4 <unknown>\n#22 0x7f9972f90044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff199eec490>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff1987eab90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19ab51d50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5615bd5b31f7 \\\\u003Cunknown>\\\\n#21 0x5615bd5c4ed4 \\\\u003Cunknown>\\\\n#22 0x7f9972f90044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5615bd5c5d33 <unknown>\nE       #1 0x5615bd282f87 <unknown>\nE       #2 0x5615bd2db002 <unknown>\nE       #3 0x5615bd2d8a64 <unknown>\nE       #4 0x5615bd2d5b04 <unknown>\nE       #5 0x5615bd2d4729 <unknown>\nE       #6 0x5615bd2c6583 <unknown>\nE       #7 0x5615bd2fc342 <unknown>\nE       #8 0x5615bd2c5db9 <unknown>\nE       #9 0x5615bd2fc75e <unknown>\nE       #10 0x5615bd31b297 <unknown>\nE       #11 0x5615bd2fc0e3 <unknown>\nE       #12 0x5615bd2c4044 <unknown>\nE       #13 0x5615bd2c544e <unknown>\nE       #14 0x5615bd58a861 <unknown>\nE       #15 0x5615bd58e785 <unknown>\nE       #16 0x5615bd578285 <unknown>\nE       #17 0x5615bd58f41f <unknown>\nE       #18 0x5615bd55c20f <unknown>\nE       #19 0x5615bd5b3028 <unknown>\nE       #20 0x5615bd5b31f7 <unknown>\nE       #21 0x5615bd5c4ed4 <unknown>\nE       #22 0x7f9972f90044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702602489010,"stop":1702602489048,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702602489111,"stop":1702602489142,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702602490183,"stop":1702602490226,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"96b7632e1d76d74b","name":"Screenshot","source":"96b7632e1d76d74b.png","type":"image/png","size":63558},{"uid":"c2e4a0ac5415aaea","name":"HTML source","source":"c2e4a0ac5415aaea.html","type":"text/html","size":926296}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1702602491505,"stop":1702602491581,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1702602491505,"stop":1702602491505,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"8a3fb8002ead"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":120,"unknown":0,"total":122},"items":[{"uid":"262a6fc64dd596cc","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/262a6fc64dd596cc","status":"passed","time":{"start":1702515852791,"stop":1702515860475,"duration":7684}},{"uid":"d56fa0fba9c03dd2","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/d56fa0fba9c03dd2","status":"passed","time":{"start":1702453657084,"stop":1702453664969,"duration":7885}},{"uid":"28669959ea50b4f6","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/28669959ea50b4f6","status":"passed","time":{"start":1700615247917,"stop":1700615255409,"duration":7492}},{"uid":"abcab53cccbbd02c","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/abcab53cccbbd02c","status":"passed","time":{"start":1700529106580,"stop":1700529115455,"duration":8875}},{"uid":"1feab24328bca07f","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/1feab24328bca07f","status":"passed","time":{"start":1700442473510,"stop":1700442481356,"duration":7846}},{"uid":"10b6eefa0d2eedcb","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/10b6eefa0d2eedcb","status":"passed","time":{"start":1700356160089,"stop":1700356167704,"duration":7615}},{"uid":"58cb780f01805d63","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/58cb780f01805d63","status":"passed","time":{"start":1700269478180,"stop":1700269485928,"duration":7748}},{"uid":"3c93a1d88bd584be","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/3c93a1d88bd584be","status":"passed","time":{"start":1700183398431,"stop":1700183406762,"duration":8331}},{"uid":"31a47d498ea3dd3e","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/31a47d498ea3dd3e","status":"passed","time":{"start":1700096868281,"stop":1700096878262,"duration":9981}},{"uid":"4913375cda0d02c5","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/4913375cda0d02c5","status":"passed","time":{"start":1700010572656,"stop":1700010580988,"duration":8332}},{"uid":"5949f6ede44212bb","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/5949f6ede44212bb","status":"passed","time":{"start":1699923792548,"stop":1699923800055,"duration":7507}},{"uid":"34b573bb2f9b3f77","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/34b573bb2f9b3f77","status":"passed","time":{"start":1699837581527,"stop":1699837589316,"duration":7789}},{"uid":"8091dde115feedbb","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/8091dde115feedbb","status":"passed","time":{"start":1699751312032,"stop":1699751320102,"duration":8070}},{"uid":"2633d0dc057658f4","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/2633d0dc057658f4","status":"passed","time":{"start":1699664815144,"stop":1699664823692,"duration":8548}},{"uid":"8574129ef5419153","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/8574129ef5419153","status":"passed","time":{"start":1699578238303,"stop":1699578245839,"duration":7536}},{"uid":"524c5f8c3c218d94","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/524c5f8c3c218d94","status":"passed","time":{"start":1699491790925,"stop":1699491798565,"duration":7640}},{"uid":"7afbcadeecafb7bb","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/7afbcadeecafb7bb","status":"passed","time":{"start":1699405594092,"stop":1699405602490,"duration":8398}},{"uid":"9fd59a2d6737e6bc","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/9fd59a2d6737e6bc","status":"passed","time":{"start":1699319139668,"stop":1699319147212,"duration":7544}},{"uid":"8c41152e55589d03","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/8c41152e55589d03","status":"passed","time":{"start":1699232861647,"stop":1699232869947,"duration":8300}},{"uid":"821b10cdb7d4fbc","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/821b10cdb7d4fbc","status":"passed","time":{"start":1699146739893,"stop":1699146748482,"duration":8589}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"768c8362f8063720.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}