{"uid":"47fa0383329232c9","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"f06b2cbff298092fba61eca6271d3112","time":{"start":1702602368296,"stop":1702602370552,"duration":2256},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5561e3fd9d33 <unknown>\n#1 0x5561e3c96f87 <unknown>\n#2 0x5561e3cef002 <unknown>\n#3 0x5561e3ceca64 <unknown>\n#4 0x5561e3ce9b04 <unknown>\n#5 0x5561e3ce8729 <unknown>\n#6 0x5561e3cda583 <unknown>\n#7 0x5561e3d10342 <unknown>\n#8 0x5561e3cd9db9 <unknown>\n#9 0x5561e3d1075e <unknown>\n#10 0x5561e3d2f297 <unknown>\n#11 0x5561e3d100e3 <unknown>\n#12 0x5561e3cd8044 <unknown>\n#13 0x5561e3cd944e <unknown>\n#14 0x5561e3f9e861 <unknown>\n#15 0x5561e3fa2785 <unknown>\n#16 0x5561e3f8c285 <unknown>\n#17 0x5561e3fa341f <unknown>\n#18 0x5561e3f7020f <unknown>\n#19 0x5561e3fc7028 <unknown>\n#20 0x5561e3fc71f7 <unknown>\n#21 0x5561e3fd8ed4 <unknown>\n#22 0x7fcc1b16f044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab63dd0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff19abd76d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abd6e90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561e3fc71f7 \\\\u003Cunknown>\\\\n#21 0x5561e3fd8ed4 \\\\u003Cunknown>\\\\n#22 0x7fcc1b16f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5561e3fd9d33 <unknown>\nE       #1 0x5561e3c96f87 <unknown>\nE       #2 0x5561e3cef002 <unknown>\nE       #3 0x5561e3ceca64 <unknown>\nE       #4 0x5561e3ce9b04 <unknown>\nE       #5 0x5561e3ce8729 <unknown>\nE       #6 0x5561e3cda583 <unknown>\nE       #7 0x5561e3d10342 <unknown>\nE       #8 0x5561e3cd9db9 <unknown>\nE       #9 0x5561e3d1075e <unknown>\nE       #10 0x5561e3d2f297 <unknown>\nE       #11 0x5561e3d100e3 <unknown>\nE       #12 0x5561e3cd8044 <unknown>\nE       #13 0x5561e3cd944e <unknown>\nE       #14 0x5561e3f9e861 <unknown>\nE       #15 0x5561e3fa2785 <unknown>\nE       #16 0x5561e3f8c285 <unknown>\nE       #17 0x5561e3fa341f <unknown>\nE       #18 0x5561e3f7020f <unknown>\nE       #19 0x5561e3fc7028 <unknown>\nE       #20 0x5561e3fc71f7 <unknown>\nE       #21 0x5561e3fd8ed4 <unknown>\nE       #22 0x7fcc1b16f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1702601523080,"stop":1702601523150,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1702601523150,"stop":1702601523150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1702602353401,"stop":1702602354177,"duration":776},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1702602354178,"stop":1702602368296,"duration":14118},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1702602354178,"stop":1702602354178,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x5561e3fd9d33 <unknown>\n#1 0x5561e3c96f87 <unknown>\n#2 0x5561e3cef002 <unknown>\n#3 0x5561e3ceca64 <unknown>\n#4 0x5561e3ce9b04 <unknown>\n#5 0x5561e3ce8729 <unknown>\n#6 0x5561e3cda583 <unknown>\n#7 0x5561e3d10342 <unknown>\n#8 0x5561e3cd9db9 <unknown>\n#9 0x5561e3d1075e <unknown>\n#10 0x5561e3d2f297 <unknown>\n#11 0x5561e3d100e3 <unknown>\n#12 0x5561e3cd8044 <unknown>\n#13 0x5561e3cd944e <unknown>\n#14 0x5561e3f9e861 <unknown>\n#15 0x5561e3fa2785 <unknown>\n#16 0x5561e3f8c285 <unknown>\n#17 0x5561e3fa341f <unknown>\n#18 0x5561e3f7020f <unknown>\n#19 0x5561e3fc7028 <unknown>\n#20 0x5561e3fc71f7 <unknown>\n#21 0x5561e3fd8ed4 <unknown>\n#22 0x7fcc1b16f044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff19ab63dd0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff19abd76d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff19abd6e90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561e3fc71f7 \\\\u003Cunknown>\\\\n#21 0x5561e3fd8ed4 \\\\u003Cunknown>\\\\n#22 0x7fcc1b16f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.71)\nE       Stacktrace:\nE       #0 0x5561e3fd9d33 <unknown>\nE       #1 0x5561e3c96f87 <unknown>\nE       #2 0x5561e3cef002 <unknown>\nE       #3 0x5561e3ceca64 <unknown>\nE       #4 0x5561e3ce9b04 <unknown>\nE       #5 0x5561e3ce8729 <unknown>\nE       #6 0x5561e3cda583 <unknown>\nE       #7 0x5561e3d10342 <unknown>\nE       #8 0x5561e3cd9db9 <unknown>\nE       #9 0x5561e3d1075e <unknown>\nE       #10 0x5561e3d2f297 <unknown>\nE       #11 0x5561e3d100e3 <unknown>\nE       #12 0x5561e3cd8044 <unknown>\nE       #13 0x5561e3cd944e <unknown>\nE       #14 0x5561e3f9e861 <unknown>\nE       #15 0x5561e3fa2785 <unknown>\nE       #16 0x5561e3f8c285 <unknown>\nE       #17 0x5561e3fa341f <unknown>\nE       #18 0x5561e3f7020f <unknown>\nE       #19 0x5561e3fc7028 <unknown>\nE       #20 0x5561e3fc71f7 <unknown>\nE       #21 0x5561e3fd8ed4 <unknown>\nE       #22 0x7fcc1b16f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1702602368296,"stop":1702602368330,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1702602368373,"stop":1702602368405,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1702602369444,"stop":1702602369484,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"88e17dfff554ebbb","name":"Screenshot","source":"88e17dfff554ebbb.png","type":"image/png","size":127270},{"uid":"1b0c2027eedec9f8","name":"HTML source","source":"1b0c2027eedec9f8.html","type":"text/html","size":795675}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1702602370747,"stop":1702602370747,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1702602370747,"stop":1702602370822,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"8a3fb8002ead"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":10,"skipped":0,"passed":125,"unknown":0,"total":135},"items":[{"uid":"1faa45a7a24c061b","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/1faa45a7a24c061b","status":"passed","time":{"start":1702515716082,"stop":1702515724011,"duration":7929}},{"uid":"6a74016c3299ba63","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/6a74016c3299ba63","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x555adde0bd33 <unknown>\n#1 0x555addac8f87 <unknown>\n#2 0x555addb21002 <unknown>\n#3 0x555addb1ea64 <unknown>\n#4 0x555addb1bb04 <unknown>\n#5 0x555addb1a729 <unknown>\n#6 0x555addb0c583 <unknown>\n#7 0x555addb42342 <unknown>\n#8 0x555addb0bdb9 <unknown>\n#9 0x555addb4275e <unknown>\n#10 0x555addb61297 <unknown>\n#11 0x555addb420e3 <unknown>\n#12 0x555addb0a044 <unknown>\n#13 0x555addb0b44e <unknown>\n#14 0x555adddd0861 <unknown>\n#15 0x555adddd4785 <unknown>\n#16 0x555adddbe285 <unknown>\n#17 0x555adddd541f <unknown>\n#18 0x555addda220f <unknown>\n#19 0x555adddf9028 <unknown>\n#20 0x555adddf91f7 <unknown>\n#21 0x555adde0aed4 <unknown>\n#22 0x7fb1f4da8044 <unknown>","time":{"start":1702453513018,"stop":1702453515312,"duration":2294}},{"uid":"ecab83e9a30ff61b","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/ecab83e9a30ff61b","status":"passed","time":{"start":1700615121106,"stop":1700615128852,"duration":7746}},{"uid":"85a851883ba11bef","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/85a851883ba11bef","status":"passed","time":{"start":1700528938652,"stop":1700528947598,"duration":8946}},{"uid":"81ad892a8ea2e90","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/81ad892a8ea2e90","status":"passed","time":{"start":1700442336559,"stop":1700442344741,"duration":8182}},{"uid":"3b456c99cb68a826","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/3b456c99cb68a826","status":"passed","time":{"start":1700356030587,"stop":1700356038536,"duration":7949}},{"uid":"5f66de17c8a3ec71","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/5f66de17c8a3ec71","status":"passed","time":{"start":1700269350399,"stop":1700269358312,"duration":7913}},{"uid":"2f42aad99b08ea32","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/2f42aad99b08ea32","status":"passed","time":{"start":1700183240683,"stop":1700183249298,"duration":8615}},{"uid":"29ac05561291131e","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/29ac05561291131e","status":"passed","time":{"start":1700096728582,"stop":1700096736653,"duration":8071}},{"uid":"fc0cf5ab113f3dd7","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/fc0cf5ab113f3dd7","status":"passed","time":{"start":1700010413157,"stop":1700010421801,"duration":8644}},{"uid":"50ab78af1a41ba07","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/50ab78af1a41ba07","status":"passed","time":{"start":1699923666023,"stop":1699923674075,"duration":8052}},{"uid":"4cd6b0d048b41b1a","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/4cd6b0d048b41b1a","status":"passed","time":{"start":1699837449076,"stop":1699837457251,"duration":8175}},{"uid":"2a45495e334da98","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/2a45495e334da98","status":"passed","time":{"start":1699751176794,"stop":1699751185684,"duration":8890}},{"uid":"a91ae35daf570e20","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/a91ae35daf570e20","status":"passed","time":{"start":1699664655515,"stop":1699664664384,"duration":8869}},{"uid":"ea7629fe305f7581","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/ea7629fe305f7581","status":"passed","time":{"start":1699578106984,"stop":1699578114718,"duration":7734}},{"uid":"b65a85c7d55beabc","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/b65a85c7d55beabc","status":"passed","time":{"start":1699491661215,"stop":1699491669108,"duration":7893}},{"uid":"3f3438608748233d","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/3f3438608748233d","status":"passed","time":{"start":1699405441568,"stop":1699405450607,"duration":9039}},{"uid":"4ac4766ee430f8c0","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/4ac4766ee430f8c0","status":"passed","time":{"start":1699319011336,"stop":1699319019097,"duration":7761}},{"uid":"e0d9cb2ab35dd724","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/e0d9cb2ab35dd724","status":"passed","time":{"start":1699232721147,"stop":1699232729976,"duration":8829}},{"uid":"4a168d1264ed80ef","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/4a168d1264ed80ef","status":"passed","time":{"start":1699146581445,"stop":1699146589896,"duration":8451}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"47fa0383329232c9.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"]}