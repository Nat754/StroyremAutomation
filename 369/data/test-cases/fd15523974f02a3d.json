{"uid":"fd15523974f02a3d","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke","historyId":"2319df26c5c8a1c6f15c67e5b550813c","time":{"start":1721006100627,"stop":1721006104557,"duration":3930},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5579515eac7a <unknown>\n#1 0x5579512cde2c <unknown>\n#2 0x5579512d3539 <unknown>\n#3 0x5579512d52e5 <unknown>\n#4 0x5579512d536c <unknown>\n#5 0x55795132131c <unknown>\n#6 0x55795131f246 <unknown>\n#7 0x55795131cc27 <unknown>\n#8 0x55795131ba60 <unknown>\n#9 0x55795130f15f <unknown>\n#10 0x55795133d5c2 <unknown>\n#11 0x55795130ead9 <unknown>\n#12 0x55795133d78e <unknown>\n#13 0x55795135c303 <unknown>\n#14 0x55795133d363 <unknown>\n#15 0x55795130d247 <unknown>\n#16 0x55795130db9e <unknown>\n#17 0x5579515b124b <unknown>\n#18 0x5579515b52f1 <unknown>\n#19 0x55795159cafe <unknown>\n#20 0x5579515b5e52 <unknown>\n#21 0x55795158179f <unknown>\n#22 0x5579515da638 <unknown>\n#23 0x5579515da810 <unknown>\n#24 0x5579515e9dac <unknown>\n#25 0x7f36c1ece134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff8209e2690>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff820f72850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff820f9c150>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5579515da810 \\\\u003Cunknown>\\\\n#24 0x5579515e9dac \\\\u003Cunknown>\\\\n#25 0x7f36c1ece134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5579515eac7a <unknown>\nE       #1 0x5579512cde2c <unknown>\nE       #2 0x5579512d3539 <unknown>\nE       #3 0x5579512d52e5 <unknown>\nE       #4 0x5579512d536c <unknown>\nE       #5 0x55795132131c <unknown>\nE       #6 0x55795131f246 <unknown>\nE       #7 0x55795131cc27 <unknown>\nE       #8 0x55795131ba60 <unknown>\nE       #9 0x55795130f15f <unknown>\nE       #10 0x55795133d5c2 <unknown>\nE       #11 0x55795130ead9 <unknown>\nE       #12 0x55795133d78e <unknown>\nE       #13 0x55795135c303 <unknown>\nE       #14 0x55795133d363 <unknown>\nE       #15 0x55795130d247 <unknown>\nE       #16 0x55795130db9e <unknown>\nE       #17 0x5579515b124b <unknown>\nE       #18 0x5579515b52f1 <unknown>\nE       #19 0x55795159cafe <unknown>\nE       #20 0x5579515b5e52 <unknown>\nE       #21 0x55795158179f <unknown>\nE       #22 0x5579515da638 <unknown>\nE       #23 0x5579515da810 <unknown>\nE       #24 0x5579515e9dac <unknown>\nE       #25 0x7f36c1ece134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721005068619,"stop":1721005068686,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1721005068686,"stop":1721005068686,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721006086254,"stop":1721006086948,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721006086948,"stop":1721006086948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1721006086949,"stop":1721006100627,"duration":13678},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5579515eac7a <unknown>\n#1 0x5579512cde2c <unknown>\n#2 0x5579512d3539 <unknown>\n#3 0x5579512d52e5 <unknown>\n#4 0x5579512d536c <unknown>\n#5 0x55795132131c <unknown>\n#6 0x55795131f246 <unknown>\n#7 0x55795131cc27 <unknown>\n#8 0x55795131ba60 <unknown>\n#9 0x55795130f15f <unknown>\n#10 0x55795133d5c2 <unknown>\n#11 0x55795130ead9 <unknown>\n#12 0x55795133d78e <unknown>\n#13 0x55795135c303 <unknown>\n#14 0x55795133d363 <unknown>\n#15 0x55795130d247 <unknown>\n#16 0x55795130db9e <unknown>\n#17 0x5579515b124b <unknown>\n#18 0x5579515b52f1 <unknown>\n#19 0x55795159cafe <unknown>\n#20 0x5579515b5e52 <unknown>\n#21 0x55795158179f <unknown>\n#22 0x5579515da638 <unknown>\n#23 0x5579515da810 <unknown>\n#24 0x5579515e9dac <unknown>\n#25 0x7f36c1ece134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff8209e2690>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff820f72850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff820f9c150>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5579515da810 \\\\u003Cunknown>\\\\n#24 0x5579515e9dac \\\\u003Cunknown>\\\\n#25 0x7f36c1ece134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5579515eac7a <unknown>\nE       #1 0x5579512cde2c <unknown>\nE       #2 0x5579512d3539 <unknown>\nE       #3 0x5579512d52e5 <unknown>\nE       #4 0x5579512d536c <unknown>\nE       #5 0x55795132131c <unknown>\nE       #6 0x55795131f246 <unknown>\nE       #7 0x55795131cc27 <unknown>\nE       #8 0x55795131ba60 <unknown>\nE       #9 0x55795130f15f <unknown>\nE       #10 0x55795133d5c2 <unknown>\nE       #11 0x55795130ead9 <unknown>\nE       #12 0x55795133d78e <unknown>\nE       #13 0x55795135c303 <unknown>\nE       #14 0x55795133d363 <unknown>\nE       #15 0x55795130d247 <unknown>\nE       #16 0x55795130db9e <unknown>\nE       #17 0x5579515b124b <unknown>\nE       #18 0x5579515b52f1 <unknown>\nE       #19 0x55795159cafe <unknown>\nE       #20 0x5579515b5e52 <unknown>\nE       #21 0x55795158179f <unknown>\nE       #22 0x5579515da638 <unknown>\nE       #23 0x5579515da810 <unknown>\nE       #24 0x5579515e9dac <unknown>\nE       #25 0x7f36c1ece134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1721006100627,"stop":1721006100657,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1721006100701,"stop":1721006100727,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1721006101765,"stop":1721006101809,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1721006103839,"stop":1721006103889,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"3cc94cbc9d6f798b","name":"Screenshot","source":"3cc94cbc9d6f798b.png","type":"image/png","size":54970},{"uid":"1305e926ef8a124d","name":"HTML source","source":"1305e926ef8a124d.html","type":"text/html","size":562578}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1721006104710,"stop":1721006104710,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1721006104711,"stop":1721006104789,"duration":78},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"37010a9470b6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":45,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":47},"items":[{"uid":"f142cffc3d791a1e","reportUrl":"https://Nat754.github.io/StroyremAutomation/368//#testresult/f142cffc3d791a1e","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720919655067,"stop":1720919663758,"duration":8691}},{"uid":"641b80314dc4ffe","reportUrl":"https://Nat754.github.io/StroyremAutomation/367//#testresult/641b80314dc4ffe","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720832959401,"stop":1720832968280,"duration":8879}},{"uid":"1dd1ddca60125588","reportUrl":"https://Nat754.github.io/StroyremAutomation/366//#testresult/1dd1ddca60125588","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720746747585,"stop":1720746756700,"duration":9115}},{"uid":"7078ac52b923dcd8","reportUrl":"https://Nat754.github.io/StroyremAutomation/365//#testresult/7078ac52b923dcd8","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720660262860,"stop":1720660273619,"duration":10759}},{"uid":"f5e124711aebb336","reportUrl":"https://Nat754.github.io/StroyremAutomation/364//#testresult/f5e124711aebb336","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720573858802,"stop":1720573868637,"duration":9835}},{"uid":"8d6d5a0ca9e23530","reportUrl":"https://Nat754.github.io/StroyremAutomation/363//#testresult/8d6d5a0ca9e23530","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720487516272,"stop":1720487526545,"duration":10273}},{"uid":"10ca500fd0fb7cd3","reportUrl":"https://Nat754.github.io/StroyremAutomation/362//#testresult/10ca500fd0fb7cd3","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720401019222,"stop":1720401028489,"duration":9267}},{"uid":"6310e4095ff65618","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/6310e4095ff65618","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720314772595,"stop":1720314780796,"duration":8201}},{"uid":"6c568ad456f85655","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/6c568ad456f85655","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720228060858,"stop":1720228069506,"duration":8648}},{"uid":"911b0516595c2de3","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/911b0516595c2de3","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720141685505,"stop":1720141693985,"duration":8480}},{"uid":"e7454f125d848610","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/e7454f125d848610","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1720055352049,"stop":1720055360954,"duration":8905}},{"uid":"5ed51a93978478b8","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/5ed51a93978478b8","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719968995390,"stop":1719969004043,"duration":8653}},{"uid":"d5d527b5e1e3f3e","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/d5d527b5e1e3f3e","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719882578082,"stop":1719882587228,"duration":9146}},{"uid":"637ee880e9186d64","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/637ee880e9186d64","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719796439665,"stop":1719796447700,"duration":8035}},{"uid":"64c10ed7f63124d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/64c10ed7f63124d0","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719709957514,"stop":1719709965865,"duration":8351}},{"uid":"cd8932433469e4e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/cd8932433469e4e1","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719623236902,"stop":1719623246027,"duration":9125}},{"uid":"5633bd04dc7ec2c0","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/5633bd04dc7ec2c0","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719537080557,"stop":1719537089991,"duration":9434}},{"uid":"f3d5d7112d512764","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/f3d5d7112d512764","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719450531981,"stop":1719450540061,"duration":8080}},{"uid":"710edf051c082874","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/710edf051c082874","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719364102397,"stop":1719364111166,"duration":8769}},{"uid":"bf408fbf5335afd2","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/bf408fbf5335afd2","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 61.39, ФР: скидка = 61.4\nassert 61.4 == 61.39\n +  where 61.39 = round((4093.0 * 0.015), 2)","time":{"start":1719277859021,"stop":1719277868175,"duration":9154}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"fd15523974f02a3d.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}