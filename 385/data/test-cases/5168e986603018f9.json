{"uid":"5168e986603018f9","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"dad3617134a119815037f972e0359b9c","time":{"start":1722387723198,"stop":1722387725392,"duration":2194},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55a8a5db171a <unknown>\n#1 0x55a8a5a82640 <unknown>\n#2 0x55a8a5ad8926 <unknown>\n#3 0x55a8a5ad6836 <unknown>\n#4 0x55a8a5ad42b7 <unknown>\n#5 0x55a8a5ad315c <unknown>\n#6 0x55a8a5ac6c26 <unknown>\n#7 0x55a8a5af48e2 <unknown>\n#8 0x55a8a5ac65d9 <unknown>\n#9 0x55a8a5af4aae <unknown>\n#10 0x55a8a5b1308a <unknown>\n#11 0x55a8a5af4683 <unknown>\n#12 0x55a8a5ac4d71 <unknown>\n#13 0x55a8a5ac57de <unknown>\n#14 0x55a8a5d792ab <unknown>\n#15 0x55a8a5d7d242 <unknown>\n#16 0x55a8a5d66665 <unknown>\n#17 0x55a8a5d7ddd2 <unknown>\n#18 0x55a8a5d4b2af <unknown>\n#19 0x55a8a5da0eb8 <unknown>\n#20 0x55a8a5da1090 <unknown>\n#21 0x55a8a5db04ec <unknown>\n#22 0x7f1594b6b134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9c09bd98d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9c08cf9b50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9c07cccc10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a8a5da1090 \\\\u003Cunknown>\\\\n#21 0x55a8a5db04ec \\\\u003Cunknown>\\\\n#22 0x7f1594b6b134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55a8a5db171a <unknown>\nE       #1 0x55a8a5a82640 <unknown>\nE       #2 0x55a8a5ad8926 <unknown>\nE       #3 0x55a8a5ad6836 <unknown>\nE       #4 0x55a8a5ad42b7 <unknown>\nE       #5 0x55a8a5ad315c <unknown>\nE       #6 0x55a8a5ac6c26 <unknown>\nE       #7 0x55a8a5af48e2 <unknown>\nE       #8 0x55a8a5ac65d9 <unknown>\nE       #9 0x55a8a5af4aae <unknown>\nE       #10 0x55a8a5b1308a <unknown>\nE       #11 0x55a8a5af4683 <unknown>\nE       #12 0x55a8a5ac4d71 <unknown>\nE       #13 0x55a8a5ac57de <unknown>\nE       #14 0x55a8a5d792ab <unknown>\nE       #15 0x55a8a5d7d242 <unknown>\nE       #16 0x55a8a5d66665 <unknown>\nE       #17 0x55a8a5d7ddd2 <unknown>\nE       #18 0x55a8a5d4b2af <unknown>\nE       #19 0x55a8a5da0eb8 <unknown>\nE       #20 0x55a8a5da1090 <unknown>\nE       #21 0x55a8a5db04ec <unknown>\nE       #22 0x7f1594b6b134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1722386774894,"stop":1722386774964,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1722386774965,"stop":1722386774965,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1722387711556,"stop":1722387712246,"duration":690},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1722387712246,"stop":1722387723198,"duration":10952},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1722387712246,"stop":1722387712246,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55a8a5db171a <unknown>\n#1 0x55a8a5a82640 <unknown>\n#2 0x55a8a5ad8926 <unknown>\n#3 0x55a8a5ad6836 <unknown>\n#4 0x55a8a5ad42b7 <unknown>\n#5 0x55a8a5ad315c <unknown>\n#6 0x55a8a5ac6c26 <unknown>\n#7 0x55a8a5af48e2 <unknown>\n#8 0x55a8a5ac65d9 <unknown>\n#9 0x55a8a5af4aae <unknown>\n#10 0x55a8a5b1308a <unknown>\n#11 0x55a8a5af4683 <unknown>\n#12 0x55a8a5ac4d71 <unknown>\n#13 0x55a8a5ac57de <unknown>\n#14 0x55a8a5d792ab <unknown>\n#15 0x55a8a5d7d242 <unknown>\n#16 0x55a8a5d66665 <unknown>\n#17 0x55a8a5d7ddd2 <unknown>\n#18 0x55a8a5d4b2af <unknown>\n#19 0x55a8a5da0eb8 <unknown>\n#20 0x55a8a5da1090 <unknown>\n#21 0x55a8a5db04ec <unknown>\n#22 0x7f1594b6b134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9c09bd98d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9c08cf9b50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9c07cccc10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a8a5da1090 \\\\u003Cunknown>\\\\n#21 0x55a8a5db04ec \\\\u003Cunknown>\\\\n#22 0x7f1594b6b134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55a8a5db171a <unknown>\nE       #1 0x55a8a5a82640 <unknown>\nE       #2 0x55a8a5ad8926 <unknown>\nE       #3 0x55a8a5ad6836 <unknown>\nE       #4 0x55a8a5ad42b7 <unknown>\nE       #5 0x55a8a5ad315c <unknown>\nE       #6 0x55a8a5ac6c26 <unknown>\nE       #7 0x55a8a5af48e2 <unknown>\nE       #8 0x55a8a5ac65d9 <unknown>\nE       #9 0x55a8a5af4aae <unknown>\nE       #10 0x55a8a5b1308a <unknown>\nE       #11 0x55a8a5af4683 <unknown>\nE       #12 0x55a8a5ac4d71 <unknown>\nE       #13 0x55a8a5ac57de <unknown>\nE       #14 0x55a8a5d792ab <unknown>\nE       #15 0x55a8a5d7d242 <unknown>\nE       #16 0x55a8a5d66665 <unknown>\nE       #17 0x55a8a5d7ddd2 <unknown>\nE       #18 0x55a8a5d4b2af <unknown>\nE       #19 0x55a8a5da0eb8 <unknown>\nE       #20 0x55a8a5da1090 <unknown>\nE       #21 0x55a8a5db04ec <unknown>\nE       #22 0x7f1594b6b134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1722387723199,"stop":1722387723252,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1722387724293,"stop":1722387724335,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"9ea161e11ab88240","name":"Screenshot","source":"9ea161e11ab88240.png","type":"image/png","size":136903},{"uid":"f0b0c073ea70234f","name":"HTML source","source":"f0b0c073ea70234f.html","type":"text/html","size":810207}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1722387725567,"stop":1722387725646,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1722387725567,"stop":1722387725567,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"63e36e0b95b4"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":55,"unknown":0,"total":63},"items":[{"uid":"e7a14285c1aa5a45","reportUrl":"https://Nat754.github.io/StroyremAutomation/384//#testresult/e7a14285c1aa5a45","status":"passed","time":{"start":1722301926238,"stop":1722301937850,"duration":11612}},{"uid":"b61c84fb92889528","reportUrl":"https://Nat754.github.io/StroyremAutomation/383//#testresult/b61c84fb92889528","status":"passed","time":{"start":1722215644295,"stop":1722215656352,"duration":12057}},{"uid":"7c4f137176f5fad9","reportUrl":"https://Nat754.github.io/StroyremAutomation/382//#testresult/7c4f137176f5fad9","status":"passed","time":{"start":1722129463647,"stop":1722129475270,"duration":11623}},{"uid":"a78849145e992cdb","reportUrl":"https://Nat754.github.io/StroyremAutomation/381//#testresult/a78849145e992cdb","status":"passed","time":{"start":1722042715906,"stop":1722042726823,"duration":10917}},{"uid":"5f3b0b611be1d312","reportUrl":"https://Nat754.github.io/StroyremAutomation/380//#testresult/5f3b0b611be1d312","status":"passed","time":{"start":1721956322633,"stop":1721956334491,"duration":11858}},{"uid":"5288350d8ebb784e","reportUrl":"https://Nat754.github.io/StroyremAutomation/379//#testresult/5288350d8ebb784e","status":"passed","time":{"start":1721870172846,"stop":1721870189066,"duration":16220}},{"uid":"372f33493b975b2","reportUrl":"https://Nat754.github.io/StroyremAutomation/378//#testresult/372f33493b975b2","status":"passed","time":{"start":1721783804732,"stop":1721783816577,"duration":11845}},{"uid":"d6ac7456678f8764","reportUrl":"https://Nat754.github.io/StroyremAutomation/377//#testresult/d6ac7456678f8764","status":"passed","time":{"start":1721697356079,"stop":1721697368042,"duration":11963}},{"uid":"9ac88ed1115126b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/376//#testresult/9ac88ed1115126b6","status":"passed","time":{"start":1721611105849,"stop":1721611117637,"duration":11788}},{"uid":"7a8864462fd335e7","reportUrl":"https://Nat754.github.io/StroyremAutomation/375//#testresult/7a8864462fd335e7","status":"passed","time":{"start":1721524590258,"stop":1721524601473,"duration":11215}},{"uid":"416f0038c9cd40d7","reportUrl":"https://Nat754.github.io/StroyremAutomation/374//#testresult/416f0038c9cd40d7","status":"passed","time":{"start":1721438053759,"stop":1721438067155,"duration":13396}},{"uid":"b04160d65f756c7f","reportUrl":"https://Nat754.github.io/StroyremAutomation/373//#testresult/b04160d65f756c7f","status":"passed","time":{"start":1721351773647,"stop":1721351786050,"duration":12403}},{"uid":"15e1cf8c9bbb7655","reportUrl":"https://Nat754.github.io/StroyremAutomation/372//#testresult/15e1cf8c9bbb7655","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.182)\nStacktrace:\n#0 0x561f99113c5a <unknown>\n#1 0x561f98df6e2c <unknown>\n#2 0x561f98e4a406 <unknown>\n#3 0x561f98e48246 <unknown>\n#4 0x561f98e45c27 <unknown>\n#5 0x561f98e44a60 <unknown>\n#6 0x561f98e3815f <unknown>\n#7 0x561f98e665c2 <unknown>\n#8 0x561f98e37ad9 <unknown>\n#9 0x561f98e6678e <unknown>\n#10 0x561f98e85303 <unknown>\n#11 0x561f98e66363 <unknown>\n#12 0x561f98e36247 <unknown>\n#13 0x561f98e36b9e <unknown>\n#14 0x561f990da22b <unknown>\n#15 0x561f990de2d1 <unknown>\n#16 0x561f990c5ade <unknown>\n#17 0x561f990dee32 <unknown>\n#18 0x561f990aa77f <unknown>\n#19 0x561f99103618 <unknown>\n#20 0x561f991037f0 <unknown>\n#21 0x561f99112d8c <unknown>\n#22 0x7f7d89871134 <unknown>","time":{"start":1721265305961,"stop":1721265308213,"duration":2252}},{"uid":"22673436aefeb4f","reportUrl":"https://Nat754.github.io/StroyremAutomation/371//#testresult/22673436aefeb4f","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.182)\nStacktrace:\n#0 0x55d9a7b0cc5a <unknown>\n#1 0x55d9a77efe2c <unknown>\n#2 0x55d9a7843406 <unknown>\n#3 0x55d9a7841246 <unknown>\n#4 0x55d9a783ec27 <unknown>\n#5 0x55d9a783da60 <unknown>\n#6 0x55d9a783115f <unknown>\n#7 0x55d9a785f5c2 <unknown>\n#8 0x55d9a7830ad9 <unknown>\n#9 0x55d9a785f78e <unknown>\n#10 0x55d9a787e303 <unknown>\n#11 0x55d9a785f363 <unknown>\n#12 0x55d9a782f247 <unknown>\n#13 0x55d9a782fb9e <unknown>\n#14 0x55d9a7ad322b <unknown>\n#15 0x55d9a7ad72d1 <unknown>\n#16 0x55d9a7abeade <unknown>\n#17 0x55d9a7ad7e32 <unknown>\n#18 0x55d9a7aa377f <unknown>\n#19 0x55d9a7afc618 <unknown>\n#20 0x55d9a7afc7f0 <unknown>\n#21 0x55d9a7b0bd8c <unknown>\n#22 0x7fd0855c1134 <unknown>","time":{"start":1721178745912,"stop":1721178748149,"duration":2237}},{"uid":"81d99898f4e92ee5","reportUrl":"https://Nat754.github.io/StroyremAutomation/370//#testresult/81d99898f4e92ee5","status":"passed","time":{"start":1721092566170,"stop":1721092578570,"duration":12400}},{"uid":"279351bd55991809","reportUrl":"https://Nat754.github.io/StroyremAutomation/369//#testresult/279351bd55991809","status":"passed","time":{"start":1721006299445,"stop":1721006311550,"duration":12105}},{"uid":"a2d6e3761dd201fb","reportUrl":"https://Nat754.github.io/StroyremAutomation/368//#testresult/a2d6e3761dd201fb","status":"passed","time":{"start":1720919826596,"stop":1720919837979,"duration":11383}},{"uid":"b911b280ef94ed5f","reportUrl":"https://Nat754.github.io/StroyremAutomation/367//#testresult/b911b280ef94ed5f","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55dc71828c7a <unknown>\n#1 0x55dc7150be2c <unknown>\n#2 0x55dc7155f406 <unknown>\n#3 0x55dc7155d246 <unknown>\n#4 0x55dc7155ac27 <unknown>\n#5 0x55dc71559a60 <unknown>\n#6 0x55dc7154d15f <unknown>\n#7 0x55dc7157b5c2 <unknown>\n#8 0x55dc7154cad9 <unknown>\n#9 0x55dc7157b78e <unknown>\n#10 0x55dc7159a303 <unknown>\n#11 0x55dc7157b363 <unknown>\n#12 0x55dc7154b247 <unknown>\n#13 0x55dc7154bb9e <unknown>\n#14 0x55dc717ef24b <unknown>\n#15 0x55dc717f32f1 <unknown>\n#16 0x55dc717daafe <unknown>\n#17 0x55dc717f3e52 <unknown>\n#18 0x55dc717bf79f <unknown>\n#19 0x55dc71818638 <unknown>\n#20 0x55dc71818810 <unknown>\n#21 0x55dc71827dac <unknown>\n#22 0x7fc7628ba134 <unknown>","time":{"start":1720833123934,"stop":1720833126121,"duration":2187}},{"uid":"15a36443c7f3c924","reportUrl":"https://Nat754.github.io/StroyremAutomation/366//#testresult/15a36443c7f3c924","status":"passed","time":{"start":1720746966075,"stop":1720746978474,"duration":12399}},{"uid":"b66ef31f4cefd4d4","reportUrl":"https://Nat754.github.io/StroyremAutomation/365//#testresult/b66ef31f4cefd4d4","status":"passed","time":{"start":1720660449060,"stop":1720660462296,"duration":13236}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"5168e986603018f9.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}