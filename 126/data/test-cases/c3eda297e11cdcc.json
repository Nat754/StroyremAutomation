{"uid":"c3eda297e11cdcc","name":"007_positive_catalog_first_link_smoke","fullName":"tests.catalog.test_catalog_page.TestCatalogPage#test_007_positive_catalog_first_link_smoke","historyId":"d0c67580db740592432b08ab75a259c2","time":{"start":1700009557352,"stop":1700009574015,"duration":16663},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7f8c34908f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9cfa7f8b4f9982c817594e0a51cde6\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7f8c358481d0>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e9cfa7f8b4f9982c817594e0a51cde6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f8c35646520>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1700009428216,"stop":1700009428283,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1700009428284,"stop":1700009428284,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1700009547108,"stop":1700009547882,"duration":774},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"catalog_page_open","time":{"start":1700009547882,"stop":1700009557351,"duration":9469},"status":"passed","steps":[{"name":"Проверяем что элемент 'Каталог товаров' виден в хедере","time":{"start":1700009557283,"stop":1700009557310,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true},{"name":"setup","time":{"start":1700009547882,"stop":1700009547882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7f8c34908f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e9cfa7f8b4f9982c817594e0a51cde6\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7f8c358481d0>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7e9cfa7f8b4f9982c817594e0a51cde6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f8c35646520>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Проверяем что ссылка 'Гипсокартонные системы' видна на странице","time":{"start":1700009557352,"stop":1700009574014,"duration":16662},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/catalog_page.py\", line 98, in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 34, in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"b62b3fbced153763","name":"Screenshot","source":"b62b3fbced153763.png","type":"image/png","size":14018},{"uid":"e77cf7f2c6a5ccef","name":"HTML source","source":"e77cf7f2c6a5ccef.html","type":"text/html","size":385245}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1700009574132,"stop":1700009574203,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1700009574132,"stop":1700009574132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Catalog Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.catalog"},{"name":"suite","value":"test_catalog_page"},{"name":"subSuite","value":"TestCatalogPage"},{"name":"host","value":"ff3afe6b0ef3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.test_catalog_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":28,"skipped":0,"passed":103,"unknown":0,"total":131},"items":[{"uid":"4dfcfc8038000e99","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/4dfcfc8038000e99","status":"passed","time":{"start":1699923012161,"stop":1699923016364,"duration":4203}},{"uid":"2f085ae78d6b642a","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/2f085ae78d6b642a","status":"passed","time":{"start":1699836757769,"stop":1699836762063,"duration":4294}},{"uid":"ab1b5a954e3c224d","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/ab1b5a954e3c224d","status":"passed","time":{"start":1699750476393,"stop":1699750480905,"duration":4512}},{"uid":"c1a44a8b55268280","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/c1a44a8b55268280","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699663797612,"stop":1699663812803,"duration":15191}},{"uid":"5948985111b55279","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/5948985111b55279","status":"passed","time":{"start":1699577418577,"stop":1699577422794,"duration":4217}},{"uid":"62f9af7e599a338c","reportUrl":"https://Nat754.github.io/StroyremAutomation/120//#testresult/62f9af7e599a338c","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699490986890,"stop":1699491003537,"duration":16647}},{"uid":"ea1b7cb4ae155244","reportUrl":"https://Nat754.github.io/StroyremAutomation/119//#testresult/ea1b7cb4ae155244","status":"passed","time":{"start":1699404642136,"stop":1699404648139,"duration":6003}},{"uid":"349c6aa3955da72f","reportUrl":"https://Nat754.github.io/StroyremAutomation/118//#testresult/349c6aa3955da72f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699318328931,"stop":1699318344144,"duration":15213}},{"uid":"e8f2e70323d52d61","reportUrl":"https://Nat754.github.io/StroyremAutomation/117//#testresult/e8f2e70323d52d61","status":"passed","time":{"start":1699231987666,"stop":1699231992213,"duration":4547}},{"uid":"803220c7eaed9b1f","reportUrl":"https://Nat754.github.io/StroyremAutomation/116//#testresult/803220c7eaed9b1f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699145713030,"stop":1699145729682,"duration":16652}},{"uid":"9a442ef56c2a89d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/115//#testresult/9a442ef56c2a89d0","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1699059026387,"stop":1699059041570,"duration":15183}},{"uid":"ea3c47ea041c3dc0","reportUrl":"https://Nat754.github.io/StroyremAutomation/114//#testresult/ea3c47ea041c3dc0","status":"passed","time":{"start":1698972648936,"stop":1698972653303,"duration":4367}},{"uid":"d74c8fcdd4a7cc4b","reportUrl":"https://Nat754.github.io/StroyremAutomation/113//#testresult/d74c8fcdd4a7cc4b","status":"passed","time":{"start":1698886270648,"stop":1698886276186,"duration":5538}},{"uid":"6d8081134fb1fb8b","reportUrl":"https://Nat754.github.io/StroyremAutomation/112//#testresult/6d8081134fb1fb8b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1698800084842,"stop":1698800101504,"duration":16662}},{"uid":"e233a776bd1d380d","reportUrl":"https://Nat754.github.io/StroyremAutomation/111//#testresult/e233a776bd1d380d","status":"passed","time":{"start":1698713491772,"stop":1698713496165,"duration":4393}},{"uid":"65d76d63603b811b","reportUrl":"https://Nat754.github.io/StroyremAutomation/110//#testresult/65d76d63603b811b","status":"passed","time":{"start":1698627075295,"stop":1698627080181,"duration":4886}},{"uid":"6e4cfac550329802","reportUrl":"https://Nat754.github.io/StroyremAutomation/109//#testresult/6e4cfac550329802","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1698540845136,"stop":1698540860449,"duration":15313}},{"uid":"f4185dd3dc56ac5e","reportUrl":"https://Nat754.github.io/StroyremAutomation/108//#testresult/f4185dd3dc56ac5e","status":"passed","time":{"start":1698454162559,"stop":1698454169154,"duration":6595}},{"uid":"aee803dc4d8889ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/107//#testresult/aee803dc4d8889ea","status":"passed","time":{"start":1698367793346,"stop":1698367797850,"duration":4504}},{"uid":"350b426012279eec","reportUrl":"https://Nat754.github.io/StroyremAutomation/106//#testresult/350b426012279eec","status":"passed","time":{"start":1698281386792,"stop":1698281392149,"duration":5357}}]},"tags":["smoke_test"]},"source":"c3eda297e11cdcc.json","parameterValues":["'https://test2.stroyrem-nn.ru/'"]}