{"uid":"6d753fe7d388c493","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"5a6e8826f1b547a3dd78f99266c49e5a","time":{"start":1720400943283,"stop":1720400945587,"duration":2304},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55e833019c7a <unknown>\n#1 0x55e832cfce2c <unknown>\n#2 0x55e832d50406 <unknown>\n#3 0x55e832d4e246 <unknown>\n#4 0x55e832d4bc27 <unknown>\n#5 0x55e832d4aa60 <unknown>\n#6 0x55e832d3e15f <unknown>\n#7 0x55e832d6c5c2 <unknown>\n#8 0x55e832d3dad9 <unknown>\n#9 0x55e832d6c78e <unknown>\n#10 0x55e832d8b303 <unknown>\n#11 0x55e832d6c363 <unknown>\n#12 0x55e832d3c247 <unknown>\n#13 0x55e832d3cb9e <unknown>\n#14 0x55e832fe024b <unknown>\n#15 0x55e832fe42f1 <unknown>\n#16 0x55e832fcbafe <unknown>\n#17 0x55e832fe4e52 <unknown>\n#18 0x55e832fb079f <unknown>\n#19 0x55e833009638 <unknown>\n#20 0x55e833009810 <unknown>\n#21 0x55e833018dac <unknown>\n#22 0x7f2a49198134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fae7cfab9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fae7e1fc990>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fae7bfd1710>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e833009810 \\\\u003Cunknown>\\\\n#21 0x55e833018dac \\\\u003Cunknown>\\\\n#22 0x7f2a49198134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55e833019c7a <unknown>\nE       #1 0x55e832cfce2c <unknown>\nE       #2 0x55e832d50406 <unknown>\nE       #3 0x55e832d4e246 <unknown>\nE       #4 0x55e832d4bc27 <unknown>\nE       #5 0x55e832d4aa60 <unknown>\nE       #6 0x55e832d3e15f <unknown>\nE       #7 0x55e832d6c5c2 <unknown>\nE       #8 0x55e832d3dad9 <unknown>\nE       #9 0x55e832d6c78e <unknown>\nE       #10 0x55e832d8b303 <unknown>\nE       #11 0x55e832d6c363 <unknown>\nE       #12 0x55e832d3c247 <unknown>\nE       #13 0x55e832d3cb9e <unknown>\nE       #14 0x55e832fe024b <unknown>\nE       #15 0x55e832fe42f1 <unknown>\nE       #16 0x55e832fcbafe <unknown>\nE       #17 0x55e832fe4e52 <unknown>\nE       #18 0x55e832fb079f <unknown>\nE       #19 0x55e833009638 <unknown>\nE       #20 0x55e833009810 <unknown>\nE       #21 0x55e833018dac <unknown>\nE       #22 0x7f2a49198134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720400209079,"stop":1720400209147,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1720400209147,"stop":1720400209147,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1720400932362,"stop":1720400933056,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1720400933056,"stop":1720400933056,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1720400933056,"stop":1720400943283,"duration":10227},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55e833019c7a <unknown>\n#1 0x55e832cfce2c <unknown>\n#2 0x55e832d50406 <unknown>\n#3 0x55e832d4e246 <unknown>\n#4 0x55e832d4bc27 <unknown>\n#5 0x55e832d4aa60 <unknown>\n#6 0x55e832d3e15f <unknown>\n#7 0x55e832d6c5c2 <unknown>\n#8 0x55e832d3dad9 <unknown>\n#9 0x55e832d6c78e <unknown>\n#10 0x55e832d8b303 <unknown>\n#11 0x55e832d6c363 <unknown>\n#12 0x55e832d3c247 <unknown>\n#13 0x55e832d3cb9e <unknown>\n#14 0x55e832fe024b <unknown>\n#15 0x55e832fe42f1 <unknown>\n#16 0x55e832fcbafe <unknown>\n#17 0x55e832fe4e52 <unknown>\n#18 0x55e832fb079f <unknown>\n#19 0x55e833009638 <unknown>\n#20 0x55e833009810 <unknown>\n#21 0x55e833018dac <unknown>\n#22 0x7f2a49198134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fae7cfab9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fae7e1fc990>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fae7bfd1710>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e833009810 \\\\u003Cunknown>\\\\n#21 0x55e833018dac \\\\u003Cunknown>\\\\n#22 0x7f2a49198134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55e833019c7a <unknown>\nE       #1 0x55e832cfce2c <unknown>\nE       #2 0x55e832d50406 <unknown>\nE       #3 0x55e832d4e246 <unknown>\nE       #4 0x55e832d4bc27 <unknown>\nE       #5 0x55e832d4aa60 <unknown>\nE       #6 0x55e832d3e15f <unknown>\nE       #7 0x55e832d6c5c2 <unknown>\nE       #8 0x55e832d3dad9 <unknown>\nE       #9 0x55e832d6c78e <unknown>\nE       #10 0x55e832d8b303 <unknown>\nE       #11 0x55e832d6c363 <unknown>\nE       #12 0x55e832d3c247 <unknown>\nE       #13 0x55e832d3cb9e <unknown>\nE       #14 0x55e832fe024b <unknown>\nE       #15 0x55e832fe42f1 <unknown>\nE       #16 0x55e832fcbafe <unknown>\nE       #17 0x55e832fe4e52 <unknown>\nE       #18 0x55e832fb079f <unknown>\nE       #19 0x55e833009638 <unknown>\nE       #20 0x55e833009810 <unknown>\nE       #21 0x55e833018dac <unknown>\nE       #22 0x7f2a49198134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1720400943283,"stop":1720400943313,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1720400943383,"stop":1720400943416,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1720400944452,"stop":1720400944494,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"92a1fd6cd9d4126d","name":"Screenshot","source":"92a1fd6cd9d4126d.png","type":"image/png","size":94667},{"uid":"7f969f7cb3fda5a1","name":"HTML source","source":"7f969f7cb3fda5a1.html","type":"text/html","size":574243}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1720400945756,"stop":1720400945756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1720400945757,"stop":1720400945834,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"7d51a5b0af21"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":39,"unknown":0,"total":40},"items":[{"uid":"e67cf0f6e371ebd9","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/e67cf0f6e371ebd9","status":"passed","time":{"start":1720314699425,"stop":1720314708855,"duration":9430}},{"uid":"41ee2fb0a6c455c","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/41ee2fb0a6c455c","status":"passed","time":{"start":1720227988945,"stop":1720227998473,"duration":9528}},{"uid":"e438e4c3bd27a9d8","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/e438e4c3bd27a9d8","status":"passed","time":{"start":1720141599057,"stop":1720141608494,"duration":9437}},{"uid":"cfa7baf5d11eb007","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/cfa7baf5d11eb007","status":"passed","time":{"start":1720055258975,"stop":1720055268356,"duration":9381}},{"uid":"2596e714addb10a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/2596e714addb10a0","status":"passed","time":{"start":1719968902821,"stop":1719968912989,"duration":10168}},{"uid":"a6d9e24a43f524f","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/a6d9e24a43f524f","status":"passed","time":{"start":1719882483058,"stop":1719882493110,"duration":10052}},{"uid":"c0d2006a46b5ce68","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/c0d2006a46b5ce68","status":"passed","time":{"start":1719796358444,"stop":1719796367297,"duration":8853}},{"uid":"c3536b54bf789e1f","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/c3536b54bf789e1f","status":"passed","time":{"start":1719709874724,"stop":1719709883720,"duration":8996}},{"uid":"66adafb49ee4399f","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/66adafb49ee4399f","status":"passed","time":{"start":1719623147296,"stop":1719623157065,"duration":9769}},{"uid":"c2f2bf9274292191","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/c2f2bf9274292191","status":"passed","time":{"start":1719536986567,"stop":1719536996601,"duration":10034}},{"uid":"cdc50e04f5b1d06f","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/cdc50e04f5b1d06f","status":"passed","time":{"start":1719450442422,"stop":1719450451807,"duration":9385}},{"uid":"7fb586c82bfa9582","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/7fb586c82bfa9582","status":"passed","time":{"start":1719364017526,"stop":1719364027159,"duration":9633}},{"uid":"a0e62ef1afdcac68","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/a0e62ef1afdcac68","status":"passed","time":{"start":1719277758617,"stop":1719277768591,"duration":9974}},{"uid":"f557cd04832dba2","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/f557cd04832dba2","status":"passed","time":{"start":1719191343324,"stop":1719191353235,"duration":9911}},{"uid":"6bd69939267b0a39","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/6bd69939267b0a39","status":"passed","time":{"start":1719105075835,"stop":1719105085529,"duration":9694}},{"uid":"82398358d0ff952a","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/82398358d0ff952a","status":"passed","time":{"start":1719018456276,"stop":1719018466313,"duration":10037}},{"uid":"467b2c5eda11b99d","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/467b2c5eda11b99d","status":"passed","time":{"start":1718932167739,"stop":1718932178139,"duration":10400}},{"uid":"371ce2ec2c12c09f","reportUrl":"https://Nat754.github.io/StroyremAutomation/344//#testresult/371ce2ec2c12c09f","status":"passed","time":{"start":1718845534024,"stop":1718845543457,"duration":9433}},{"uid":"787e5f4fc8454d67","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/787e5f4fc8454d67","status":"passed","time":{"start":1718759442136,"stop":1718759452419,"duration":10283}},{"uid":"49e723a2f5ed3846","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/49e723a2f5ed3846","status":"passed","time":{"start":1718672877475,"stop":1718672888265,"duration":10790}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"6d753fe7d388c493.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}