{"uid":"6ffe333ad2ee7797","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"24bb2201ad02feae4230ec2c85755ba8","time":{"start":1724289734119,"stop":1724289736423,"duration":2304},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x555bbb88d81a <unknown>\n#1 0x555bbb55be50 <unknown>\n#2 0x555bbb5b2346 <unknown>\n#3 0x555bbb5b025d <unknown>\n#4 0x555bbb5adcf7 <unknown>\n#5 0x555bbb5acb9c <unknown>\n#6 0x555bbb5a04d6 <unknown>\n#7 0x555bbb5d0492 <unknown>\n#8 0x555bbb59fe89 <unknown>\n#9 0x555bbb5d065e <unknown>\n#10 0x555bbb5ee9c6 <unknown>\n#11 0x555bbb5d0233 <unknown>\n#12 0x555bbb59e093 <unknown>\n#13 0x555bbb59f09e <unknown>\n#14 0x555bbb854a7b <unknown>\n#15 0x555bbb858a31 <unknown>\n#16 0x555bbb840645 <unknown>\n#17 0x555bbb8595a2 <unknown>\n#18 0x555bbb82581f <unknown>\n#19 0x555bbb87c618 <unknown>\n#20 0x555bbb87c7e2 <unknown>\n#21 0x555bbb88c60c <unknown>\n#22 0x7fcc88277134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa75f04e250>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa75f001a10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa75df896d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x555bbb87c7e2 \\\\u003Cunknown>\\\\n#21 0x555bbb88c60c \\\\u003Cunknown>\\\\n#22 0x7fcc88277134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome=128.0.6613.84)\nE       Stacktrace:\nE       #0 0x555bbb88d81a <unknown>\nE       #1 0x555bbb55be50 <unknown>\nE       #2 0x555bbb5b2346 <unknown>\nE       #3 0x555bbb5b025d <unknown>\nE       #4 0x555bbb5adcf7 <unknown>\nE       #5 0x555bbb5acb9c <unknown>\nE       #6 0x555bbb5a04d6 <unknown>\nE       #7 0x555bbb5d0492 <unknown>\nE       #8 0x555bbb59fe89 <unknown>\nE       #9 0x555bbb5d065e <unknown>\nE       #10 0x555bbb5ee9c6 <unknown>\nE       #11 0x555bbb5d0233 <unknown>\nE       #12 0x555bbb59e093 <unknown>\nE       #13 0x555bbb59f09e <unknown>\nE       #14 0x555bbb854a7b <unknown>\nE       #15 0x555bbb858a31 <unknown>\nE       #16 0x555bbb840645 <unknown>\nE       #17 0x555bbb8595a2 <unknown>\nE       #18 0x555bbb82581f <unknown>\nE       #19 0x555bbb87c618 <unknown>\nE       #20 0x555bbb87c7e2 <unknown>\nE       #21 0x555bbb88c60c <unknown>\nE       #22 0x7fcc88277134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724288307774,"stop":1724288307842,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1724288307842,"stop":1724288307843,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1724289724728,"stop":1724289725534,"duration":806},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1724289725534,"stop":1724289734119,"duration":8585},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1724289725534,"stop":1724289725534,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x555bbb88d81a <unknown>\n#1 0x555bbb55be50 <unknown>\n#2 0x555bbb5b2346 <unknown>\n#3 0x555bbb5b025d <unknown>\n#4 0x555bbb5adcf7 <unknown>\n#5 0x555bbb5acb9c <unknown>\n#6 0x555bbb5a04d6 <unknown>\n#7 0x555bbb5d0492 <unknown>\n#8 0x555bbb59fe89 <unknown>\n#9 0x555bbb5d065e <unknown>\n#10 0x555bbb5ee9c6 <unknown>\n#11 0x555bbb5d0233 <unknown>\n#12 0x555bbb59e093 <unknown>\n#13 0x555bbb59f09e <unknown>\n#14 0x555bbb854a7b <unknown>\n#15 0x555bbb858a31 <unknown>\n#16 0x555bbb840645 <unknown>\n#17 0x555bbb8595a2 <unknown>\n#18 0x555bbb82581f <unknown>\n#19 0x555bbb87c618 <unknown>\n#20 0x555bbb87c7e2 <unknown>\n#21 0x555bbb88c60c <unknown>\n#22 0x7fcc88277134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa75f04e250>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa75f001a10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa75df896d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x555bbb87c7e2 \\\\u003Cunknown>\\\\n#21 0x555bbb88c60c \\\\u003Cunknown>\\\\n#22 0x7fcc88277134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome=128.0.6613.84)\nE       Stacktrace:\nE       #0 0x555bbb88d81a <unknown>\nE       #1 0x555bbb55be50 <unknown>\nE       #2 0x555bbb5b2346 <unknown>\nE       #3 0x555bbb5b025d <unknown>\nE       #4 0x555bbb5adcf7 <unknown>\nE       #5 0x555bbb5acb9c <unknown>\nE       #6 0x555bbb5a04d6 <unknown>\nE       #7 0x555bbb5d0492 <unknown>\nE       #8 0x555bbb59fe89 <unknown>\nE       #9 0x555bbb5d065e <unknown>\nE       #10 0x555bbb5ee9c6 <unknown>\nE       #11 0x555bbb5d0233 <unknown>\nE       #12 0x555bbb59e093 <unknown>\nE       #13 0x555bbb59f09e <unknown>\nE       #14 0x555bbb854a7b <unknown>\nE       #15 0x555bbb858a31 <unknown>\nE       #16 0x555bbb840645 <unknown>\nE       #17 0x555bbb8595a2 <unknown>\nE       #18 0x555bbb82581f <unknown>\nE       #19 0x555bbb87c618 <unknown>\nE       #20 0x555bbb87c7e2 <unknown>\nE       #21 0x555bbb88c60c <unknown>\nE       #22 0x7fcc88277134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1724289734119,"stop":1724289734149,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1724289734226,"stop":1724289734251,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1724289735301,"stop":1724289735345,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"bf4d0d45d266427d","name":"Screenshot","source":"bf4d0d45d266427d.png","type":"image/png","size":111955},{"uid":"53280b052980b817","name":"HTML source","source":"53280b052980b817.html","type":"text/html","size":908562}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1724289736603,"stop":1724289736603,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1724289736604,"stop":1724289736687,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"7bd3b51f4c3c"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":82,"unknown":0,"total":85},"items":[{"uid":"df19a6d30a41ee91","reportUrl":"https://Nat754.github.io/StroyremAutomation/406//#testresult/df19a6d30a41ee91","status":"passed","time":{"start":1724203399928,"stop":1724203413227,"duration":13299}},{"uid":"29c638ff53d8afa6","reportUrl":"https://Nat754.github.io/StroyremAutomation/405//#testresult/29c638ff53d8afa6","status":"passed","time":{"start":1724117071526,"stop":1724117084092,"duration":12566}},{"uid":"f7d33a17fec7a2a2","reportUrl":"https://Nat754.github.io/StroyremAutomation/404//#testresult/f7d33a17fec7a2a2","status":"passed","time":{"start":1724030332619,"stop":1724030344128,"duration":11509}},{"uid":"f495e07d5d53032","reportUrl":"https://Nat754.github.io/StroyremAutomation/403//#testresult/f495e07d5d53032","status":"passed","time":{"start":1723944208810,"stop":1723944220671,"duration":11861}},{"uid":"ec6b579adcafc65d","reportUrl":"https://Nat754.github.io/StroyremAutomation/402//#testresult/ec6b579adcafc65d","status":"passed","time":{"start":1723857416709,"stop":1723857429022,"duration":12313}},{"uid":"9b6465b91c4ab3b","reportUrl":"https://Nat754.github.io/StroyremAutomation/401//#testresult/9b6465b91c4ab3b","status":"passed","time":{"start":1723771143653,"stop":1723771156338,"duration":12685}},{"uid":"b1b403f2a7cd0134","reportUrl":"https://Nat754.github.io/StroyremAutomation/400//#testresult/b1b403f2a7cd0134","status":"passed","time":{"start":1723684636233,"stop":1723684648272,"duration":12039}},{"uid":"e7c84cd7c9e5211e","reportUrl":"https://Nat754.github.io/StroyremAutomation/399//#testresult/e7c84cd7c9e5211e","status":"passed","time":{"start":1723598315822,"stop":1723598327025,"duration":11203}},{"uid":"133eaf07ba3bea9e","reportUrl":"https://Nat754.github.io/StroyremAutomation/398//#testresult/133eaf07ba3bea9e","status":"passed","time":{"start":1723512256400,"stop":1723512270062,"duration":13662}},{"uid":"8380e55784b409c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/397//#testresult/8380e55784b409c4","status":"passed","time":{"start":1723425681436,"stop":1723425693128,"duration":11692}},{"uid":"84596f8a52ab0bb4","reportUrl":"https://Nat754.github.io/StroyremAutomation/396//#testresult/84596f8a52ab0bb4","status":"passed","time":{"start":1723339674717,"stop":1723339687826,"duration":13109}},{"uid":"4be4d8449f8fa1c9","reportUrl":"https://Nat754.github.io/StroyremAutomation/395//#testresult/4be4d8449f8fa1c9","status":"passed","time":{"start":1723252664211,"stop":1723252675581,"duration":11370}},{"uid":"316edd277a02acb2","reportUrl":"https://Nat754.github.io/StroyremAutomation/394//#testresult/316edd277a02acb2","status":"passed","time":{"start":1723166301433,"stop":1723166312922,"duration":11489}},{"uid":"d17697043f2110bf","reportUrl":"https://Nat754.github.io/StroyremAutomation/393//#testresult/d17697043f2110bf","status":"passed","time":{"start":1723079900909,"stop":1723079912185,"duration":11276}},{"uid":"1158490f6f1b2c5","reportUrl":"https://Nat754.github.io/StroyremAutomation/392//#testresult/1158490f6f1b2c5","status":"passed","time":{"start":1722993630634,"stop":1722993642827,"duration":12193}},{"uid":"228754b32c326187","reportUrl":"https://Nat754.github.io/StroyremAutomation/391//#testresult/228754b32c326187","status":"passed","time":{"start":1722907063055,"stop":1722907074397,"duration":11342}},{"uid":"3652b5dc8ff34a96","reportUrl":"https://Nat754.github.io/StroyremAutomation/390//#testresult/3652b5dc8ff34a96","status":"passed","time":{"start":1722820783009,"stop":1722820794611,"duration":11602}},{"uid":"72aaacf4a0b567d3","reportUrl":"https://Nat754.github.io/StroyremAutomation/389//#testresult/72aaacf4a0b567d3","status":"passed","time":{"start":1722734804718,"stop":1722734816957,"duration":12239}},{"uid":"12360fc8536e7475","reportUrl":"https://Nat754.github.io/StroyremAutomation/388//#testresult/12360fc8536e7475","status":"passed","time":{"start":1722648109184,"stop":1722648121778,"duration":12594}},{"uid":"765af14f1a815dfb","reportUrl":"https://Nat754.github.io/StroyremAutomation/387//#testresult/765af14f1a815dfb","status":"passed","time":{"start":1722561436774,"stop":1722561447945,"duration":11171}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"6ffe333ad2ee7797.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}