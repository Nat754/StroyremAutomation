{"uid":"b3260107d33f1c53","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1696468173481,"stop":1696468175830,"duration":2349},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563b6ef41933 <unknown>\n#1 0x563b6ec1b6f7 <unknown>\n#2 0x563b6ec68b9d <unknown>\n#3 0x563b6ec66f3d <unknown>\n#4 0x563b6ec64cf8 <unknown>\n#5 0x563b6ec63d67 <unknown>\n#6 0x563b6ec58a29 <unknown>\n#7 0x563b6ec84602 <unknown>\n#8 0x563b6ec58446 <unknown>\n#9 0x563b6ec847ce <unknown>\n#10 0x563b6ec9d857 <unknown>\n#11 0x563b6ec843d3 <unknown>\n#12 0x563b6ec56e64 <unknown>\n#13 0x563b6ec57c4e <unknown>\n#14 0x563b6ef07558 <unknown>\n#15 0x563b6ef0b4a0 <unknown>\n#16 0x563b6ef1597c <unknown>\n#17 0x563b6ef0c0b8 <unknown>\n#18 0x563b6eed7cdf <unknown>\n#19 0x563b6ef30048 <unknown>\n#20 0x563b6ef30219 <unknown>\n#21 0x563b6ef40ac3 <unknown>\n#22 0x7fbf098e7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080ff10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe806f90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe8f0890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563b6ef30219 \\\\u003Cunknown>\\\\n#21 0x563b6ef40ac3 \\\\u003Cunknown>\\\\n#22 0x7fbf098e7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563b6ef41933 <unknown>\nE       #1 0x563b6ec1b6f7 <unknown>\nE       #2 0x563b6ec68b9d <unknown>\nE       #3 0x563b6ec66f3d <unknown>\nE       #4 0x563b6ec64cf8 <unknown>\nE       #5 0x563b6ec63d67 <unknown>\nE       #6 0x563b6ec58a29 <unknown>\nE       #7 0x563b6ec84602 <unknown>\nE       #8 0x563b6ec58446 <unknown>\nE       #9 0x563b6ec847ce <unknown>\nE       #10 0x563b6ec9d857 <unknown>\nE       #11 0x563b6ec843d3 <unknown>\nE       #12 0x563b6ec56e64 <unknown>\nE       #13 0x563b6ec57c4e <unknown>\nE       #14 0x563b6ef07558 <unknown>\nE       #15 0x563b6ef0b4a0 <unknown>\nE       #16 0x563b6ef1597c <unknown>\nE       #17 0x563b6ef0c0b8 <unknown>\nE       #18 0x563b6eed7cdf <unknown>\nE       #19 0x563b6ef30048 <unknown>\nE       #20 0x563b6ef30219 <unknown>\nE       #21 0x563b6ef40ac3 <unknown>\nE       #22 0x7fbf098e7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468162770,"stop":1696468163575,"duration":805},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468163576,"stop":1696468163576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468163576,"stop":1696468173481,"duration":9905},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563b6ef41933 <unknown>\n#1 0x563b6ec1b6f7 <unknown>\n#2 0x563b6ec68b9d <unknown>\n#3 0x563b6ec66f3d <unknown>\n#4 0x563b6ec64cf8 <unknown>\n#5 0x563b6ec63d67 <unknown>\n#6 0x563b6ec58a29 <unknown>\n#7 0x563b6ec84602 <unknown>\n#8 0x563b6ec58446 <unknown>\n#9 0x563b6ec847ce <unknown>\n#10 0x563b6ec9d857 <unknown>\n#11 0x563b6ec843d3 <unknown>\n#12 0x563b6ec56e64 <unknown>\n#13 0x563b6ec57c4e <unknown>\n#14 0x563b6ef07558 <unknown>\n#15 0x563b6ef0b4a0 <unknown>\n#16 0x563b6ef1597c <unknown>\n#17 0x563b6ef0c0b8 <unknown>\n#18 0x563b6eed7cdf <unknown>\n#19 0x563b6ef30048 <unknown>\n#20 0x563b6ef30219 <unknown>\n#21 0x563b6ef40ac3 <unknown>\n#22 0x7fbf098e7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080ff10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe806f90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe8f0890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563b6ef30219 \\\\u003Cunknown>\\\\n#21 0x563b6ef40ac3 \\\\u003Cunknown>\\\\n#22 0x7fbf098e7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563b6ef41933 <unknown>\nE       #1 0x563b6ec1b6f7 <unknown>\nE       #2 0x563b6ec68b9d <unknown>\nE       #3 0x563b6ec66f3d <unknown>\nE       #4 0x563b6ec64cf8 <unknown>\nE       #5 0x563b6ec63d67 <unknown>\nE       #6 0x563b6ec58a29 <unknown>\nE       #7 0x563b6ec84602 <unknown>\nE       #8 0x563b6ec58446 <unknown>\nE       #9 0x563b6ec847ce <unknown>\nE       #10 0x563b6ec9d857 <unknown>\nE       #11 0x563b6ec843d3 <unknown>\nE       #12 0x563b6ec56e64 <unknown>\nE       #13 0x563b6ec57c4e <unknown>\nE       #14 0x563b6ef07558 <unknown>\nE       #15 0x563b6ef0b4a0 <unknown>\nE       #16 0x563b6ef1597c <unknown>\nE       #17 0x563b6ef0c0b8 <unknown>\nE       #18 0x563b6eed7cdf <unknown>\nE       #19 0x563b6ef30048 <unknown>\nE       #20 0x563b6ef30219 <unknown>\nE       #21 0x563b6ef40ac3 <unknown>\nE       #22 0x7fbf098e7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468173481,"stop":1696468173533,"duration":52},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468173598,"stop":1696468173644,"duration":46},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468174693,"stop":1696468174749,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"81df5bf61566f149","name":"Screenshot","source":"81df5bf61566f149.png","type":"image/png","size":63940},{"uid":"d4fbed7bc41862fb","name":"HTML source","source":"d4fbed7bc41862fb.html","type":"text/html","size":900046}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468176049,"stop":1696468176049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468176049,"stop":1696468176111,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":70,"unknown":0,"total":71},"items":[{"uid":"e0f2ed2bac7aa32a","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/e0f2ed2bac7aa32a","status":"passed","time":{"start":1696381496889,"stop":1696381504872,"duration":7983}},{"uid":"f6b84ee25f076382","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/f6b84ee25f076382","status":"passed","time":{"start":1696295034950,"stop":1696295042856,"duration":7906}},{"uid":"7935a02b57355b3c","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/7935a02b57355b3c","status":"passed","time":{"start":1696282980163,"stop":1696282989365,"duration":9202}},{"uid":"53fc8ec4e822d38d","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/53fc8ec4e822d38d","status":"passed","time":{"start":1696258564667,"stop":1696258572271,"duration":7604}},{"uid":"2195a8b630d340cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/2195a8b630d340cf","status":"passed","time":{"start":1696208683876,"stop":1696208690815,"duration":6939}},{"uid":"adb6fb314ac1735","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/adb6fb314ac1735","status":"passed","time":{"start":1696122672977,"stop":1696122679951,"duration":6974}},{"uid":"e1401424198adbc3","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/e1401424198adbc3","status":"passed","time":{"start":1696035637088,"stop":1696035643731,"duration":6643}},{"uid":"880a1fb3d21419a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/880a1fb3d21419a1","status":"passed","time":{"start":1695949359532,"stop":1695949366068,"duration":6536}},{"uid":"5e76335d69b046db","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/5e76335d69b046db","status":"passed","time":{"start":1695863233758,"stop":1695863241704,"duration":7946}},{"uid":"dfb9498cb796a67b","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/dfb9498cb796a67b","status":"passed","time":{"start":1695777058183,"stop":1695777066087,"duration":7904}},{"uid":"41e92ebd03206691","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/41e92ebd03206691","status":"passed","time":{"start":1695690524702,"stop":1695690532385,"duration":7683}},{"uid":"2c9273d4eda1c7dd","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/2c9273d4eda1c7dd","status":"passed","time":{"start":1695604076573,"stop":1695604084293,"duration":7720}},{"uid":"f855a02355443dd5","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/f855a02355443dd5","status":"passed","time":{"start":1695517487176,"stop":1695517493946,"duration":6770}},{"uid":"6dfb6f1de8319d0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/6dfb6f1de8319d0d","status":"passed","time":{"start":1695431144782,"stop":1695431152812,"duration":8030}},{"uid":"4a7f6e181bb0639f","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/4a7f6e181bb0639f","status":"passed","time":{"start":1695406441910,"stop":1695406450366,"duration":8456}},{"uid":"dbca01016b130696","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/dbca01016b130696","status":"passed","time":{"start":1695344565716,"stop":1695344572388,"duration":6672}},{"uid":"ee90f8c3b7f7a849","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/ee90f8c3b7f7a849","status":"passed","time":{"start":1695258140071,"stop":1695258146556,"duration":6485}},{"uid":"30ac714028adc57c","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/30ac714028adc57c","status":"passed","time":{"start":1695172216672,"stop":1695172224544,"duration":7872}},{"uid":"a9abe575119daae5","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/a9abe575119daae5","status":"passed","time":{"start":1695085499382,"stop":1695085506609,"duration":7227}},{"uid":"8a9c22118a102b17","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/8a9c22118a102b17","status":"passed","time":{"start":1695064084173,"stop":1695064091601,"duration":7428}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"b3260107d33f1c53.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}