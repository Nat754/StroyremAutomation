{"uid":"e281831449aadb49","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"5a6e8826f1b547a3dd78f99266c49e5a","time":{"start":1696467938666,"stop":1696467940971,"duration":2305},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55a4a6270933 <unknown>\n#1 0x55a4a5f4a6f7 <unknown>\n#2 0x55a4a5f97b9d <unknown>\n#3 0x55a4a5f95f3d <unknown>\n#4 0x55a4a5f93cf8 <unknown>\n#5 0x55a4a5f92d67 <unknown>\n#6 0x55a4a5f87a29 <unknown>\n#7 0x55a4a5fb3602 <unknown>\n#8 0x55a4a5f87446 <unknown>\n#9 0x55a4a5fb37ce <unknown>\n#10 0x55a4a5fcc857 <unknown>\n#11 0x55a4a5fb33d3 <unknown>\n#12 0x55a4a5f85e64 <unknown>\n#13 0x55a4a5f86c4e <unknown>\n#14 0x55a4a6236558 <unknown>\n#15 0x55a4a623a4a0 <unknown>\n#16 0x55a4a624497c <unknown>\n#17 0x55a4a623b0b8 <unknown>\n#18 0x55a4a6206cdf <unknown>\n#19 0x55a4a625f048 <unknown>\n#20 0x55a4a625f219 <unknown>\n#21 0x55a4a626fac3 <unknown>\n#22 0x7f8f51ca3044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806a50>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7ec810>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7ecd50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a4a625f219 \\\\u003Cunknown>\\\\n#21 0x55a4a626fac3 \\\\u003Cunknown>\\\\n#22 0x7f8f51ca3044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55a4a6270933 <unknown>\nE       #1 0x55a4a5f4a6f7 <unknown>\nE       #2 0x55a4a5f97b9d <unknown>\nE       #3 0x55a4a5f95f3d <unknown>\nE       #4 0x55a4a5f93cf8 <unknown>\nE       #5 0x55a4a5f92d67 <unknown>\nE       #6 0x55a4a5f87a29 <unknown>\nE       #7 0x55a4a5fb3602 <unknown>\nE       #8 0x55a4a5f87446 <unknown>\nE       #9 0x55a4a5fb37ce <unknown>\nE       #10 0x55a4a5fcc857 <unknown>\nE       #11 0x55a4a5fb33d3 <unknown>\nE       #12 0x55a4a5f85e64 <unknown>\nE       #13 0x55a4a5f86c4e <unknown>\nE       #14 0x55a4a6236558 <unknown>\nE       #15 0x55a4a623a4a0 <unknown>\nE       #16 0x55a4a624497c <unknown>\nE       #17 0x55a4a623b0b8 <unknown>\nE       #18 0x55a4a6206cdf <unknown>\nE       #19 0x55a4a625f048 <unknown>\nE       #20 0x55a4a625f219 <unknown>\nE       #21 0x55a4a626fac3 <unknown>\nE       #22 0x7f8f51ca3044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696467920270,"stop":1696467921086,"duration":816},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467921086,"stop":1696467921086,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696467921087,"stop":1696467938665,"duration":17578},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55a4a6270933 <unknown>\n#1 0x55a4a5f4a6f7 <unknown>\n#2 0x55a4a5f97b9d <unknown>\n#3 0x55a4a5f95f3d <unknown>\n#4 0x55a4a5f93cf8 <unknown>\n#5 0x55a4a5f92d67 <unknown>\n#6 0x55a4a5f87a29 <unknown>\n#7 0x55a4a5fb3602 <unknown>\n#8 0x55a4a5f87446 <unknown>\n#9 0x55a4a5fb37ce <unknown>\n#10 0x55a4a5fcc857 <unknown>\n#11 0x55a4a5fb33d3 <unknown>\n#12 0x55a4a5f85e64 <unknown>\n#13 0x55a4a5f86c4e <unknown>\n#14 0x55a4a6236558 <unknown>\n#15 0x55a4a623a4a0 <unknown>\n#16 0x55a4a624497c <unknown>\n#17 0x55a4a623b0b8 <unknown>\n#18 0x55a4a6206cdf <unknown>\n#19 0x55a4a625f048 <unknown>\n#20 0x55a4a625f219 <unknown>\n#21 0x55a4a626fac3 <unknown>\n#22 0x7f8f51ca3044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806a50>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7ec810>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7ecd50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a4a625f219 \\\\u003Cunknown>\\\\n#21 0x55a4a626fac3 \\\\u003Cunknown>\\\\n#22 0x7f8f51ca3044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55a4a6270933 <unknown>\nE       #1 0x55a4a5f4a6f7 <unknown>\nE       #2 0x55a4a5f97b9d <unknown>\nE       #3 0x55a4a5f95f3d <unknown>\nE       #4 0x55a4a5f93cf8 <unknown>\nE       #5 0x55a4a5f92d67 <unknown>\nE       #6 0x55a4a5f87a29 <unknown>\nE       #7 0x55a4a5fb3602 <unknown>\nE       #8 0x55a4a5f87446 <unknown>\nE       #9 0x55a4a5fb37ce <unknown>\nE       #10 0x55a4a5fcc857 <unknown>\nE       #11 0x55a4a5fb33d3 <unknown>\nE       #12 0x55a4a5f85e64 <unknown>\nE       #13 0x55a4a5f86c4e <unknown>\nE       #14 0x55a4a6236558 <unknown>\nE       #15 0x55a4a623a4a0 <unknown>\nE       #16 0x55a4a624497c <unknown>\nE       #17 0x55a4a623b0b8 <unknown>\nE       #18 0x55a4a6206cdf <unknown>\nE       #19 0x55a4a625f048 <unknown>\nE       #20 0x55a4a625f219 <unknown>\nE       #21 0x55a4a626fac3 <unknown>\nE       #22 0x7f8f51ca3044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696467938666,"stop":1696467938706,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696467938776,"stop":1696467938823,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696467939876,"stop":1696467939929,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"4ff8bac2440fd1ff","name":"Screenshot","source":"4ff8bac2440fd1ff.png","type":"image/png","size":106118},{"uid":"ad8e75be0725ffb0","name":"HTML source","source":"ad8e75be0725ffb0.html","type":"text/html","size":852160}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696467941194,"stop":1696467941194,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696467941194,"stop":1696467941262,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":78,"unknown":0,"total":86},"items":[{"uid":"4461087a529aec51","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/4461087a529aec51","status":"passed","time":{"start":1696381249962,"stop":1696381259461,"duration":9499}},{"uid":"8ac209819e585a","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/8ac209819e585a","status":"passed","time":{"start":1696294800321,"stop":1696294809806,"duration":9485}},{"uid":"3487c5a0a982ee11","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/3487c5a0a982ee11","status":"passed","time":{"start":1696282652337,"stop":1696282663129,"duration":10792}},{"uid":"27032c4b2fe22afd","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/27032c4b2fe22afd","status":"passed","time":{"start":1696258297859,"stop":1696258306989,"duration":9130}},{"uid":"229de30cda66fee3","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/229de30cda66fee3","status":"passed","time":{"start":1696208442765,"stop":1696208452139,"duration":9374}},{"uid":"767b72bbe2b84efe","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/767b72bbe2b84efe","status":"passed","time":{"start":1696122426727,"stop":1696122435310,"duration":8583}},{"uid":"8ee2782b45209b5d","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/8ee2782b45209b5d","status":"passed","time":{"start":1696035411025,"stop":1696035419313,"duration":8288}},{"uid":"b4977d76c6ddbfb9","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/b4977d76c6ddbfb9","status":"passed","time":{"start":1695949140331,"stop":1695949148391,"duration":8060}},{"uid":"5362dc2bb6635491","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/5362dc2bb6635491","status":"passed","time":{"start":1695862925469,"stop":1695862934861,"duration":9392}},{"uid":"fbf90106e7513292","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/fbf90106e7513292","status":"passed","time":{"start":1695776744347,"stop":1695776753914,"duration":9567}},{"uid":"38dffb2cb0cfe6c8","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/38dffb2cb0cfe6c8","status":"passed","time":{"start":1695690212658,"stop":1695690222012,"duration":9354}},{"uid":"6054a2d7e326e4b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/6054a2d7e326e4b1","status":"passed","time":{"start":1695603780382,"stop":1695603789842,"duration":9460}},{"uid":"3379bfcce24a716e","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/3379bfcce24a716e","status":"passed","time":{"start":1695517266827,"stop":1695517274947,"duration":8120}},{"uid":"c10d46da2abca8c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/c10d46da2abca8c7","status":"passed","time":{"start":1695430807993,"stop":1695430817868,"duration":9875}},{"uid":"605baf7a2b1328a2","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/605baf7a2b1328a2","status":"passed","time":{"start":1695406120409,"stop":1695406130498,"duration":10089}},{"uid":"925c6d2cd84f4dc9","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/925c6d2cd84f4dc9","status":"passed","time":{"start":1695344327539,"stop":1695344335649,"duration":8110}},{"uid":"2e1431534f0b52f7","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/2e1431534f0b52f7","status":"passed","time":{"start":1695257907890,"stop":1695257916159,"duration":8269}},{"uid":"27d6e955d84f6820","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/27d6e955d84f6820","status":"passed","time":{"start":1695171907146,"stop":1695171916992,"duration":9846}},{"uid":"a65fabdb27264b63","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/a65fabdb27264b63","status":"passed","time":{"start":1695085239385,"stop":1695085248097,"duration":8712}},{"uid":"507656c15f3e5bfa","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/507656c15f3e5bfa","status":"passed","time":{"start":1695063775507,"stop":1695063783935,"duration":8428}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"e281831449aadb49.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}