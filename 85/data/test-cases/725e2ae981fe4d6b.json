{"uid":"725e2ae981fe4d6b","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1696468207858,"stop":1696468213481,"duration":5623},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=117.0.5938.149); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5640584df933 <unknown>\n#1 0x5640581b96f7 <unknown>\n#2 0x5640581be64e <unknown>\n#3 0x5640581bfed0 <unknown>\n#4 0x5640581bff8c <unknown>\n#5 0x564058206a81 <unknown>\n#6 0x564058204f3d <unknown>\n#7 0x564058202cf8 <unknown>\n#8 0x564058201d67 <unknown>\n#9 0x5640581f6a29 <unknown>\n#10 0x564058222602 <unknown>\n#11 0x5640581f6446 <unknown>\n#12 0x5640582227ce <unknown>\n#13 0x56405823b857 <unknown>\n#14 0x5640582223d3 <unknown>\n#15 0x5640581f4e64 <unknown>\n#16 0x5640581f5c4e <unknown>\n#17 0x5640584a5558 <unknown>\n#18 0x5640584a94a0 <unknown>\n#19 0x5640584b397c <unknown>\n#20 0x5640584aa0b8 <unknown>\n#21 0x564058475cdf <unknown>\n#22 0x5640584ce048 <unknown>\n#23 0x5640584ce219 <unknown>\n#24 0x5640584deac3 <unknown>\n#25 0x7fe201fcc044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080db10>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f4200858610>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe8057d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5640584ce219 \\\\u003Cunknown>\\\\n#24 0x5640584deac3 \\\\u003Cunknown>\\\\n#25 0x7fe201fcc044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=117.0.5938.149); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5640584df933 <unknown>\nE       #1 0x5640581b96f7 <unknown>\nE       #2 0x5640581be64e <unknown>\nE       #3 0x5640581bfed0 <unknown>\nE       #4 0x5640581bff8c <unknown>\nE       #5 0x564058206a81 <unknown>\nE       #6 0x564058204f3d <unknown>\nE       #7 0x564058202cf8 <unknown>\nE       #8 0x564058201d67 <unknown>\nE       #9 0x5640581f6a29 <unknown>\nE       #10 0x564058222602 <unknown>\nE       #11 0x5640581f6446 <unknown>\nE       #12 0x5640582227ce <unknown>\nE       #13 0x56405823b857 <unknown>\nE       #14 0x5640582223d3 <unknown>\nE       #15 0x5640581f4e64 <unknown>\nE       #16 0x5640581f5c4e <unknown>\nE       #17 0x5640584a5558 <unknown>\nE       #18 0x5640584a94a0 <unknown>\nE       #19 0x5640584b397c <unknown>\nE       #20 0x5640584aa0b8 <unknown>\nE       #21 0x564058475cdf <unknown>\nE       #22 0x5640584ce048 <unknown>\nE       #23 0x5640584ce219 <unknown>\nE       #24 0x5640584deac3 <unknown>\nE       #25 0x7fe201fcc044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468195881,"stop":1696468196684,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468196684,"stop":1696468207858,"duration":11174},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468196684,"stop":1696468196684,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=117.0.5938.149); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x5640584df933 <unknown>\n#1 0x5640581b96f7 <unknown>\n#2 0x5640581be64e <unknown>\n#3 0x5640581bfed0 <unknown>\n#4 0x5640581bff8c <unknown>\n#5 0x564058206a81 <unknown>\n#6 0x564058204f3d <unknown>\n#7 0x564058202cf8 <unknown>\n#8 0x564058201d67 <unknown>\n#9 0x5640581f6a29 <unknown>\n#10 0x564058222602 <unknown>\n#11 0x5640581f6446 <unknown>\n#12 0x5640582227ce <unknown>\n#13 0x56405823b857 <unknown>\n#14 0x5640582223d3 <unknown>\n#15 0x5640581f4e64 <unknown>\n#16 0x5640581f5c4e <unknown>\n#17 0x5640584a5558 <unknown>\n#18 0x5640584a94a0 <unknown>\n#19 0x5640584b397c <unknown>\n#20 0x5640584aa0b8 <unknown>\n#21 0x564058475cdf <unknown>\n#22 0x5640584ce048 <unknown>\n#23 0x5640584ce219 <unknown>\n#24 0x5640584deac3 <unknown>\n#25 0x7fe201fcc044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080db10>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f4200858610>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe8057d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x5640584ce219 \\\\u003Cunknown>\\\\n#24 0x5640584deac3 \\\\u003Cunknown>\\\\n#25 0x7fe201fcc044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=117.0.5938.149); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x5640584df933 <unknown>\nE       #1 0x5640581b96f7 <unknown>\nE       #2 0x5640581be64e <unknown>\nE       #3 0x5640581bfed0 <unknown>\nE       #4 0x5640581bff8c <unknown>\nE       #5 0x564058206a81 <unknown>\nE       #6 0x564058204f3d <unknown>\nE       #7 0x564058202cf8 <unknown>\nE       #8 0x564058201d67 <unknown>\nE       #9 0x5640581f6a29 <unknown>\nE       #10 0x564058222602 <unknown>\nE       #11 0x5640581f6446 <unknown>\nE       #12 0x5640582227ce <unknown>\nE       #13 0x56405823b857 <unknown>\nE       #14 0x5640582223d3 <unknown>\nE       #15 0x5640581f4e64 <unknown>\nE       #16 0x5640581f5c4e <unknown>\nE       #17 0x5640584a5558 <unknown>\nE       #18 0x5640584a94a0 <unknown>\nE       #19 0x5640584b397c <unknown>\nE       #20 0x5640584aa0b8 <unknown>\nE       #21 0x564058475cdf <unknown>\nE       #22 0x5640584ce048 <unknown>\nE       #23 0x5640584ce219 <unknown>\nE       #24 0x5640584deac3 <unknown>\nE       #25 0x7fe201fcc044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468207859,"stop":1696468207936,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1696468210011,"stop":1696468210065,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1696468212538,"stop":1696468212610,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"3a7998a9d23960b2","name":"Screenshot","source":"3a7998a9d23960b2.png","type":"image/png","size":219813},{"uid":"c5e5b6793744f557","name":"HTML source","source":"c5e5b6793744f557.html","type":"text/html","size":811676}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696468213733,"stop":1696468213800,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696468213733,"stop":1696468213733,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"eef7b5e13afef7","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/eef7b5e13afef7","status":"passed","time":{"start":1696381532672,"stop":1696381541503,"duration":8831}},{"uid":"7cf273f86262e552","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/7cf273f86262e552","status":"passed","time":{"start":1696295068273,"stop":1696295076961,"duration":8688}},{"uid":"b4afaca0f4f21183","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/b4afaca0f4f21183","status":"passed","time":{"start":1696283025115,"stop":1696283035397,"duration":10282}},{"uid":"b079f1ae1f4b5120","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/b079f1ae1f4b5120","status":"passed","time":{"start":1696258601794,"stop":1696258610148,"duration":8354}},{"uid":"7e1b800ce5529496","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/7e1b800ce5529496","status":"passed","time":{"start":1696208716805,"stop":1696208724899,"duration":8094}},{"uid":"f351613e4679b21c","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/f351613e4679b21c","status":"passed","time":{"start":1696122708961,"stop":1696122716970,"duration":8009}},{"uid":"4c4d35d7982313b5","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/4c4d35d7982313b5","status":"passed","time":{"start":1696035668383,"stop":1696035676068,"duration":7685}},{"uid":"8185378a3ccb948d","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/8185378a3ccb948d","status":"passed","time":{"start":1695949391558,"stop":1695949399176,"duration":7618}},{"uid":"da24f3c0946ba741","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/da24f3c0946ba741","status":"passed","time":{"start":1695863276897,"stop":1695863285610,"duration":8713}},{"uid":"b5ca2b88ff85409e","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/b5ca2b88ff85409e","status":"passed","time":{"start":1695777102007,"stop":1695777110813,"duration":8806}},{"uid":"f5170363c46ca820","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/f5170363c46ca820","status":"passed","time":{"start":1695690570757,"stop":1695690579035,"duration":8278}},{"uid":"6b6f71757a47492a","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/6b6f71757a47492a","status":"passed","time":{"start":1695604118425,"stop":1695604127143,"duration":8718}},{"uid":"679e384c29947bef","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/679e384c29947bef","status":"passed","time":{"start":1695517518710,"stop":1695517526218,"duration":7508}},{"uid":"5866aef5dce0778f","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/5866aef5dce0778f","status":"passed","time":{"start":1695431188466,"stop":1695431197370,"duration":8904}},{"uid":"6eab1eb4bf1b530f","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/6eab1eb4bf1b530f","status":"passed","time":{"start":1695406484745,"stop":1695406493737,"duration":8992}},{"uid":"47e977ebbea7b056","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/47e977ebbea7b056","status":"passed","time":{"start":1695344599125,"stop":1695344606552,"duration":7427}},{"uid":"f5ea1076c3b2fa13","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/f5ea1076c3b2fa13","status":"passed","time":{"start":1695258173588,"stop":1695258181337,"duration":7749}},{"uid":"3952f6564ce866c6","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/3952f6564ce866c6","status":"passed","time":{"start":1695172261128,"stop":1695172269939,"duration":8811}},{"uid":"45bb746c78350540","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/45bb746c78350540","status":"passed","time":{"start":1695085536927,"stop":1695085545116,"duration":8189}},{"uid":"775907407d58f05c","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/775907407d58f05c","status":"passed","time":{"start":1695064124124,"stop":1695064132628,"duration":8504}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"725e2ae981fe4d6b.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}