{"uid":"15de4aa114fdc1c0","name":"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","historyId":"fd3dac514beac2a104acb88cf11d7062","time":{"start":1696468271595,"stop":1696468273949,"duration":2354},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5649ad873933 <unknown>\n#1 0x5649ad54d6f7 <unknown>\n#2 0x5649ad59ab9d <unknown>\n#3 0x5649ad598f3d <unknown>\n#4 0x5649ad596cf8 <unknown>\n#5 0x5649ad595d67 <unknown>\n#6 0x5649ad58aa29 <unknown>\n#7 0x5649ad5b6602 <unknown>\n#8 0x5649ad58a446 <unknown>\n#9 0x5649ad5b67ce <unknown>\n#10 0x5649ad5cf857 <unknown>\n#11 0x5649ad5b63d3 <unknown>\n#12 0x5649ad588e64 <unknown>\n#13 0x5649ad589c4e <unknown>\n#14 0x5649ad839558 <unknown>\n#15 0x5649ad83d4a0 <unknown>\n#16 0x5649ad84797c <unknown>\n#17 0x5649ad83e0b8 <unknown>\n#18 0x5649ad809cdf <unknown>\n#19 0x5649ad862048 <unknown>\n#20 0x5649ad862219 <unknown>\n#21 0x5649ad872ac3 <unknown>\n#22 0x7f05c7c0b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080c7d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7d8250>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7d8bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5649ad862219 \\\\u003Cunknown>\\\\n#21 0x5649ad872ac3 \\\\u003Cunknown>\\\\n#22 0x7f05c7c0b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5649ad873933 <unknown>\nE       #1 0x5649ad54d6f7 <unknown>\nE       #2 0x5649ad59ab9d <unknown>\nE       #3 0x5649ad598f3d <unknown>\nE       #4 0x5649ad596cf8 <unknown>\nE       #5 0x5649ad595d67 <unknown>\nE       #6 0x5649ad58aa29 <unknown>\nE       #7 0x5649ad5b6602 <unknown>\nE       #8 0x5649ad58a446 <unknown>\nE       #9 0x5649ad5b67ce <unknown>\nE       #10 0x5649ad5cf857 <unknown>\nE       #11 0x5649ad5b63d3 <unknown>\nE       #12 0x5649ad588e64 <unknown>\nE       #13 0x5649ad589c4e <unknown>\nE       #14 0x5649ad839558 <unknown>\nE       #15 0x5649ad83d4a0 <unknown>\nE       #16 0x5649ad84797c <unknown>\nE       #17 0x5649ad83e0b8 <unknown>\nE       #18 0x5649ad809cdf <unknown>\nE       #19 0x5649ad862048 <unknown>\nE       #20 0x5649ad862219 <unknown>\nE       #21 0x5649ad872ac3 <unknown>\nE       #22 0x7f05c7c0b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468254421,"stop":1696468255227,"duration":806},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468255227,"stop":1696468255227,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468255227,"stop":1696468271594,"duration":16367},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5649ad873933 <unknown>\n#1 0x5649ad54d6f7 <unknown>\n#2 0x5649ad59ab9d <unknown>\n#3 0x5649ad598f3d <unknown>\n#4 0x5649ad596cf8 <unknown>\n#5 0x5649ad595d67 <unknown>\n#6 0x5649ad58aa29 <unknown>\n#7 0x5649ad5b6602 <unknown>\n#8 0x5649ad58a446 <unknown>\n#9 0x5649ad5b67ce <unknown>\n#10 0x5649ad5cf857 <unknown>\n#11 0x5649ad5b63d3 <unknown>\n#12 0x5649ad588e64 <unknown>\n#13 0x5649ad589c4e <unknown>\n#14 0x5649ad839558 <unknown>\n#15 0x5649ad83d4a0 <unknown>\n#16 0x5649ad84797c <unknown>\n#17 0x5649ad83e0b8 <unknown>\n#18 0x5649ad809cdf <unknown>\n#19 0x5649ad862048 <unknown>\n#20 0x5649ad862219 <unknown>\n#21 0x5649ad872ac3 <unknown>\n#22 0x7f05c7c0b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080c7d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7d8250>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7d8bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5649ad862219 \\\\u003Cunknown>\\\\n#21 0x5649ad872ac3 \\\\u003Cunknown>\\\\n#22 0x7f05c7c0b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5649ad873933 <unknown>\nE       #1 0x5649ad54d6f7 <unknown>\nE       #2 0x5649ad59ab9d <unknown>\nE       #3 0x5649ad598f3d <unknown>\nE       #4 0x5649ad596cf8 <unknown>\nE       #5 0x5649ad595d67 <unknown>\nE       #6 0x5649ad58aa29 <unknown>\nE       #7 0x5649ad5b6602 <unknown>\nE       #8 0x5649ad58a446 <unknown>\nE       #9 0x5649ad5b67ce <unknown>\nE       #10 0x5649ad5cf857 <unknown>\nE       #11 0x5649ad5b63d3 <unknown>\nE       #12 0x5649ad588e64 <unknown>\nE       #13 0x5649ad589c4e <unknown>\nE       #14 0x5649ad839558 <unknown>\nE       #15 0x5649ad83d4a0 <unknown>\nE       #16 0x5649ad84797c <unknown>\nE       #17 0x5649ad83e0b8 <unknown>\nE       #18 0x5649ad809cdf <unknown>\nE       #19 0x5649ad862048 <unknown>\nE       #20 0x5649ad862219 <unknown>\nE       #21 0x5649ad872ac3 <unknown>\nE       #22 0x7f05c7c0b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468271595,"stop":1696468271640,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468271717,"stop":1696468271757,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468272808,"stop":1696468272863,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"61d7fb430cfa7488","name":"Screenshot","source":"61d7fb430cfa7488.png","type":"image/png","size":106118},{"uid":"1171f45b3003aca8","name":"HTML source","source":"1171f45b3003aca8.html","type":"text/html","size":852162}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468274168,"stop":1696468274168,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468274168,"stop":1696468274235,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":49,"unknown":0,"total":70},"items":[{"uid":"14adcc3b74a1532d","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/14adcc3b74a1532d","status":"passed","time":{"start":1696381591133,"stop":1696381598948,"duration":7815}},{"uid":"229cf971020fa520","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/229cf971020fa520","status":"passed","time":{"start":1696295122916,"stop":1696295130710,"duration":7794}},{"uid":"9beaf8579ee77062","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/9beaf8579ee77062","status":"passed","time":{"start":1696283097094,"stop":1696283106140,"duration":9046}},{"uid":"12ed2b40d7f8ef3","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/12ed2b40d7f8ef3","status":"passed","time":{"start":1696258662117,"stop":1696258669700,"duration":7583}},{"uid":"b643f0dd0c2008f4","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/b643f0dd0c2008f4","status":"passed","time":{"start":1696208768927,"stop":1696208775772,"duration":6845}},{"uid":"790e31da63b6588d","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/790e31da63b6588d","status":"passed","time":{"start":1696122766851,"stop":1696122773760,"duration":6909}},{"uid":"ddd5510ce3383de5","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/ddd5510ce3383de5","status":"passed","time":{"start":1696035719211,"stop":1696035725726,"duration":6515}},{"uid":"ea470aaa6765b8a4","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/ea470aaa6765b8a4","status":"passed","time":{"start":1695949441339,"stop":1695949447942,"duration":6603}},{"uid":"f17d63ab14ff2d9a","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/f17d63ab14ff2d9a","status":"passed","time":{"start":1695863344399,"stop":1695863352234,"duration":7835}},{"uid":"e2c97f6de71ce276","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/e2c97f6de71ce276","status":"passed","time":{"start":1695777171072,"stop":1695777178868,"duration":7796}},{"uid":"ccf25e853fc3ccb1","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/ccf25e853fc3ccb1","status":"passed","time":{"start":1695690646268,"stop":1695690653859,"duration":7591}},{"uid":"c54418a6b3147e7","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/c54418a6b3147e7","status":"passed","time":{"start":1695604187362,"stop":1695604195061,"duration":7699}},{"uid":"ff876b28612c84","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/ff876b28612c84","status":"passed","time":{"start":1695517569906,"stop":1695517576400,"duration":6494}},{"uid":"6aa2d05d8311ac3c","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/6aa2d05d8311ac3c","status":"passed","time":{"start":1695431257094,"stop":1695431265069,"duration":7975}},{"uid":"6b4efaba1059e786","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/6b4efaba1059e786","status":"passed","time":{"start":1695406555204,"stop":1695406563365,"duration":8161}},{"uid":"f5a40c97039ca39a","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/f5a40c97039ca39a","status":"passed","time":{"start":1695344656178,"stop":1695344662785,"duration":6607}},{"uid":"a389fb288dd2cdb9","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/a389fb288dd2cdb9","status":"passed","time":{"start":1695258233250,"stop":1695258239763,"duration":6513}},{"uid":"415098e1b5ea1214","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/415098e1b5ea1214","status":"passed","time":{"start":1695172336047,"stop":1695172343665,"duration":7618}},{"uid":"8869ce40651e4bcd","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/8869ce40651e4bcd","status":"passed","time":{"start":1695085602891,"stop":1695085610066,"duration":7175}},{"uid":"951df898df4bfe45","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/951df898df4bfe45","status":"passed","time":{"start":1695064191214,"stop":1695064198697,"duration":7483}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"15de4aa114fdc1c0.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}