{"uid":"5fc84245c6d18169","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"9c158f83f56fa7b7bac987d3d1def5a4","time":{"start":1696468412048,"stop":1696468414425,"duration":2377},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5605e18d4933 <unknown>\n#1 0x5605e15ae6f7 <unknown>\n#2 0x5605e15fbb9d <unknown>\n#3 0x5605e15f9f3d <unknown>\n#4 0x5605e15f7cf8 <unknown>\n#5 0x5605e15f6d67 <unknown>\n#6 0x5605e15eba29 <unknown>\n#7 0x5605e1617602 <unknown>\n#8 0x5605e15eb446 <unknown>\n#9 0x5605e16177ce <unknown>\n#10 0x5605e1630857 <unknown>\n#11 0x5605e16173d3 <unknown>\n#12 0x5605e15e9e64 <unknown>\n#13 0x5605e15eac4e <unknown>\n#14 0x5605e189a558 <unknown>\n#15 0x5605e189e4a0 <unknown>\n#16 0x5605e18a897c <unknown>\n#17 0x5605e189f0b8 <unknown>\n#18 0x5605e186acdf <unknown>\n#19 0x5605e18c3048 <unknown>\n#20 0x5605e18c3219 <unknown>\n#21 0x5605e18d3ac3 <unknown>\n#22 0x7f34f4152044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082f390>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe949650>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe949b50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5605e18c3219 \\\\u003Cunknown>\\\\n#21 0x5605e18d3ac3 \\\\u003Cunknown>\\\\n#22 0x7f34f4152044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5605e18d4933 <unknown>\nE       #1 0x5605e15ae6f7 <unknown>\nE       #2 0x5605e15fbb9d <unknown>\nE       #3 0x5605e15f9f3d <unknown>\nE       #4 0x5605e15f7cf8 <unknown>\nE       #5 0x5605e15f6d67 <unknown>\nE       #6 0x5605e15eba29 <unknown>\nE       #7 0x5605e1617602 <unknown>\nE       #8 0x5605e15eb446 <unknown>\nE       #9 0x5605e16177ce <unknown>\nE       #10 0x5605e1630857 <unknown>\nE       #11 0x5605e16173d3 <unknown>\nE       #12 0x5605e15e9e64 <unknown>\nE       #13 0x5605e15eac4e <unknown>\nE       #14 0x5605e189a558 <unknown>\nE       #15 0x5605e189e4a0 <unknown>\nE       #16 0x5605e18a897c <unknown>\nE       #17 0x5605e189f0b8 <unknown>\nE       #18 0x5605e186acdf <unknown>\nE       #19 0x5605e18c3048 <unknown>\nE       #20 0x5605e18c3219 <unknown>\nE       #21 0x5605e18d3ac3 <unknown>\nE       #22 0x7f34f4152044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468394612,"stop":1696468395423,"duration":811},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468395423,"stop":1696468395423,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468395423,"stop":1696468412048,"duration":16625},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5605e18d4933 <unknown>\n#1 0x5605e15ae6f7 <unknown>\n#2 0x5605e15fbb9d <unknown>\n#3 0x5605e15f9f3d <unknown>\n#4 0x5605e15f7cf8 <unknown>\n#5 0x5605e15f6d67 <unknown>\n#6 0x5605e15eba29 <unknown>\n#7 0x5605e1617602 <unknown>\n#8 0x5605e15eb446 <unknown>\n#9 0x5605e16177ce <unknown>\n#10 0x5605e1630857 <unknown>\n#11 0x5605e16173d3 <unknown>\n#12 0x5605e15e9e64 <unknown>\n#13 0x5605e15eac4e <unknown>\n#14 0x5605e189a558 <unknown>\n#15 0x5605e189e4a0 <unknown>\n#16 0x5605e18a897c <unknown>\n#17 0x5605e189f0b8 <unknown>\n#18 0x5605e186acdf <unknown>\n#19 0x5605e18c3048 <unknown>\n#20 0x5605e18c3219 <unknown>\n#21 0x5605e18d3ac3 <unknown>\n#22 0x7f34f4152044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082f390>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe949650>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe949b50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5605e18c3219 \\\\u003Cunknown>\\\\n#21 0x5605e18d3ac3 \\\\u003Cunknown>\\\\n#22 0x7f34f4152044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5605e18d4933 <unknown>\nE       #1 0x5605e15ae6f7 <unknown>\nE       #2 0x5605e15fbb9d <unknown>\nE       #3 0x5605e15f9f3d <unknown>\nE       #4 0x5605e15f7cf8 <unknown>\nE       #5 0x5605e15f6d67 <unknown>\nE       #6 0x5605e15eba29 <unknown>\nE       #7 0x5605e1617602 <unknown>\nE       #8 0x5605e15eb446 <unknown>\nE       #9 0x5605e16177ce <unknown>\nE       #10 0x5605e1630857 <unknown>\nE       #11 0x5605e16173d3 <unknown>\nE       #12 0x5605e15e9e64 <unknown>\nE       #13 0x5605e15eac4e <unknown>\nE       #14 0x5605e189a558 <unknown>\nE       #15 0x5605e189e4a0 <unknown>\nE       #16 0x5605e18a897c <unknown>\nE       #17 0x5605e189f0b8 <unknown>\nE       #18 0x5605e186acdf <unknown>\nE       #19 0x5605e18c3048 <unknown>\nE       #20 0x5605e18c3219 <unknown>\nE       #21 0x5605e18d3ac3 <unknown>\nE       #22 0x7f34f4152044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468412048,"stop":1696468412097,"duration":49},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468412164,"stop":1696468412211,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468413257,"stop":1696468413313,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"882137e673353b9a","name":"Screenshot","source":"882137e673353b9a.png","type":"image/png","size":129722},{"uid":"e843a23c7a94d3bc","name":"HTML source","source":"e843a23c7a94d3bc.html","type":"text/html","size":888722}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468414652,"stop":1696468414652,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468414653,"stop":1696468414720,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":47,"unknown":0,"total":69},"items":[{"uid":"bed8020edb54d610","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/bed8020edb54d610","status":"passed","time":{"start":1696381745921,"stop":1696381756824,"duration":10903}},{"uid":"11372749a51bd201","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/11372749a51bd201","status":"passed","time":{"start":1696295274186,"stop":1696295285034,"duration":10848}},{"uid":"e7a3ef5ad41b6654","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/e7a3ef5ad41b6654","status":"passed","time":{"start":1696283285780,"stop":1696283297780,"duration":12000}},{"uid":"34adb39c0c02b2c6","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/34adb39c0c02b2c6","status":"passed","time":{"start":1696258888192,"stop":1696258898673,"duration":10481}},{"uid":"3eaa7b993437c9b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/3eaa7b993437c9b6","status":"passed","time":{"start":1696208910649,"stop":1696208920536,"duration":9887}},{"uid":"fda64c78ab46aa72","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/fda64c78ab46aa72","status":"passed","time":{"start":1696122918650,"stop":1696122928525,"duration":9875}},{"uid":"716b25740b295fde","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/716b25740b295fde","status":"passed","time":{"start":1696035856308,"stop":1696035865875,"duration":9567}},{"uid":"a8657c2b74e96d56","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/a8657c2b74e96d56","status":"passed","time":{"start":1695949579439,"stop":1695949588937,"duration":9498}},{"uid":"439415dc573612ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/439415dc573612ea","status":"passed","time":{"start":1695863519320,"stop":1695863530072,"duration":10752}},{"uid":"5e070ef62d403df2","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/5e070ef62d403df2","status":"passed","time":{"start":1695777349669,"stop":1695777360796,"duration":11127}},{"uid":"5e0e8e37673359a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/5e0e8e37673359a1","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x559fa30106b3 <unknown>\n#1 0x559fa2ce61e7 <unknown>\n#2 0x559fa2d3365d <unknown>\n#3 0x559fa2d319fd <unknown>\n#4 0x559fa2d2f7b8 <unknown>\n#5 0x559fa2d2e827 <unknown>\n#6 0x559fa2d234f9 <unknown>\n#7 0x559fa2d4f0c2 <unknown>\n#8 0x559fa2d22f16 <unknown>\n#9 0x559fa2d4f28e <unknown>\n#10 0x559fa2d68322 <unknown>\n#11 0x559fa2d4ee93 <unknown>\n#12 0x559fa2d21934 <unknown>\n#13 0x559fa2d2271e <unknown>\n#14 0x559fa2fd5cb8 <unknown>\n#15 0x559fa2fd9bf0 <unknown>\n#16 0x559fa2fe419c <unknown>\n#17 0x559fa2fda808 <unknown>\n#18 0x559fa2fa727f <unknown>\n#19 0x559fa2ffee88 <unknown>\n#20 0x559fa2fff059 <unknown>\n#21 0x559fa300f843 <unknown>\n#22 0x7f390021b044 <unknown>","time":{"start":1695690792040,"stop":1695690794381,"duration":2341}},{"uid":"97479358be88ba51","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/97479358be88ba51","status":"passed","time":{"start":1695604365587,"stop":1695604376357,"duration":10770}},{"uid":"491a9c79668b0c37","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/491a9c79668b0c37","status":"passed","time":{"start":1695517707301,"stop":1695517716727,"duration":9426}},{"uid":"6427ac58d5e366d4","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/6427ac58d5e366d4","status":"passed","time":{"start":1695431438812,"stop":1695431450053,"duration":11241}},{"uid":"21167fd563493a85","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/21167fd563493a85","status":"passed","time":{"start":1695406736213,"stop":1695406747438,"duration":11225}},{"uid":"16df7e2137f0b5c6","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/16df7e2137f0b5c6","status":"passed","time":{"start":1695344797617,"stop":1695344807057,"duration":9440}},{"uid":"9535231f1a89f93f","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/9535231f1a89f93f","status":"passed","time":{"start":1695258381416,"stop":1695258390883,"duration":9467}},{"uid":"6ea152b81423b160","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/6ea152b81423b160","status":"passed","time":{"start":1695172519336,"stop":1695172530267,"duration":10931}},{"uid":"22966a0ba7240a4d","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/22966a0ba7240a4d","status":"passed","time":{"start":1695085770415,"stop":1695085780638,"duration":10223}},{"uid":"cfa52a9b7d4ef30b","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/cfa52a9b7d4ef30b","status":"passed","time":{"start":1695064358942,"stop":1695064369866,"duration":10924}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"5fc84245c6d18169.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"]}