{"uid":"2580c4d917a276d4","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1696468017737,"stop":1696468020127,"duration":2390},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x562a1ed6c933 <unknown>\n#1 0x562a1ea466f7 <unknown>\n#2 0x562a1ea93b9d <unknown>\n#3 0x562a1ea91f3d <unknown>\n#4 0x562a1ea8fcf8 <unknown>\n#5 0x562a1ea8ed67 <unknown>\n#6 0x562a1ea83a29 <unknown>\n#7 0x562a1eaaf602 <unknown>\n#8 0x562a1ea83446 <unknown>\n#9 0x562a1eaaf7ce <unknown>\n#10 0x562a1eac8857 <unknown>\n#11 0x562a1eaaf3d3 <unknown>\n#12 0x562a1ea81e64 <unknown>\n#13 0x562a1ea82c4e <unknown>\n#14 0x562a1ed32558 <unknown>\n#15 0x562a1ed364a0 <unknown>\n#16 0x562a1ed4097c <unknown>\n#17 0x562a1ed370b8 <unknown>\n#18 0x562a1ed02cdf <unknown>\n#19 0x562a1ed5b048 <unknown>\n#20 0x562a1ed5b219 <unknown>\n#21 0x562a1ed6bac3 <unknown>\n#22 0x7f59ac2d4044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420076a810>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe970fd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fffa85d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562a1ed5b219 \\\\u003Cunknown>\\\\n#21 0x562a1ed6bac3 \\\\u003Cunknown>\\\\n#22 0x7f59ac2d4044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x562a1ed6c933 <unknown>\nE       #1 0x562a1ea466f7 <unknown>\nE       #2 0x562a1ea93b9d <unknown>\nE       #3 0x562a1ea91f3d <unknown>\nE       #4 0x562a1ea8fcf8 <unknown>\nE       #5 0x562a1ea8ed67 <unknown>\nE       #6 0x562a1ea83a29 <unknown>\nE       #7 0x562a1eaaf602 <unknown>\nE       #8 0x562a1ea83446 <unknown>\nE       #9 0x562a1eaaf7ce <unknown>\nE       #10 0x562a1eac8857 <unknown>\nE       #11 0x562a1eaaf3d3 <unknown>\nE       #12 0x562a1ea81e64 <unknown>\nE       #13 0x562a1ea82c4e <unknown>\nE       #14 0x562a1ed32558 <unknown>\nE       #15 0x562a1ed364a0 <unknown>\nE       #16 0x562a1ed4097c <unknown>\nE       #17 0x562a1ed370b8 <unknown>\nE       #18 0x562a1ed02cdf <unknown>\nE       #19 0x562a1ed5b048 <unknown>\nE       #20 0x562a1ed5b219 <unknown>\nE       #21 0x562a1ed6bac3 <unknown>\nE       #22 0x7f59ac2d4044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468005874,"stop":1696468006676,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468006677,"stop":1696468006677,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468006677,"stop":1696468017736,"duration":11059},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x562a1ed6c933 <unknown>\n#1 0x562a1ea466f7 <unknown>\n#2 0x562a1ea93b9d <unknown>\n#3 0x562a1ea91f3d <unknown>\n#4 0x562a1ea8fcf8 <unknown>\n#5 0x562a1ea8ed67 <unknown>\n#6 0x562a1ea83a29 <unknown>\n#7 0x562a1eaaf602 <unknown>\n#8 0x562a1ea83446 <unknown>\n#9 0x562a1eaaf7ce <unknown>\n#10 0x562a1eac8857 <unknown>\n#11 0x562a1eaaf3d3 <unknown>\n#12 0x562a1ea81e64 <unknown>\n#13 0x562a1ea82c4e <unknown>\n#14 0x562a1ed32558 <unknown>\n#15 0x562a1ed364a0 <unknown>\n#16 0x562a1ed4097c <unknown>\n#17 0x562a1ed370b8 <unknown>\n#18 0x562a1ed02cdf <unknown>\n#19 0x562a1ed5b048 <unknown>\n#20 0x562a1ed5b219 <unknown>\n#21 0x562a1ed6bac3 <unknown>\n#22 0x7f59ac2d4044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420076a810>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe970fd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fffa85d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x562a1ed5b219 \\\\u003Cunknown>\\\\n#21 0x562a1ed6bac3 \\\\u003Cunknown>\\\\n#22 0x7f59ac2d4044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x562a1ed6c933 <unknown>\nE       #1 0x562a1ea466f7 <unknown>\nE       #2 0x562a1ea93b9d <unknown>\nE       #3 0x562a1ea91f3d <unknown>\nE       #4 0x562a1ea8fcf8 <unknown>\nE       #5 0x562a1ea8ed67 <unknown>\nE       #6 0x562a1ea83a29 <unknown>\nE       #7 0x562a1eaaf602 <unknown>\nE       #8 0x562a1ea83446 <unknown>\nE       #9 0x562a1eaaf7ce <unknown>\nE       #10 0x562a1eac8857 <unknown>\nE       #11 0x562a1eaaf3d3 <unknown>\nE       #12 0x562a1ea81e64 <unknown>\nE       #13 0x562a1ea82c4e <unknown>\nE       #14 0x562a1ed32558 <unknown>\nE       #15 0x562a1ed364a0 <unknown>\nE       #16 0x562a1ed4097c <unknown>\nE       #17 0x562a1ed370b8 <unknown>\nE       #18 0x562a1ed02cdf <unknown>\nE       #19 0x562a1ed5b048 <unknown>\nE       #20 0x562a1ed5b219 <unknown>\nE       #21 0x562a1ed6bac3 <unknown>\nE       #22 0x7f59ac2d4044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468017737,"stop":1696468017785,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468017871,"stop":1696468017921,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468018978,"stop":1696468019036,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"b82533aa14340508","name":"Screenshot","source":"b82533aa14340508.png","type":"image/png","size":143373},{"uid":"a6eb7703f34fbdcc","name":"HTML source","source":"a6eb7703f34fbdcc.html","type":"text/html","size":891657}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468020361,"stop":1696468020361,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468020362,"stop":1696468020426,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":82,"unknown":0,"total":84},"items":[{"uid":"bc3a433cbc2fde46","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/bc3a433cbc2fde46","status":"passed","time":{"start":1696381334087,"stop":1696381342691,"duration":8604}},{"uid":"a73db13f0338c472","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/a73db13f0338c472","status":"passed","time":{"start":1696294879419,"stop":1696294887823,"duration":8404}},{"uid":"82e71a879d2f3756","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/82e71a879d2f3756","status":"passed","time":{"start":1696282771699,"stop":1696282781529,"duration":9830}},{"uid":"fc1d84bcf64ef41e","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/fc1d84bcf64ef41e","status":"passed","time":{"start":1696258387012,"stop":1696258395170,"duration":8158}},{"uid":"b955aaa22c59cd1","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/b955aaa22c59cd1","status":"passed","time":{"start":1696208526710,"stop":1696208534276,"duration":7566}},{"uid":"c08b76d4646c51e3","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/c08b76d4646c51e3","status":"passed","time":{"start":1696122510397,"stop":1696122518101,"duration":7704}},{"uid":"489fc3ce6f692cab","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/489fc3ce6f692cab","status":"passed","time":{"start":1696035488889,"stop":1696035496095,"duration":7206}},{"uid":"92e8ad741657abf3","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/92e8ad741657abf3","status":"passed","time":{"start":1695949216227,"stop":1695949223205,"duration":6978}},{"uid":"3b8c64de88cd87f2","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/3b8c64de88cd87f2","status":"passed","time":{"start":1695863025362,"stop":1695863033901,"duration":8539}},{"uid":"8c90818006c1e76d","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/8c90818006c1e76d","status":"passed","time":{"start":1695776845074,"stop":1695776853646,"duration":8572}},{"uid":"7206444a720428b2","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/7206444a720428b2","status":"passed","time":{"start":1695690315089,"stop":1695690323081,"duration":7992}},{"uid":"c58a66d37de94881","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/c58a66d37de94881","status":"passed","time":{"start":1695603880768,"stop":1695603889192,"duration":8424}},{"uid":"c2739bf9cc85a9d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/c2739bf9cc85a9d2","status":"passed","time":{"start":1695517342206,"stop":1695517349327,"duration":7121}},{"uid":"699ef631e60f3372","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/699ef631e60f3372","status":"passed","time":{"start":1695430925115,"stop":1695430934040,"duration":8925}},{"uid":"dff1f1536fdcd2aa","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/dff1f1536fdcd2aa","status":"passed","time":{"start":1695406223951,"stop":1695406233107,"duration":9156}},{"uid":"b8bba1d9ad68659a","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/b8bba1d9ad68659a","status":"passed","time":{"start":1695344412421,"stop":1695344420169,"duration":7748}},{"uid":"33d1824f2f836d95","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/33d1824f2f836d95","status":"passed","time":{"start":1695257987254,"stop":1695257994438,"duration":7184}},{"uid":"5a40bdf55f08eb4c","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/5a40bdf55f08eb4c","status":"passed","time":{"start":1695172012285,"stop":1695172021012,"duration":8727}},{"uid":"ee967a3b0dd39a65","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/ee967a3b0dd39a65","status":"passed","time":{"start":1695085327279,"stop":1695085334851,"duration":7572}},{"uid":"b0c05fcbc8e122ba","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/b0c05fcbc8e122ba","status":"passed","time":{"start":1695063888172,"stop":1695063897099,"duration":8927}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"2580c4d917a276d4.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}