{"uid":"786f411fec2e6d6d","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"efd25b243308c430f9522a855290012b","time":{"start":1696467883825,"stop":1696467886154,"duration":2329},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563b4d627933 <unknown>\n#1 0x563b4d3016f7 <unknown>\n#2 0x563b4d34eb9d <unknown>\n#3 0x563b4d34cf3d <unknown>\n#4 0x563b4d34acf8 <unknown>\n#5 0x563b4d349d67 <unknown>\n#6 0x563b4d33ea29 <unknown>\n#7 0x563b4d36a602 <unknown>\n#8 0x563b4d33e446 <unknown>\n#9 0x563b4d36a7ce <unknown>\n#10 0x563b4d383857 <unknown>\n#11 0x563b4d36a3d3 <unknown>\n#12 0x563b4d33ce64 <unknown>\n#13 0x563b4d33dc4e <unknown>\n#14 0x563b4d5ed558 <unknown>\n#15 0x563b4d5f14a0 <unknown>\n#16 0x563b4d5fb97c <unknown>\n#17 0x563b4d5f20b8 <unknown>\n#18 0x563b4d5bdcdf <unknown>\n#19 0x563b4d616048 <unknown>\n#20 0x563b4d616219 <unknown>\n#21 0x563b4d626ac3 <unknown>\n#22 0x7f6d87068044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200807c90>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fff928d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7d1110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563b4d616219 \\\\u003Cunknown>\\\\n#21 0x563b4d626ac3 \\\\u003Cunknown>\\\\n#22 0x7f6d87068044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563b4d627933 <unknown>\nE       #1 0x563b4d3016f7 <unknown>\nE       #2 0x563b4d34eb9d <unknown>\nE       #3 0x563b4d34cf3d <unknown>\nE       #4 0x563b4d34acf8 <unknown>\nE       #5 0x563b4d349d67 <unknown>\nE       #6 0x563b4d33ea29 <unknown>\nE       #7 0x563b4d36a602 <unknown>\nE       #8 0x563b4d33e446 <unknown>\nE       #9 0x563b4d36a7ce <unknown>\nE       #10 0x563b4d383857 <unknown>\nE       #11 0x563b4d36a3d3 <unknown>\nE       #12 0x563b4d33ce64 <unknown>\nE       #13 0x563b4d33dc4e <unknown>\nE       #14 0x563b4d5ed558 <unknown>\nE       #15 0x563b4d5f14a0 <unknown>\nE       #16 0x563b4d5fb97c <unknown>\nE       #17 0x563b4d5f20b8 <unknown>\nE       #18 0x563b4d5bdcdf <unknown>\nE       #19 0x563b4d616048 <unknown>\nE       #20 0x563b4d616219 <unknown>\nE       #21 0x563b4d626ac3 <unknown>\nE       #22 0x7f6d87068044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696467872850,"stop":1696467873662,"duration":812},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467873662,"stop":1696467873662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696467873663,"stop":1696467883824,"duration":10161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563b4d627933 <unknown>\n#1 0x563b4d3016f7 <unknown>\n#2 0x563b4d34eb9d <unknown>\n#3 0x563b4d34cf3d <unknown>\n#4 0x563b4d34acf8 <unknown>\n#5 0x563b4d349d67 <unknown>\n#6 0x563b4d33ea29 <unknown>\n#7 0x563b4d36a602 <unknown>\n#8 0x563b4d33e446 <unknown>\n#9 0x563b4d36a7ce <unknown>\n#10 0x563b4d383857 <unknown>\n#11 0x563b4d36a3d3 <unknown>\n#12 0x563b4d33ce64 <unknown>\n#13 0x563b4d33dc4e <unknown>\n#14 0x563b4d5ed558 <unknown>\n#15 0x563b4d5f14a0 <unknown>\n#16 0x563b4d5fb97c <unknown>\n#17 0x563b4d5f20b8 <unknown>\n#18 0x563b4d5bdcdf <unknown>\n#19 0x563b4d616048 <unknown>\n#20 0x563b4d616219 <unknown>\n#21 0x563b4d626ac3 <unknown>\n#22 0x7f6d87068044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200807c90>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fff928d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe7d1110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563b4d616219 \\\\u003Cunknown>\\\\n#21 0x563b4d626ac3 \\\\u003Cunknown>\\\\n#22 0x7f6d87068044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563b4d627933 <unknown>\nE       #1 0x563b4d3016f7 <unknown>\nE       #2 0x563b4d34eb9d <unknown>\nE       #3 0x563b4d34cf3d <unknown>\nE       #4 0x563b4d34acf8 <unknown>\nE       #5 0x563b4d349d67 <unknown>\nE       #6 0x563b4d33ea29 <unknown>\nE       #7 0x563b4d36a602 <unknown>\nE       #8 0x563b4d33e446 <unknown>\nE       #9 0x563b4d36a7ce <unknown>\nE       #10 0x563b4d383857 <unknown>\nE       #11 0x563b4d36a3d3 <unknown>\nE       #12 0x563b4d33ce64 <unknown>\nE       #13 0x563b4d33dc4e <unknown>\nE       #14 0x563b4d5ed558 <unknown>\nE       #15 0x563b4d5f14a0 <unknown>\nE       #16 0x563b4d5fb97c <unknown>\nE       #17 0x563b4d5f20b8 <unknown>\nE       #18 0x563b4d5bdcdf <unknown>\nE       #19 0x563b4d616048 <unknown>\nE       #20 0x563b4d616219 <unknown>\nE       #21 0x563b4d626ac3 <unknown>\nE       #22 0x7f6d87068044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696467883825,"stop":1696467883870,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696467883945,"stop":1696467883985,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696467885034,"stop":1696467885104,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"28debba1c315fad7","name":"Screenshot","source":"28debba1c315fad7.png","type":"image/png","size":63940},{"uid":"344db69b9220fecd","name":"HTML source","source":"344db69b9220fecd.html","type":"text/html","size":900318}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696467886392,"stop":1696467886392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696467886393,"stop":1696467886463,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":34,"unknown":0,"total":36},"items":[{"uid":"aefccb0f24c8a52d","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/aefccb0f24c8a52d","status":"passed","time":{"start":1696381191031,"stop":1696381199787,"duration":8756}},{"uid":"7a89b59804ab2626","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/7a89b59804ab2626","status":"passed","time":{"start":1696294746393,"stop":1696294754860,"duration":8467}},{"uid":"8a6c4adb4ff82315","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/8a6c4adb4ff82315","status":"passed","time":{"start":1696282580870,"stop":1696282591029,"duration":10159}},{"uid":"f7b1fde237a7e9d5","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/f7b1fde237a7e9d5","status":"passed","time":{"start":1696258237398,"stop":1696258245471,"duration":8073}},{"uid":"7bd2c7c888fbebab","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/7bd2c7c888fbebab","status":"passed","time":{"start":1696208387328,"stop":1696208395055,"duration":7727}},{"uid":"de7a5ca21955a8f8","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/de7a5ca21955a8f8","status":"passed","time":{"start":1696122370156,"stop":1696122377830,"duration":7674}},{"uid":"bf0a13c0f179dc31","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/bf0a13c0f179dc31","status":"passed","time":{"start":1696035359432,"stop":1696035366809,"duration":7377}},{"uid":"6fd803d52ce19840","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/6fd803d52ce19840","status":"passed","time":{"start":1695949088587,"stop":1695949096037,"duration":7450}},{"uid":"ac7f47149d3f554c","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/ac7f47149d3f554c","status":"passed","time":{"start":1695862857101,"stop":1695862866030,"duration":8929}},{"uid":"dd254d8d5f292ecf","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/dd254d8d5f292ecf","status":"passed","time":{"start":1695776675722,"stop":1695776684326,"duration":8604}},{"uid":"c8fd577608cc5443","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/c8fd577608cc5443","status":"passed","time":{"start":1695690137694,"stop":1695690146407,"duration":8713}},{"uid":"2c579486fb8ae1dd","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/2c579486fb8ae1dd","status":"passed","time":{"start":1695603712164,"stop":1695603720579,"duration":8415}},{"uid":"3613ee8c40f6c674","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/3613ee8c40f6c674","status":"passed","time":{"start":1695517215237,"stop":1695517222564,"duration":7327}},{"uid":"bbea8b26684ed405","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/bbea8b26684ed405","status":"passed","time":{"start":1695430738282,"stop":1695430747159,"duration":8877}},{"uid":"e054942a9a3a88a2","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/e054942a9a3a88a2","status":"passed","time":{"start":1695406049047,"stop":1695406058211,"duration":9164}},{"uid":"b17579b2e9dfd39b","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/b17579b2e9dfd39b","status":"passed","time":{"start":1695344271282,"stop":1695344278397,"duration":7115}},{"uid":"e31ef003a1aa62f7","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/e31ef003a1aa62f7","status":"passed","time":{"start":1695257850910,"stop":1695257858358,"duration":7448}},{"uid":"b1c43d6fe2586de6","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/b1c43d6fe2586de6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695171817984,"stop":1695171841974,"duration":23990}},{"uid":"872cb63e4b28e7cc","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/872cb63e4b28e7cc","status":"passed","time":{"start":1695085175735,"stop":1695085183595,"duration":7860}},{"uid":"77f984df1fd79d23","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/77f984df1fd79d23","status":"passed","time":{"start":1695063691194,"stop":1695063699898,"duration":8704}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"786f411fec2e6d6d.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}