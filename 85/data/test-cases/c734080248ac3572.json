{"uid":"c734080248ac3572","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"f06b2cbff298092fba61eca6271d3112","time":{"start":1696468039608,"stop":1696468041974,"duration":2366},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563da1ed7933 <unknown>\n#1 0x563da1bb16f7 <unknown>\n#2 0x563da1bfeb9d <unknown>\n#3 0x563da1bfcf3d <unknown>\n#4 0x563da1bfacf8 <unknown>\n#5 0x563da1bf9d67 <unknown>\n#6 0x563da1beea29 <unknown>\n#7 0x563da1c1a602 <unknown>\n#8 0x563da1bee446 <unknown>\n#9 0x563da1c1a7ce <unknown>\n#10 0x563da1c33857 <unknown>\n#11 0x563da1c1a3d3 <unknown>\n#12 0x563da1bece64 <unknown>\n#13 0x563da1bedc4e <unknown>\n#14 0x563da1e9d558 <unknown>\n#15 0x563da1ea14a0 <unknown>\n#16 0x563da1eab97c <unknown>\n#17 0x563da1ea20b8 <unknown>\n#18 0x563da1e6dcdf <unknown>\n#19 0x563da1ec6048 <unknown>\n#20 0x563da1ec6219 <unknown>\n#21 0x563da1ed6ac3 <unknown>\n#22 0x7f55f56b5044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420076b390>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ff9682d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41ff96b350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563da1ec6219 \\\\u003Cunknown>\\\\n#21 0x563da1ed6ac3 \\\\u003Cunknown>\\\\n#22 0x7f55f56b5044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563da1ed7933 <unknown>\nE       #1 0x563da1bb16f7 <unknown>\nE       #2 0x563da1bfeb9d <unknown>\nE       #3 0x563da1bfcf3d <unknown>\nE       #4 0x563da1bfacf8 <unknown>\nE       #5 0x563da1bf9d67 <unknown>\nE       #6 0x563da1beea29 <unknown>\nE       #7 0x563da1c1a602 <unknown>\nE       #8 0x563da1bee446 <unknown>\nE       #9 0x563da1c1a7ce <unknown>\nE       #10 0x563da1c33857 <unknown>\nE       #11 0x563da1c1a3d3 <unknown>\nE       #12 0x563da1bece64 <unknown>\nE       #13 0x563da1bedc4e <unknown>\nE       #14 0x563da1e9d558 <unknown>\nE       #15 0x563da1ea14a0 <unknown>\nE       #16 0x563da1eab97c <unknown>\nE       #17 0x563da1ea20b8 <unknown>\nE       #18 0x563da1e6dcdf <unknown>\nE       #19 0x563da1ec6048 <unknown>\nE       #20 0x563da1ec6219 <unknown>\nE       #21 0x563da1ed6ac3 <unknown>\nE       #22 0x7f55f56b5044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468020427,"stop":1696468021241,"duration":814},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468021241,"stop":1696468021241,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468021241,"stop":1696468039607,"duration":18366},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563da1ed7933 <unknown>\n#1 0x563da1bb16f7 <unknown>\n#2 0x563da1bfeb9d <unknown>\n#3 0x563da1bfcf3d <unknown>\n#4 0x563da1bfacf8 <unknown>\n#5 0x563da1bf9d67 <unknown>\n#6 0x563da1beea29 <unknown>\n#7 0x563da1c1a602 <unknown>\n#8 0x563da1bee446 <unknown>\n#9 0x563da1c1a7ce <unknown>\n#10 0x563da1c33857 <unknown>\n#11 0x563da1c1a3d3 <unknown>\n#12 0x563da1bece64 <unknown>\n#13 0x563da1bedc4e <unknown>\n#14 0x563da1e9d558 <unknown>\n#15 0x563da1ea14a0 <unknown>\n#16 0x563da1eab97c <unknown>\n#17 0x563da1ea20b8 <unknown>\n#18 0x563da1e6dcdf <unknown>\n#19 0x563da1ec6048 <unknown>\n#20 0x563da1ec6219 <unknown>\n#21 0x563da1ed6ac3 <unknown>\n#22 0x7f55f56b5044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420076b390>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ff9682d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41ff96b350>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563da1ec6219 \\\\u003Cunknown>\\\\n#21 0x563da1ed6ac3 \\\\u003Cunknown>\\\\n#22 0x7f55f56b5044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563da1ed7933 <unknown>\nE       #1 0x563da1bb16f7 <unknown>\nE       #2 0x563da1bfeb9d <unknown>\nE       #3 0x563da1bfcf3d <unknown>\nE       #4 0x563da1bfacf8 <unknown>\nE       #5 0x563da1bf9d67 <unknown>\nE       #6 0x563da1beea29 <unknown>\nE       #7 0x563da1c1a602 <unknown>\nE       #8 0x563da1bee446 <unknown>\nE       #9 0x563da1c1a7ce <unknown>\nE       #10 0x563da1c33857 <unknown>\nE       #11 0x563da1c1a3d3 <unknown>\nE       #12 0x563da1bece64 <unknown>\nE       #13 0x563da1bedc4e <unknown>\nE       #14 0x563da1e9d558 <unknown>\nE       #15 0x563da1ea14a0 <unknown>\nE       #16 0x563da1eab97c <unknown>\nE       #17 0x563da1ea20b8 <unknown>\nE       #18 0x563da1e6dcdf <unknown>\nE       #19 0x563da1ec6048 <unknown>\nE       #20 0x563da1ec6219 <unknown>\nE       #21 0x563da1ed6ac3 <unknown>\nE       #22 0x7f55f56b5044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468039608,"stop":1696468039653,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468039714,"stop":1696468039757,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468040807,"stop":1696468040861,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"9bffe4450bb10969","name":"Screenshot","source":"9bffe4450bb10969.png","type":"image/png","size":129722},{"uid":"965ee601cbdb6e61","name":"HTML source","source":"965ee601cbdb6e61.html","type":"text/html","size":888724}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696468042199,"stop":1696468042267,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696468042199,"stop":1696468042199,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":8,"skipped":0,"passed":76,"unknown":0,"total":84},"items":[{"uid":"fc47cc840f3f0df7","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/fc47cc840f3f0df7","status":"passed","time":{"start":1696381354511,"stop":1696381362867,"duration":8356}},{"uid":"357d00bd17abdde7","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/357d00bd17abdde7","status":"passed","time":{"start":1696294898520,"stop":1696294906857,"duration":8337}},{"uid":"1c4ddc832c3e27c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/1c4ddc832c3e27c7","status":"passed","time":{"start":1696282797317,"stop":1696282807825,"duration":10508}},{"uid":"23c2508ba00f4b22","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/23c2508ba00f4b22","status":"passed","time":{"start":1696258408734,"stop":1696258416792,"duration":8058}},{"uid":"f747b407f779a905","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/f747b407f779a905","status":"passed","time":{"start":1696208545139,"stop":1696208552784,"duration":7645}},{"uid":"21c3f4532e95171b","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/21c3f4532e95171b","status":"passed","time":{"start":1696122530333,"stop":1696122537576,"duration":7243}},{"uid":"c31a2146fb822273","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/c31a2146fb822273","status":"passed","time":{"start":1696035506667,"stop":1696035513677,"duration":7010}},{"uid":"c70a8d705f2f8f8a","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/c70a8d705f2f8f8a","status":"passed","time":{"start":1695949233868,"stop":1695949240830,"duration":6962}},{"uid":"43551c2fd8d0d66f","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/43551c2fd8d0d66f","status":"passed","time":{"start":1695863049554,"stop":1695863058154,"duration":8600}},{"uid":"a8be968b776ab612","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/a8be968b776ab612","status":"passed","time":{"start":1695776869115,"stop":1695776877554,"duration":8439}},{"uid":"b9e33881a3cdc238","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/b9e33881a3cdc238","status":"passed","time":{"start":1695690341204,"stop":1695690348777,"duration":7573}},{"uid":"aa3c6fc956047a5a","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/aa3c6fc956047a5a","status":"passed","time":{"start":1695603905667,"stop":1695603913931,"duration":8264}},{"uid":"459aed0c3b59c462","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/459aed0c3b59c462","status":"passed","time":{"start":1695517360147,"stop":1695517367147,"duration":7000}},{"uid":"6bb58a2b3126f704","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/6bb58a2b3126f704","status":"passed","time":{"start":1695430949826,"stop":1695430958586,"duration":8760}},{"uid":"9d31dd5d4aab4eeb","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/9d31dd5d4aab4eeb","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695406248753,"stop":1695406272567,"duration":23814}},{"uid":"71c8b800a5924229","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/71c8b800a5924229","status":"passed","time":{"start":1695344431816,"stop":1695344438802,"duration":6986}},{"uid":"910d96d9418282db","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/910d96d9418282db","status":"passed","time":{"start":1695258006570,"stop":1695258013619,"duration":7049}},{"uid":"ab9d38254637002","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/ab9d38254637002","status":"passed","time":{"start":1695172038048,"stop":1695172046462,"duration":8414}},{"uid":"29f7ca42d1911d4a","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/29f7ca42d1911d4a","status":"passed","time":{"start":1695085348969,"stop":1695085356499,"duration":7530}},{"uid":"4e37ecea8570cd1c","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/4e37ecea8570cd1c","status":"passed","time":{"start":1695063912546,"stop":1695063920950,"duration":8404}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"c734080248ac3572.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"]}