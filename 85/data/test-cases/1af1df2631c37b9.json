{"uid":"1af1df2631c37b9","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke","historyId":"60ac608ef0b195b1f9aff92ab9d21fa8","time":{"start":1696468096444,"stop":1696468098818,"duration":2374},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5637ff50f933 <unknown>\n#1 0x5637ff1e96f7 <unknown>\n#2 0x5637ff236b9d <unknown>\n#3 0x5637ff234f3d <unknown>\n#4 0x5637ff232cf8 <unknown>\n#5 0x5637ff231d67 <unknown>\n#6 0x5637ff226a29 <unknown>\n#7 0x5637ff252602 <unknown>\n#8 0x5637ff226446 <unknown>\n#9 0x5637ff2527ce <unknown>\n#10 0x5637ff26b857 <unknown>\n#11 0x5637ff2523d3 <unknown>\n#12 0x5637ff224e64 <unknown>\n#13 0x5637ff225c4e <unknown>\n#14 0x5637ff4d5558 <unknown>\n#15 0x5637ff4d94a0 <unknown>\n#16 0x5637ff4e397c <unknown>\n#17 0x5637ff4da0b8 <unknown>\n#18 0x5637ff4a5cdf <unknown>\n#19 0x5637ff4fe048 <unknown>\n#20 0x5637ff4fe219 <unknown>\n#21 0x5637ff50eac3 <unknown>\n#22 0x7feb72f0b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200768650>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe842810>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe95a250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5637ff4fe219 \\\\u003Cunknown>\\\\n#21 0x5637ff50eac3 \\\\u003Cunknown>\\\\n#22 0x7feb72f0b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5637ff50f933 <unknown>\nE       #1 0x5637ff1e96f7 <unknown>\nE       #2 0x5637ff236b9d <unknown>\nE       #3 0x5637ff234f3d <unknown>\nE       #4 0x5637ff232cf8 <unknown>\nE       #5 0x5637ff231d67 <unknown>\nE       #6 0x5637ff226a29 <unknown>\nE       #7 0x5637ff252602 <unknown>\nE       #8 0x5637ff226446 <unknown>\nE       #9 0x5637ff2527ce <unknown>\nE       #10 0x5637ff26b857 <unknown>\nE       #11 0x5637ff2523d3 <unknown>\nE       #12 0x5637ff224e64 <unknown>\nE       #13 0x5637ff225c4e <unknown>\nE       #14 0x5637ff4d5558 <unknown>\nE       #15 0x5637ff4d94a0 <unknown>\nE       #16 0x5637ff4e397c <unknown>\nE       #17 0x5637ff4da0b8 <unknown>\nE       #18 0x5637ff4a5cdf <unknown>\nE       #19 0x5637ff4fe048 <unknown>\nE       #20 0x5637ff4fe219 <unknown>\nE       #21 0x5637ff50eac3 <unknown>\nE       #22 0x7feb72f0b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468080431,"stop":1696468081236,"duration":805},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468081236,"stop":1696468081236,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468081236,"stop":1696468096444,"duration":15208},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5637ff50f933 <unknown>\n#1 0x5637ff1e96f7 <unknown>\n#2 0x5637ff236b9d <unknown>\n#3 0x5637ff234f3d <unknown>\n#4 0x5637ff232cf8 <unknown>\n#5 0x5637ff231d67 <unknown>\n#6 0x5637ff226a29 <unknown>\n#7 0x5637ff252602 <unknown>\n#8 0x5637ff226446 <unknown>\n#9 0x5637ff2527ce <unknown>\n#10 0x5637ff26b857 <unknown>\n#11 0x5637ff2523d3 <unknown>\n#12 0x5637ff224e64 <unknown>\n#13 0x5637ff225c4e <unknown>\n#14 0x5637ff4d5558 <unknown>\n#15 0x5637ff4d94a0 <unknown>\n#16 0x5637ff4e397c <unknown>\n#17 0x5637ff4da0b8 <unknown>\n#18 0x5637ff4a5cdf <unknown>\n#19 0x5637ff4fe048 <unknown>\n#20 0x5637ff4fe219 <unknown>\n#21 0x5637ff50eac3 <unknown>\n#22 0x7feb72f0b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200768650>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe842810>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe95a250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5637ff4fe219 \\\\u003Cunknown>\\\\n#21 0x5637ff50eac3 \\\\u003Cunknown>\\\\n#22 0x7feb72f0b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5637ff50f933 <unknown>\nE       #1 0x5637ff1e96f7 <unknown>\nE       #2 0x5637ff236b9d <unknown>\nE       #3 0x5637ff234f3d <unknown>\nE       #4 0x5637ff232cf8 <unknown>\nE       #5 0x5637ff231d67 <unknown>\nE       #6 0x5637ff226a29 <unknown>\nE       #7 0x5637ff252602 <unknown>\nE       #8 0x5637ff226446 <unknown>\nE       #9 0x5637ff2527ce <unknown>\nE       #10 0x5637ff26b857 <unknown>\nE       #11 0x5637ff2523d3 <unknown>\nE       #12 0x5637ff224e64 <unknown>\nE       #13 0x5637ff225c4e <unknown>\nE       #14 0x5637ff4d5558 <unknown>\nE       #15 0x5637ff4d94a0 <unknown>\nE       #16 0x5637ff4e397c <unknown>\nE       #17 0x5637ff4da0b8 <unknown>\nE       #18 0x5637ff4a5cdf <unknown>\nE       #19 0x5637ff4fe048 <unknown>\nE       #20 0x5637ff4fe219 <unknown>\nE       #21 0x5637ff50eac3 <unknown>\nE       #22 0x7feb72f0b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468096444,"stop":1696468096488,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468096573,"stop":1696468096614,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468097665,"stop":1696468097719,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"fe2dbf7d1776a8b2","name":"Screenshot","source":"fe2dbf7d1776a8b2.png","type":"image/png","size":159381},{"uid":"868c8b4a4bc5e1df","name":"HTML source","source":"868c8b4a4bc5e1df.html","type":"text/html","size":877443}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468099057,"stop":1696468099057,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468099058,"stop":1696468099130,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/elektroinstrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":79,"unknown":0,"total":80},"items":[{"uid":"c5d53d6cd1b857b2","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/c5d53d6cd1b857b2","status":"passed","time":{"start":1696381412798,"stop":1696381421073,"duration":8275}},{"uid":"e1bebeaa5a7cc0a6","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/e1bebeaa5a7cc0a6","status":"passed","time":{"start":1696294955318,"stop":1696294963467,"duration":8149}},{"uid":"68d8fd1fd1c61510","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/68d8fd1fd1c61510","status":"passed","time":{"start":1696282873915,"stop":1696282883599,"duration":9684}},{"uid":"e480009e6ca0d3df","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/e480009e6ca0d3df","status":"passed","time":{"start":1696258474100,"stop":1696258482684,"duration":8584}},{"uid":"a994a59170b8408","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/a994a59170b8408","status":"passed","time":{"start":1696208606257,"stop":1696208614407,"duration":8150}},{"uid":"89e647e26dc4ceba","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/89e647e26dc4ceba","status":"passed","time":{"start":1696122589117,"stop":1696122596984,"duration":7867}},{"uid":"b218afd20d1de18f","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/b218afd20d1de18f","status":"passed","time":{"start":1696035563014,"stop":1696035570573,"duration":7559}},{"uid":"f083107cc269bdfe","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/f083107cc269bdfe","status":"passed","time":{"start":1695949286251,"stop":1695949293375,"duration":7124}},{"uid":"7c6c456c8d45a68a","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/7c6c456c8d45a68a","status":"passed","time":{"start":1695863120690,"stop":1695863129912,"duration":9222}},{"uid":"ba351ebeb8520082","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/ba351ebeb8520082","status":"passed","time":{"start":1695776941319,"stop":1695776950766,"duration":9447}},{"uid":"f2400e4816b4a676","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/f2400e4816b4a676","status":"passed","time":{"start":1695690416910,"stop":1695690425444,"duration":8534}},{"uid":"9b672483b0430755","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/9b672483b0430755","status":"passed","time":{"start":1695603977481,"stop":1695603986267,"duration":8786}},{"uid":"f4cf00ceb67f6d5e","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/f4cf00ceb67f6d5e","status":"passed","time":{"start":1695517412893,"stop":1695517419946,"duration":7053}},{"uid":"95d8d20752a135a2","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/95d8d20752a135a2","status":"passed","time":{"start":1695431040075,"stop":1695431049388,"duration":9313}},{"uid":"23da30f985943eb9","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/23da30f985943eb9","status":"passed","time":{"start":1695406338551,"stop":1695406347976,"duration":9425}},{"uid":"1dfa238948722ed9","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/1dfa238948722ed9","status":"passed","time":{"start":1695344487548,"stop":1695344494612,"duration":7064}},{"uid":"d606a033eb7d4f97","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/d606a033eb7d4f97","status":"passed","time":{"start":1695258061032,"stop":1695258068499,"duration":7467}},{"uid":"7735259c5f52e7e9","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/7735259c5f52e7e9","status":"passed","time":{"start":1695172111258,"stop":1695172120249,"duration":8991}},{"uid":"97dfe56d3a8ba49b","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/97dfe56d3a8ba49b","status":"passed","time":{"start":1695085410341,"stop":1695085418439,"duration":8098}},{"uid":"49f6d42c7bdffe7b","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/49f6d42c7bdffe7b","status":"passed","time":{"start":1695063984452,"stop":1695063993198,"duration":8746}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"1af1df2631c37b9.json","parameterValues":["'https://stroyrem-nn.ru/catalog/elektroinstrument'"]}