{"uid":"cf7f1f1a58789030","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"af8fbd6f50a28c543b5170548fcea335","time":{"start":1696468193271,"stop":1696468195601,"duration":2330},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x557ad27fe933 <unknown>\n#1 0x557ad24d86f7 <unknown>\n#2 0x557ad2525b9d <unknown>\n#3 0x557ad2523f3d <unknown>\n#4 0x557ad2521cf8 <unknown>\n#5 0x557ad2520d67 <unknown>\n#6 0x557ad2515a29 <unknown>\n#7 0x557ad2541602 <unknown>\n#8 0x557ad2515446 <unknown>\n#9 0x557ad25417ce <unknown>\n#10 0x557ad255a857 <unknown>\n#11 0x557ad25413d3 <unknown>\n#12 0x557ad2513e64 <unknown>\n#13 0x557ad2514c4e <unknown>\n#14 0x557ad27c4558 <unknown>\n#15 0x557ad27c84a0 <unknown>\n#16 0x557ad27d297c <unknown>\n#17 0x557ad27c90b8 <unknown>\n#18 0x557ad2794cdf <unknown>\n#19 0x557ad27ed048 <unknown>\n#20 0x557ad27ed219 <unknown>\n#21 0x557ad27fdac3 <unknown>\n#22 0x7f595445e044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200768610>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe822350>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe822750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557ad27ed219 \\\\u003Cunknown>\\\\n#21 0x557ad27fdac3 \\\\u003Cunknown>\\\\n#22 0x7f595445e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x557ad27fe933 <unknown>\nE       #1 0x557ad24d86f7 <unknown>\nE       #2 0x557ad2525b9d <unknown>\nE       #3 0x557ad2523f3d <unknown>\nE       #4 0x557ad2521cf8 <unknown>\nE       #5 0x557ad2520d67 <unknown>\nE       #6 0x557ad2515a29 <unknown>\nE       #7 0x557ad2541602 <unknown>\nE       #8 0x557ad2515446 <unknown>\nE       #9 0x557ad25417ce <unknown>\nE       #10 0x557ad255a857 <unknown>\nE       #11 0x557ad25413d3 <unknown>\nE       #12 0x557ad2513e64 <unknown>\nE       #13 0x557ad2514c4e <unknown>\nE       #14 0x557ad27c4558 <unknown>\nE       #15 0x557ad27c84a0 <unknown>\nE       #16 0x557ad27d297c <unknown>\nE       #17 0x557ad27c90b8 <unknown>\nE       #18 0x557ad2794cdf <unknown>\nE       #19 0x557ad27ed048 <unknown>\nE       #20 0x557ad27ed219 <unknown>\nE       #21 0x557ad27fdac3 <unknown>\nE       #22 0x7f595445e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468176112,"stop":1696468176915,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468176916,"stop":1696468176916,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468176916,"stop":1696468193271,"duration":16355},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x557ad27fe933 <unknown>\n#1 0x557ad24d86f7 <unknown>\n#2 0x557ad2525b9d <unknown>\n#3 0x557ad2523f3d <unknown>\n#4 0x557ad2521cf8 <unknown>\n#5 0x557ad2520d67 <unknown>\n#6 0x557ad2515a29 <unknown>\n#7 0x557ad2541602 <unknown>\n#8 0x557ad2515446 <unknown>\n#9 0x557ad25417ce <unknown>\n#10 0x557ad255a857 <unknown>\n#11 0x557ad25413d3 <unknown>\n#12 0x557ad2513e64 <unknown>\n#13 0x557ad2514c4e <unknown>\n#14 0x557ad27c4558 <unknown>\n#15 0x557ad27c84a0 <unknown>\n#16 0x557ad27d297c <unknown>\n#17 0x557ad27c90b8 <unknown>\n#18 0x557ad2794cdf <unknown>\n#19 0x557ad27ed048 <unknown>\n#20 0x557ad27ed219 <unknown>\n#21 0x557ad27fdac3 <unknown>\n#22 0x7f595445e044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200768610>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe822350>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe822750>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557ad27ed219 \\\\u003Cunknown>\\\\n#21 0x557ad27fdac3 \\\\u003Cunknown>\\\\n#22 0x7f595445e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x557ad27fe933 <unknown>\nE       #1 0x557ad24d86f7 <unknown>\nE       #2 0x557ad2525b9d <unknown>\nE       #3 0x557ad2523f3d <unknown>\nE       #4 0x557ad2521cf8 <unknown>\nE       #5 0x557ad2520d67 <unknown>\nE       #6 0x557ad2515a29 <unknown>\nE       #7 0x557ad2541602 <unknown>\nE       #8 0x557ad2515446 <unknown>\nE       #9 0x557ad25417ce <unknown>\nE       #10 0x557ad255a857 <unknown>\nE       #11 0x557ad25413d3 <unknown>\nE       #12 0x557ad2513e64 <unknown>\nE       #13 0x557ad2514c4e <unknown>\nE       #14 0x557ad27c4558 <unknown>\nE       #15 0x557ad27c84a0 <unknown>\nE       #16 0x557ad27d297c <unknown>\nE       #17 0x557ad27c90b8 <unknown>\nE       #18 0x557ad2794cdf <unknown>\nE       #19 0x557ad27ed048 <unknown>\nE       #20 0x557ad27ed219 <unknown>\nE       #21 0x557ad27fdac3 <unknown>\nE       #22 0x7f595445e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468193271,"stop":1696468193313,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468193375,"stop":1696468193410,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468194461,"stop":1696468194517,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"8c5c452b0bac08c0","name":"Screenshot","source":"8c5c452b0bac08c0.png","type":"image/png","size":58752},{"uid":"6bee662439acabfe","name":"HTML source","source":"6bee662439acabfe.html","type":"text/html","size":895060}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468195812,"stop":1696468195813,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468195813,"stop":1696468195879,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":50,"unknown":0,"total":71},"items":[{"uid":"4f64cb79684d3712","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/4f64cb79684d3712","status":"passed","time":{"start":1696381515465,"stop":1696381523352,"duration":7887}},{"uid":"35944203f825cf65","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/35944203f825cf65","status":"passed","time":{"start":1696295052798,"stop":1696295060579,"duration":7781}},{"uid":"8dccaee774da5938","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/8dccaee774da5938","status":"passed","time":{"start":1696283004260,"stop":1696283013742,"duration":9482}},{"uid":"718c45b08b2576dd","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/718c45b08b2576dd","status":"passed","time":{"start":1696258584605,"stop":1696258591873,"duration":7268}},{"uid":"89175ffbe8d28a2c","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/89175ffbe8d28a2c","status":"passed","time":{"start":1696208701894,"stop":1696208709170,"duration":7276}},{"uid":"abb41297b5ff3ee6","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/abb41297b5ff3ee6","status":"passed","time":{"start":1696122692137,"stop":1696122699268,"duration":7131}},{"uid":"e6dd1dc8195669ed","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/e6dd1dc8195669ed","status":"passed","time":{"start":1696035653549,"stop":1696035660155,"duration":6606}},{"uid":"6b7aaeddd562501e","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/6b7aaeddd562501e","status":"passed","time":{"start":1695949376884,"stop":1695949383436,"duration":6552}},{"uid":"63de78ebb54a3542","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/63de78ebb54a3542","status":"passed","time":{"start":1695863256280,"stop":1695863263961,"duration":7681}},{"uid":"4060de7a51c3435c","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/4060de7a51c3435c","status":"passed","time":{"start":1695777080678,"stop":1695777088649,"duration":7971}},{"uid":"2b38bf8f665926e4","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/2b38bf8f665926e4","status":"passed","time":{"start":1695690548139,"stop":1695690555352,"duration":7213}},{"uid":"673ff9d4dad64543","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/673ff9d4dad64543","status":"passed","time":{"start":1695604098661,"stop":1695604106674,"duration":8013}},{"uid":"c3970d45d6859f7","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/c3970d45d6859f7","status":"passed","time":{"start":1695517504357,"stop":1695517510862,"duration":6505}},{"uid":"ea0e6d68ddb5ec0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/ea0e6d68ddb5ec0d","status":"passed","time":{"start":1695431167476,"stop":1695431175373,"duration":7897}},{"uid":"636c776d8eb97a16","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/636c776d8eb97a16","status":"passed","time":{"start":1695406464839,"stop":1695406472917,"duration":8078}},{"uid":"7cb4b0fa39685fbf","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/7cb4b0fa39685fbf","status":"passed","time":{"start":1695344583384,"stop":1695344589915,"duration":6531}},{"uid":"52b228846f9967ab","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/52b228846f9967ab","status":"passed","time":{"start":1695258158626,"stop":1695258165277,"duration":6651}},{"uid":"80c1b16624a4f2cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/80c1b16624a4f2cf","status":"passed","time":{"start":1695172240344,"stop":1695172248325,"duration":7981}},{"uid":"25bc997b5390b73f","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/25bc997b5390b73f","status":"passed","time":{"start":1695085519765,"stop":1695085526683,"duration":6918}},{"uid":"bff8d442f1663d75","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/bff8d442f1663d75","status":"passed","time":{"start":1695064105783,"stop":1695064113280,"duration":7497}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"cf7f1f1a58789030.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}