{"uid":"7efd0d20353d89fb","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"24bb2201ad02feae4230ec2c85755ba8","time":{"start":1696468391934,"stop":1696468394311,"duration":2377},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563faabb5933 <unknown>\n#1 0x563faa88f6f7 <unknown>\n#2 0x563faa8dcb9d <unknown>\n#3 0x563faa8daf3d <unknown>\n#4 0x563faa8d8cf8 <unknown>\n#5 0x563faa8d7d67 <unknown>\n#6 0x563faa8cca29 <unknown>\n#7 0x563faa8f8602 <unknown>\n#8 0x563faa8cc446 <unknown>\n#9 0x563faa8f87ce <unknown>\n#10 0x563faa911857 <unknown>\n#11 0x563faa8f83d3 <unknown>\n#12 0x563faa8cae64 <unknown>\n#13 0x563faa8cbc4e <unknown>\n#14 0x563faab7b558 <unknown>\n#15 0x563faab7f4a0 <unknown>\n#16 0x563faab8997c <unknown>\n#17 0x563faab800b8 <unknown>\n#18 0x563faab4bcdf <unknown>\n#19 0x563faaba4048 <unknown>\n#20 0x563faaba4219 <unknown>\n#21 0x563faabb4ac3 <unknown>\n#22 0x7f5abe9a7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082d7d0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe972550>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe879bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563faaba4219 \\\\u003Cunknown>\\\\n#21 0x563faabb4ac3 \\\\u003Cunknown>\\\\n#22 0x7f5abe9a7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563faabb5933 <unknown>\nE       #1 0x563faa88f6f7 <unknown>\nE       #2 0x563faa8dcb9d <unknown>\nE       #3 0x563faa8daf3d <unknown>\nE       #4 0x563faa8d8cf8 <unknown>\nE       #5 0x563faa8d7d67 <unknown>\nE       #6 0x563faa8cca29 <unknown>\nE       #7 0x563faa8f8602 <unknown>\nE       #8 0x563faa8cc446 <unknown>\nE       #9 0x563faa8f87ce <unknown>\nE       #10 0x563faa911857 <unknown>\nE       #11 0x563faa8f83d3 <unknown>\nE       #12 0x563faa8cae64 <unknown>\nE       #13 0x563faa8cbc4e <unknown>\nE       #14 0x563faab7b558 <unknown>\nE       #15 0x563faab7f4a0 <unknown>\nE       #16 0x563faab8997c <unknown>\nE       #17 0x563faab800b8 <unknown>\nE       #18 0x563faab4bcdf <unknown>\nE       #19 0x563faaba4048 <unknown>\nE       #20 0x563faaba4219 <unknown>\nE       #21 0x563faabb4ac3 <unknown>\nE       #22 0x7f5abe9a7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468379932,"stop":1696468380739,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468380739,"stop":1696468380739,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468380739,"stop":1696468391933,"duration":11194},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x563faabb5933 <unknown>\n#1 0x563faa88f6f7 <unknown>\n#2 0x563faa8dcb9d <unknown>\n#3 0x563faa8daf3d <unknown>\n#4 0x563faa8d8cf8 <unknown>\n#5 0x563faa8d7d67 <unknown>\n#6 0x563faa8cca29 <unknown>\n#7 0x563faa8f8602 <unknown>\n#8 0x563faa8cc446 <unknown>\n#9 0x563faa8f87ce <unknown>\n#10 0x563faa911857 <unknown>\n#11 0x563faa8f83d3 <unknown>\n#12 0x563faa8cae64 <unknown>\n#13 0x563faa8cbc4e <unknown>\n#14 0x563faab7b558 <unknown>\n#15 0x563faab7f4a0 <unknown>\n#16 0x563faab8997c <unknown>\n#17 0x563faab800b8 <unknown>\n#18 0x563faab4bcdf <unknown>\n#19 0x563faaba4048 <unknown>\n#20 0x563faaba4219 <unknown>\n#21 0x563faabb4ac3 <unknown>\n#22 0x7f5abe9a7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082d7d0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe972550>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe879bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563faaba4219 \\\\u003Cunknown>\\\\n#21 0x563faabb4ac3 \\\\u003Cunknown>\\\\n#22 0x7f5abe9a7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x563faabb5933 <unknown>\nE       #1 0x563faa88f6f7 <unknown>\nE       #2 0x563faa8dcb9d <unknown>\nE       #3 0x563faa8daf3d <unknown>\nE       #4 0x563faa8d8cf8 <unknown>\nE       #5 0x563faa8d7d67 <unknown>\nE       #6 0x563faa8cca29 <unknown>\nE       #7 0x563faa8f8602 <unknown>\nE       #8 0x563faa8cc446 <unknown>\nE       #9 0x563faa8f87ce <unknown>\nE       #10 0x563faa911857 <unknown>\nE       #11 0x563faa8f83d3 <unknown>\nE       #12 0x563faa8cae64 <unknown>\nE       #13 0x563faa8cbc4e <unknown>\nE       #14 0x563faab7b558 <unknown>\nE       #15 0x563faab7f4a0 <unknown>\nE       #16 0x563faab8997c <unknown>\nE       #17 0x563faab800b8 <unknown>\nE       #18 0x563faab4bcdf <unknown>\nE       #19 0x563faaba4048 <unknown>\nE       #20 0x563faaba4219 <unknown>\nE       #21 0x563faabb4ac3 <unknown>\nE       #22 0x7f5abe9a7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468391934,"stop":1696468391978,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468392073,"stop":1696468392115,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468393169,"stop":1696468393224,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"36df4c42f9eab5ae","name":"Screenshot","source":"36df4c42f9eab5ae.png","type":"image/png","size":143373},{"uid":"bfa2393c1c3f3a2d","name":"HTML source","source":"bfa2393c1c3f3a2d.html","type":"text/html","size":891650}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468394546,"stop":1696468394546,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468394546,"stop":1696468394610,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":68,"unknown":0,"total":69},"items":[{"uid":"746d143b75b03444","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/746d143b75b03444","status":"passed","time":{"start":1696381722820,"stop":1696381733777,"duration":10957}},{"uid":"82b68d4b777bb02c","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/82b68d4b777bb02c","status":"passed","time":{"start":1696295252665,"stop":1696295263559,"duration":10894}},{"uid":"3cda42f1ade0b209","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/3cda42f1ade0b209","status":"passed","time":{"start":1696283256850,"stop":1696283269250,"duration":12400}},{"uid":"a5ab2e0cd2d22d17","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/a5ab2e0cd2d22d17","status":"passed","time":{"start":1696258796760,"stop":1696258875289,"duration":78529}},{"uid":"edd841c23caa4f1c","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/edd841c23caa4f1c","status":"passed","time":{"start":1696208889686,"stop":1696208899774,"duration":10088}},{"uid":"2fb86014d43f2f96","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/2fb86014d43f2f96","status":"passed","time":{"start":1696122895844,"stop":1696122905761,"duration":9917}},{"uid":"b23546e45709dbdb","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/b23546e45709dbdb","status":"passed","time":{"start":1696035835500,"stop":1696035845448,"duration":9948}},{"uid":"7e4781c3a5a487f7","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/7e4781c3a5a487f7","status":"passed","time":{"start":1695949559223,"stop":1695949568743,"duration":9520}},{"uid":"53cfe0a7ccc5491c","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/53cfe0a7ccc5491c","status":"passed","time":{"start":1695863493034,"stop":1695863504077,"duration":11043}},{"uid":"3eb5ed1ea210f165","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/3eb5ed1ea210f165","status":"passed","time":{"start":1695777323165,"stop":1695777334010,"duration":10845}},{"uid":"125e3668e39ee9af","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/125e3668e39ee9af","status":"passed","time":{"start":1695690768627,"stop":1695690778768,"duration":10141}},{"uid":"20d6a5a65c768242","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/20d6a5a65c768242","status":"passed","time":{"start":1695604339460,"stop":1695604350290,"duration":10830}},{"uid":"3fecb16a93dbf106","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/3fecb16a93dbf106","status":"passed","time":{"start":1695517686478,"stop":1695517695987,"duration":9509}},{"uid":"cdef37ac0f5a0386","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/cdef37ac0f5a0386","status":"passed","time":{"start":1695431411630,"stop":1695431423013,"duration":11383}},{"uid":"bd6f810daf6cd51a","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/bd6f810daf6cd51a","status":"passed","time":{"start":1695406709606,"stop":1695406720637,"duration":11031}},{"uid":"f3108aa7ffa847cb","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/f3108aa7ffa847cb","status":"passed","time":{"start":1695344776545,"stop":1695344785940,"duration":9395}},{"uid":"43b2fe365c762319","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/43b2fe365c762319","status":"passed","time":{"start":1695258359460,"stop":1695258369072,"duration":9612}},{"uid":"88a05c07a49b281","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/88a05c07a49b281","status":"passed","time":{"start":1695172491300,"stop":1695172502204,"duration":10904}},{"uid":"d18cb2cbf28851a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/d18cb2cbf28851a0","status":"passed","time":{"start":1695085745810,"stop":1695085755841,"duration":10031}},{"uid":"e64e5c0358bed1b2","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/e64e5c0358bed1b2","status":"passed","time":{"start":1695064333173,"stop":1695064343959,"duration":10786}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"7efd0d20353d89fb.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}