{"uid":"bfae0579cfa8653b","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"dc4e879f02824a08e341b1bdc96aa5ba","time":{"start":1696468445268,"stop":1696468447596,"duration":2328},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x56213eadd933 <unknown>\n#1 0x56213e7b76f7 <unknown>\n#2 0x56213e804b9d <unknown>\n#3 0x56213e802f3d <unknown>\n#4 0x56213e800cf8 <unknown>\n#5 0x56213e7ffd67 <unknown>\n#6 0x56213e7f4a29 <unknown>\n#7 0x56213e820602 <unknown>\n#8 0x56213e7f4446 <unknown>\n#9 0x56213e8207ce <unknown>\n#10 0x56213e839857 <unknown>\n#11 0x56213e8203d3 <unknown>\n#12 0x56213e7f2e64 <unknown>\n#13 0x56213e7f3c4e <unknown>\n#14 0x56213eaa3558 <unknown>\n#15 0x56213eaa74a0 <unknown>\n#16 0x56213eab197c <unknown>\n#17 0x56213eaa80b8 <unknown>\n#18 0x56213ea73cdf <unknown>\n#19 0x56213eacc048 <unknown>\n#20 0x56213eacc219 <unknown>\n#21 0x56213eadcac3 <unknown>\n#22 0x7f6def786044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082e4d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe95fc10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe95cd90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56213eacc219 \\\\u003Cunknown>\\\\n#21 0x56213eadcac3 \\\\u003Cunknown>\\\\n#22 0x7f6def786044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x56213eadd933 <unknown>\nE       #1 0x56213e7b76f7 <unknown>\nE       #2 0x56213e804b9d <unknown>\nE       #3 0x56213e802f3d <unknown>\nE       #4 0x56213e800cf8 <unknown>\nE       #5 0x56213e7ffd67 <unknown>\nE       #6 0x56213e7f4a29 <unknown>\nE       #7 0x56213e820602 <unknown>\nE       #8 0x56213e7f4446 <unknown>\nE       #9 0x56213e8207ce <unknown>\nE       #10 0x56213e839857 <unknown>\nE       #11 0x56213e8203d3 <unknown>\nE       #12 0x56213e7f2e64 <unknown>\nE       #13 0x56213e7f3c4e <unknown>\nE       #14 0x56213eaa3558 <unknown>\nE       #15 0x56213eaa74a0 <unknown>\nE       #16 0x56213eab197c <unknown>\nE       #17 0x56213eaa80b8 <unknown>\nE       #18 0x56213ea73cdf <unknown>\nE       #19 0x56213eacc048 <unknown>\nE       #20 0x56213eacc219 <unknown>\nE       #21 0x56213eadcac3 <unknown>\nE       #22 0x7f6def786044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468428049,"stop":1696468428851,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468428851,"stop":1696468428851,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468428851,"stop":1696468445267,"duration":16416},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x56213eadd933 <unknown>\n#1 0x56213e7b76f7 <unknown>\n#2 0x56213e804b9d <unknown>\n#3 0x56213e802f3d <unknown>\n#4 0x56213e800cf8 <unknown>\n#5 0x56213e7ffd67 <unknown>\n#6 0x56213e7f4a29 <unknown>\n#7 0x56213e820602 <unknown>\n#8 0x56213e7f4446 <unknown>\n#9 0x56213e8207ce <unknown>\n#10 0x56213e839857 <unknown>\n#11 0x56213e8203d3 <unknown>\n#12 0x56213e7f2e64 <unknown>\n#13 0x56213e7f3c4e <unknown>\n#14 0x56213eaa3558 <unknown>\n#15 0x56213eaa74a0 <unknown>\n#16 0x56213eab197c <unknown>\n#17 0x56213eaa80b8 <unknown>\n#18 0x56213ea73cdf <unknown>\n#19 0x56213eacc048 <unknown>\n#20 0x56213eacc219 <unknown>\n#21 0x56213eadcac3 <unknown>\n#22 0x7f6def786044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082e4d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe95fc10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe95cd90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56213eacc219 \\\\u003Cunknown>\\\\n#21 0x56213eadcac3 \\\\u003Cunknown>\\\\n#22 0x7f6def786044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x56213eadd933 <unknown>\nE       #1 0x56213e7b76f7 <unknown>\nE       #2 0x56213e804b9d <unknown>\nE       #3 0x56213e802f3d <unknown>\nE       #4 0x56213e800cf8 <unknown>\nE       #5 0x56213e7ffd67 <unknown>\nE       #6 0x56213e7f4a29 <unknown>\nE       #7 0x56213e820602 <unknown>\nE       #8 0x56213e7f4446 <unknown>\nE       #9 0x56213e8207ce <unknown>\nE       #10 0x56213e839857 <unknown>\nE       #11 0x56213e8203d3 <unknown>\nE       #12 0x56213e7f2e64 <unknown>\nE       #13 0x56213e7f3c4e <unknown>\nE       #14 0x56213eaa3558 <unknown>\nE       #15 0x56213eaa74a0 <unknown>\nE       #16 0x56213eab197c <unknown>\nE       #17 0x56213eaa80b8 <unknown>\nE       #18 0x56213ea73cdf <unknown>\nE       #19 0x56213eacc048 <unknown>\nE       #20 0x56213eacc219 <unknown>\nE       #21 0x56213eadcac3 <unknown>\nE       #22 0x7f6def786044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468445268,"stop":1696468445303,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468445374,"stop":1696468445412,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468446461,"stop":1696468446514,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"2ec2cf077d0a8bdf","name":"Screenshot","source":"2ec2cf077d0a8bdf.png","type":"image/png","size":79209},{"uid":"641be164a41829cf","name":"HTML source","source":"641be164a41829cf.html","type":"text/html","size":641400}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468447799,"stop":1696468447799,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468447800,"stop":1696468447869,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":47,"unknown":0,"total":69},"items":[{"uid":"7fc731d31f657b7a","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/7fc731d31f657b7a","status":"passed","time":{"start":1696381786666,"stop":1696381797618,"duration":10952}},{"uid":"cdf394b85f8dd53c","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/cdf394b85f8dd53c","status":"passed","time":{"start":1696295312947,"stop":1696295323744,"duration":10797}},{"uid":"a2420d6b07731f67","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/a2420d6b07731f67","status":"passed","time":{"start":1696283334936,"stop":1696283346958,"duration":12022}},{"uid":"95eac9f7efb5260a","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/95eac9f7efb5260a","status":"passed","time":{"start":1696258930990,"stop":1696258941415,"duration":10425}},{"uid":"eb090ddafcba0292","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/eb090ddafcba0292","status":"passed","time":{"start":1696208947739,"stop":1696208957670,"duration":9931}},{"uid":"f3628cf6aad4a249","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/f3628cf6aad4a249","status":"passed","time":{"start":1696122959080,"stop":1696122968980,"duration":9900}},{"uid":"15ad886480d7fa21","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/15ad886480d7fa21","status":"passed","time":{"start":1696035892768,"stop":1696035902129,"duration":9361}},{"uid":"32496c6989477909","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/32496c6989477909","status":"passed","time":{"start":1695949615710,"stop":1695949625167,"duration":9457}},{"uid":"1b398f532b3f20a2","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/1b398f532b3f20a2","status":"passed","time":{"start":1695863567002,"stop":1695863577718,"duration":10716}},{"uid":"437fce1daff256e7","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/437fce1daff256e7","status":"passed","time":{"start":1695777396701,"stop":1695777407436,"duration":10735}},{"uid":"9eff5da831b4ef48","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/9eff5da831b4ef48","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55be857b76b3 <unknown>\n#1 0x55be8548d1e7 <unknown>\n#2 0x55be854da65d <unknown>\n#3 0x55be854d89fd <unknown>\n#4 0x55be854d67b8 <unknown>\n#5 0x55be854d5827 <unknown>\n#6 0x55be854ca4f9 <unknown>\n#7 0x55be854f60c2 <unknown>\n#8 0x55be854c9f16 <unknown>\n#9 0x55be854f628e <unknown>\n#10 0x55be8550f322 <unknown>\n#11 0x55be854f5e93 <unknown>\n#12 0x55be854c8934 <unknown>\n#13 0x55be854c971e <unknown>\n#14 0x55be8577ccb8 <unknown>\n#15 0x55be85780bf0 <unknown>\n#16 0x55be8578b19c <unknown>\n#17 0x55be85781808 <unknown>\n#18 0x55be8574e27f <unknown>\n#19 0x55be857a5e88 <unknown>\n#20 0x55be857a6059 <unknown>\n#21 0x55be857b6843 <unknown>\n#22 0x7f8c0af81044 <unknown>","time":{"start":1695690826961,"stop":1695690829283,"duration":2322}},{"uid":"3ff301f8a71b5d4b","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/3ff301f8a71b5d4b","status":"passed","time":{"start":1695604412309,"stop":1695604423004,"duration":10695}},{"uid":"88b2f2c1181c4d83","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/88b2f2c1181c4d83","status":"passed","time":{"start":1695517743583,"stop":1695517753072,"duration":9489}},{"uid":"b4740b23f32a7d79","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/b4740b23f32a7d79","status":"passed","time":{"start":1695431486168,"stop":1695431496870,"duration":10702}},{"uid":"1c37b180804bb33d","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/1c37b180804bb33d","status":"passed","time":{"start":1695406784035,"stop":1695406795977,"duration":11942}},{"uid":"a5bb1754a2a9a73e","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/a5bb1754a2a9a73e","status":"passed","time":{"start":1695344835553,"stop":1695344845112,"duration":9559}},{"uid":"3482a4d216d23958","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/3482a4d216d23958","status":"passed","time":{"start":1695258419750,"stop":1695258429185,"duration":9435}},{"uid":"6ebac603644a6554","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/6ebac603644a6554","status":"passed","time":{"start":1695172567952,"stop":1695172578764,"duration":10812}},{"uid":"aa1049b4cc5a1c97","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/aa1049b4cc5a1c97","status":"passed","time":{"start":1695085812866,"stop":1695085823262,"duration":10396}},{"uid":"1cc132cd8a3f0e92","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/1cc132cd8a3f0e92","status":"passed","time":{"start":1695064403260,"stop":1695064414537,"duration":11277}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"bfae0579cfa8653b.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}