{"uid":"434d9e586fa02e29","name":"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","historyId":"f1cd0408694619a248c788cf181ce9dc","time":{"start":1696468251720,"stop":1696468254103,"duration":2383},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x56277eac7933 <unknown>\n#1 0x56277e7a16f7 <unknown>\n#2 0x56277e7eeb9d <unknown>\n#3 0x56277e7ecf3d <unknown>\n#4 0x56277e7eacf8 <unknown>\n#5 0x56277e7e9d67 <unknown>\n#6 0x56277e7dea29 <unknown>\n#7 0x56277e80a602 <unknown>\n#8 0x56277e7de446 <unknown>\n#9 0x56277e80a7ce <unknown>\n#10 0x56277e823857 <unknown>\n#11 0x56277e80a3d3 <unknown>\n#12 0x56277e7dce64 <unknown>\n#13 0x56277e7ddc4e <unknown>\n#14 0x56277ea8d558 <unknown>\n#15 0x56277ea914a0 <unknown>\n#16 0x56277ea9b97c <unknown>\n#17 0x56277ea920b8 <unknown>\n#18 0x56277ea5dcdf <unknown>\n#19 0x56277eab6048 <unknown>\n#20 0x56277eab6219 <unknown>\n#21 0x56277eac6ac3 <unknown>\n#22 0x7fd2ea2be044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080dfd0>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe9b6510>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41ff95f1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56277eab6219 \\\\u003Cunknown>\\\\n#21 0x56277eac6ac3 \\\\u003Cunknown>\\\\n#22 0x7fd2ea2be044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x56277eac7933 <unknown>\nE       #1 0x56277e7a16f7 <unknown>\nE       #2 0x56277e7eeb9d <unknown>\nE       #3 0x56277e7ecf3d <unknown>\nE       #4 0x56277e7eacf8 <unknown>\nE       #5 0x56277e7e9d67 <unknown>\nE       #6 0x56277e7dea29 <unknown>\nE       #7 0x56277e80a602 <unknown>\nE       #8 0x56277e7de446 <unknown>\nE       #9 0x56277e80a7ce <unknown>\nE       #10 0x56277e823857 <unknown>\nE       #11 0x56277e80a3d3 <unknown>\nE       #12 0x56277e7dce64 <unknown>\nE       #13 0x56277e7ddc4e <unknown>\nE       #14 0x56277ea8d558 <unknown>\nE       #15 0x56277ea914a0 <unknown>\nE       #16 0x56277ea9b97c <unknown>\nE       #17 0x56277ea920b8 <unknown>\nE       #18 0x56277ea5dcdf <unknown>\nE       #19 0x56277eab6048 <unknown>\nE       #20 0x56277eab6219 <unknown>\nE       #21 0x56277eac6ac3 <unknown>\nE       #22 0x7fd2ea2be044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468239679,"stop":1696468240477,"duration":798},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468240477,"stop":1696468251720,"duration":11243},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468240477,"stop":1696468240477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x56277eac7933 <unknown>\n#1 0x56277e7a16f7 <unknown>\n#2 0x56277e7eeb9d <unknown>\n#3 0x56277e7ecf3d <unknown>\n#4 0x56277e7eacf8 <unknown>\n#5 0x56277e7e9d67 <unknown>\n#6 0x56277e7dea29 <unknown>\n#7 0x56277e80a602 <unknown>\n#8 0x56277e7de446 <unknown>\n#9 0x56277e80a7ce <unknown>\n#10 0x56277e823857 <unknown>\n#11 0x56277e80a3d3 <unknown>\n#12 0x56277e7dce64 <unknown>\n#13 0x56277e7ddc4e <unknown>\n#14 0x56277ea8d558 <unknown>\n#15 0x56277ea914a0 <unknown>\n#16 0x56277ea9b97c <unknown>\n#17 0x56277ea920b8 <unknown>\n#18 0x56277ea5dcdf <unknown>\n#19 0x56277eab6048 <unknown>\n#20 0x56277eab6219 <unknown>\n#21 0x56277eac6ac3 <unknown>\n#22 0x7fd2ea2be044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080dfd0>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe9b6510>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41ff95f1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56277eab6219 \\\\u003Cunknown>\\\\n#21 0x56277eac6ac3 \\\\u003Cunknown>\\\\n#22 0x7fd2ea2be044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x56277eac7933 <unknown>\nE       #1 0x56277e7a16f7 <unknown>\nE       #2 0x56277e7eeb9d <unknown>\nE       #3 0x56277e7ecf3d <unknown>\nE       #4 0x56277e7eacf8 <unknown>\nE       #5 0x56277e7e9d67 <unknown>\nE       #6 0x56277e7dea29 <unknown>\nE       #7 0x56277e80a602 <unknown>\nE       #8 0x56277e7de446 <unknown>\nE       #9 0x56277e80a7ce <unknown>\nE       #10 0x56277e823857 <unknown>\nE       #11 0x56277e80a3d3 <unknown>\nE       #12 0x56277e7dce64 <unknown>\nE       #13 0x56277e7ddc4e <unknown>\nE       #14 0x56277ea8d558 <unknown>\nE       #15 0x56277ea914a0 <unknown>\nE       #16 0x56277ea9b97c <unknown>\nE       #17 0x56277ea920b8 <unknown>\nE       #18 0x56277ea5dcdf <unknown>\nE       #19 0x56277eab6048 <unknown>\nE       #20 0x56277eab6219 <unknown>\nE       #21 0x56277eac6ac3 <unknown>\nE       #22 0x7fd2ea2be044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468251720,"stop":1696468251764,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468251859,"stop":1696468251901,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468252954,"stop":1696468253019,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"12c411b19c54efe9","name":"Screenshot","source":"12c411b19c54efe9.png","type":"image/png","size":135589},{"uid":"daaf6b964030d173","name":"HTML source","source":"daaf6b964030d173.html","type":"text/html","size":869661}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696468254355,"stop":1696468254420,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696468254355,"stop":1696468254355,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":69,"unknown":0,"total":70},"items":[{"uid":"8ed11bcd7c4f4652","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/8ed11bcd7c4f4652","status":"passed","time":{"start":1696381570992,"stop":1696381578988,"duration":7996}},{"uid":"1d6ff75124fc784a","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/1d6ff75124fc784a","status":"passed","time":{"start":1696295104512,"stop":1696295112494,"duration":7982}},{"uid":"f14ac5912736a5b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/f14ac5912736a5b1","status":"passed","time":{"start":1696283072437,"stop":1696283081587,"duration":9150}},{"uid":"56e9be448b0c0bd2","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/56e9be448b0c0bd2","status":"passed","time":{"start":1696258641822,"stop":1696258649342,"duration":7520}},{"uid":"5f19d6d29ed973a3","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/5f19d6d29ed973a3","status":"passed","time":{"start":1696208751500,"stop":1696208758534,"duration":7034}},{"uid":"10c99a7584b136d6","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/10c99a7584b136d6","status":"passed","time":{"start":1696122747255,"stop":1696122754127,"duration":6872}},{"uid":"bb4651664b54a50d","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/bb4651664b54a50d","status":"passed","time":{"start":1696035702297,"stop":1696035708784,"duration":6487}},{"uid":"17c718e6b19468ad","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/17c718e6b19468ad","status":"passed","time":{"start":1695949424661,"stop":1695949431186,"duration":6525}},{"uid":"8d9041506faa11d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/8d9041506faa11d2","status":"passed","time":{"start":1695863322211,"stop":1695863329900,"duration":7689}},{"uid":"4f52a23cca88f4b7","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/4f52a23cca88f4b7","status":"passed","time":{"start":1695777147569,"stop":1695777155496,"duration":7927}},{"uid":"4afc7dbb50dc64f0","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/4afc7dbb50dc64f0","status":"passed","time":{"start":1695690621364,"stop":1695690628841,"duration":7477}},{"uid":"a900ef9506efe785","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/a900ef9506efe785","status":"passed","time":{"start":1695604164190,"stop":1695604171908,"duration":7718}},{"uid":"e912b8ac8849a38a","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/e912b8ac8849a38a","status":"passed","time":{"start":1695517552756,"stop":1695517559300,"duration":6544}},{"uid":"92ca06db1a0f7142","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/92ca06db1a0f7142","status":"passed","time":{"start":1695431233784,"stop":1695431241857,"duration":8073}},{"uid":"3b5c388e2201749f","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/3b5c388e2201749f","status":"passed","time":{"start":1695406531436,"stop":1695406539707,"duration":8271}},{"uid":"f9205002b5a816e6","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/f9205002b5a816e6","status":"passed","time":{"start":1695344634582,"stop":1695344641252,"duration":6670}},{"uid":"ef565f21746801f6","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/ef565f21746801f6","status":"passed","time":{"start":1695258211412,"stop":1695258218187,"duration":6775}},{"uid":"61841d75a6b1e086","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/61841d75a6b1e086","status":"passed","time":{"start":1695172309600,"stop":1695172317479,"duration":7879}},{"uid":"63d6629edf229a31","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/63d6629edf229a31","status":"passed","time":{"start":1695085579438,"stop":1695085586622,"duration":7184}},{"uid":"618faa5d42971411","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/618faa5d42971411","status":"passed","time":{"start":1695064167239,"stop":1695064174608,"duration":7369}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"434d9e586fa02e29.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}