{"uid":"dd2c8f5dfab25735","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"f92d847cbd907f4f9e252d1a101ee715","time":{"start":1696468232836,"stop":1696468239339,"duration":6503},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" class=\"add-to-cart yellow-btn\" data-ya=\"{&quot;id&quot;:&quot;30533&quot;, &quot;price&quot;:1098.00, &quot;variant&quot;:&quot;Техническое описание Unis U-300 MaxiFlex&quot;, &quot;name&quot;:&quot;Клей плиточный Юнис MAXIFLEX U-300 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-plitochnyj-yunis-maxiflex-u-300-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x558fa4f8a933 <unknown>\n#1 0x558fa4c646f7 <unknown>\n#2 0x558fa4cb1b9d <unknown>\n#3 0x558fa4caff3d <unknown>\n#4 0x558fa4cadcf8 <unknown>\n#5 0x558fa4cacd67 <unknown>\n#6 0x558fa4ca1a29 <unknown>\n#7 0x558fa4ccd602 <unknown>\n#8 0x558fa4ca1446 <unknown>\n#9 0x558fa4ccd7ce <unknown>\n#10 0x558fa4ce6857 <unknown>\n#11 0x558fa4ccd3d3 <unknown>\n#12 0x558fa4c9fe64 <unknown>\n#13 0x558fa4ca0c4e <unknown>\n#14 0x558fa4f50558 <unknown>\n#15 0x558fa4f544a0 <unknown>\n#16 0x558fa4f5e97c <unknown>\n#17 0x558fa4f550b8 <unknown>\n#18 0x558fa4f20cdf <unknown>\n#19 0x558fa4f79048 <unknown>\n#20 0x558fa4f79219 <unknown>\n#21 0x558fa4f89ac3 <unknown>\n#22 0x7f33d618b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080c9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f42007733d0>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4200770450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558fa4f79219 \\\\u003Cunknown>\\\\n#21 0x558fa4f89ac3 \\\\u003Cunknown>\\\\n#22 0x7f33d618b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" class=\"add-to-cart yellow-btn\" data-ya=\"{&quot;id&quot;:&quot;30533&quot;, &quot;price&quot;:1098.00, &quot;variant&quot;:&quot;Техническое описание Unis U-300 MaxiFlex&quot;, &quot;name&quot;:&quot;Клей плиточный Юнис MAXIFLEX U-300 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-plitochnyj-yunis-maxiflex-u-300-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x558fa4f8a933 <unknown>\nE       #1 0x558fa4c646f7 <unknown>\nE       #2 0x558fa4cb1b9d <unknown>\nE       #3 0x558fa4caff3d <unknown>\nE       #4 0x558fa4cadcf8 <unknown>\nE       #5 0x558fa4cacd67 <unknown>\nE       #6 0x558fa4ca1a29 <unknown>\nE       #7 0x558fa4ccd602 <unknown>\nE       #8 0x558fa4ca1446 <unknown>\nE       #9 0x558fa4ccd7ce <unknown>\nE       #10 0x558fa4ce6857 <unknown>\nE       #11 0x558fa4ccd3d3 <unknown>\nE       #12 0x558fa4c9fe64 <unknown>\nE       #13 0x558fa4ca0c4e <unknown>\nE       #14 0x558fa4f50558 <unknown>\nE       #15 0x558fa4f544a0 <unknown>\nE       #16 0x558fa4f5e97c <unknown>\nE       #17 0x558fa4f550b8 <unknown>\nE       #18 0x558fa4f20cdf <unknown>\nE       #19 0x558fa4f79048 <unknown>\nE       #20 0x558fa4f79219 <unknown>\nE       #21 0x558fa4f89ac3 <unknown>\nE       #22 0x7f33d618b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468213802,"stop":1696468214604,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468214604,"stop":1696468214604,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468214604,"stop":1696468232835,"duration":18231},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" class=\"add-to-cart yellow-btn\" data-ya=\"{&quot;id&quot;:&quot;30533&quot;, &quot;price&quot;:1098.00, &quot;variant&quot;:&quot;Техническое описание Unis U-300 MaxiFlex&quot;, &quot;name&quot;:&quot;Клей плиточный Юнис MAXIFLEX U-300 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-plitochnyj-yunis-maxiflex-u-300-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x558fa4f8a933 <unknown>\n#1 0x558fa4c646f7 <unknown>\n#2 0x558fa4cb1b9d <unknown>\n#3 0x558fa4caff3d <unknown>\n#4 0x558fa4cadcf8 <unknown>\n#5 0x558fa4cacd67 <unknown>\n#6 0x558fa4ca1a29 <unknown>\n#7 0x558fa4ccd602 <unknown>\n#8 0x558fa4ca1446 <unknown>\n#9 0x558fa4ccd7ce <unknown>\n#10 0x558fa4ce6857 <unknown>\n#11 0x558fa4ccd3d3 <unknown>\n#12 0x558fa4c9fe64 <unknown>\n#13 0x558fa4ca0c4e <unknown>\n#14 0x558fa4f50558 <unknown>\n#15 0x558fa4f544a0 <unknown>\n#16 0x558fa4f5e97c <unknown>\n#17 0x558fa4f550b8 <unknown>\n#18 0x558fa4f20cdf <unknown>\n#19 0x558fa4f79048 <unknown>\n#20 0x558fa4f79219 <unknown>\n#21 0x558fa4f89ac3 <unknown>\n#22 0x7f33d618b044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080c9d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f42007733d0>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4200770450>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x558fa4f79219 \\\\u003Cunknown>\\\\n#21 0x558fa4f89ac3 \\\\u003Cunknown>\\\\n#22 0x7f33d618b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <a href=\"#\" class=\"add-to-cart yellow-btn\" data-ya=\"{&quot;id&quot;:&quot;30533&quot;, &quot;price&quot;:1098.00, &quot;variant&quot;:&quot;Техническое описание Unis U-300 MaxiFlex&quot;, &quot;name&quot;:&quot;Клей плиточный Юнис MAXIFLEX U-300 25 кг&quot;, &quot;category&quot;:&quot;Плиточные клеи&quot;, &quot;brand&quot;:&quot;Unis&quot;, &quot;url&quot;:&quot;klej-plitochnyj-yunis-maxiflex-u-300-25-kg&quot;}\">...</a> is not clickable at point (540, 20). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x558fa4f8a933 <unknown>\nE       #1 0x558fa4c646f7 <unknown>\nE       #2 0x558fa4cb1b9d <unknown>\nE       #3 0x558fa4caff3d <unknown>\nE       #4 0x558fa4cadcf8 <unknown>\nE       #5 0x558fa4cacd67 <unknown>\nE       #6 0x558fa4ca1a29 <unknown>\nE       #7 0x558fa4ccd602 <unknown>\nE       #8 0x558fa4ca1446 <unknown>\nE       #9 0x558fa4ccd7ce <unknown>\nE       #10 0x558fa4ce6857 <unknown>\nE       #11 0x558fa4ccd3d3 <unknown>\nE       #12 0x558fa4c9fe64 <unknown>\nE       #13 0x558fa4ca0c4e <unknown>\nE       #14 0x558fa4f50558 <unknown>\nE       #15 0x558fa4f544a0 <unknown>\nE       #16 0x558fa4f5e97c <unknown>\nE       #17 0x558fa4f550b8 <unknown>\nE       #18 0x558fa4f20cdf <unknown>\nE       #19 0x558fa4f79048 <unknown>\nE       #20 0x558fa4f79219 <unknown>\nE       #21 0x558fa4f89ac3 <unknown>\nE       #22 0x7f33d618b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468232836,"stop":1696468232922,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1696468234977,"stop":1696468235031,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1696468238124,"stop":1696468238187,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"5920c53c3e6a5de1","name":"Screenshot","source":"5920c53c3e6a5de1.png","type":"image/png","size":235373},{"uid":"dbfacc4047ee6e36","name":"HTML source","source":"dbfacc4047ee6e36.html","type":"text/html","size":797713}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468239608,"stop":1696468239608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468239608,"stop":1696468239677,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":49,"unknown":0,"total":70},"items":[{"uid":"be8df54f119dd81d","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/be8df54f119dd81d","status":"passed","time":{"start":1696381553625,"stop":1696381562335,"duration":8710}},{"uid":"f05e3972769029b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/f05e3972769029b6","status":"passed","time":{"start":1696295087921,"stop":1696295096624,"duration":8703}},{"uid":"124e2f00d4c704db","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/124e2f00d4c704db","status":"passed","time":{"start":1696283051379,"stop":1696283061550,"duration":10171}},{"uid":"7bf66859b8919a87","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/7bf66859b8919a87","status":"passed","time":{"start":1696258623512,"stop":1696258631822,"duration":8310}},{"uid":"c8873393baad61f0","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/c8873393baad61f0","status":"passed","time":{"start":1696208735945,"stop":1696208743805,"duration":7860}},{"uid":"ea64ad6abf6c610","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/ea64ad6abf6c610","status":"passed","time":{"start":1696122730001,"stop":1696122737793,"duration":7792}},{"uid":"a4280fea293ade46","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/a4280fea293ade46","status":"passed","time":{"start":1696035687129,"stop":1696035694723,"duration":7594}},{"uid":"695581afa88cb22c","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/695581afa88cb22c","status":"passed","time":{"start":1695949409930,"stop":1695949417226,"duration":7296}},{"uid":"e6af3914a42857a3","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/e6af3914a42857a3","status":"passed","time":{"start":1695863302481,"stop":1695863311313,"duration":8832}},{"uid":"a2f421c96c5cb594","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/a2f421c96c5cb594","status":"passed","time":{"start":1695777127350,"stop":1695777136021,"duration":8671}},{"uid":"9b36144535475c84","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/9b36144535475c84","status":"passed","time":{"start":1695690598756,"stop":1695690606993,"duration":8237}},{"uid":"9364db1b39f4fdb9","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/9364db1b39f4fdb9","status":"passed","time":{"start":1695604144098,"stop":1695604152730,"duration":8632}},{"uid":"d3869dcf162325ec","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/d3869dcf162325ec","status":"passed","time":{"start":1695517537665,"stop":1695517545100,"duration":7435}},{"uid":"b560e566f435bac5","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/b560e566f435bac5","status":"passed","time":{"start":1695431213469,"stop":1695431222276,"duration":8807}},{"uid":"772e09803fa925c2","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/772e09803fa925c2","status":"passed","time":{"start":1695406510732,"stop":1695406519768,"duration":9036}},{"uid":"36e3c9b8c9945753","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/36e3c9b8c9945753","status":"passed","time":{"start":1695344619401,"stop":1695344626779,"duration":7378}},{"uid":"b138275f21eda88","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/b138275f21eda88","status":"passed","time":{"start":1695258195591,"stop":1695258203537,"duration":7946}},{"uid":"15e9d481ee254844","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/15e9d481ee254844","status":"passed","time":{"start":1695172288829,"stop":1695172298067,"duration":9238}},{"uid":"6aad3bf0f8a7816c","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/6aad3bf0f8a7816c","status":"passed","time":{"start":1695085561472,"stop":1695085569893,"duration":8421}},{"uid":"8cda26ce86762594","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/8cda26ce86762594","status":"passed","time":{"start":1695064148792,"stop":1695064157225,"duration":8433}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"dd2c8f5dfab25735.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}