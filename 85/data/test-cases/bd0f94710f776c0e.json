{"uid":"bd0f94710f776c0e","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.main.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"c8c41294f976d39328d0b1dbf5226506","time":{"start":1696467506699,"stop":1696467506735,"duration":36},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55d2c9778933 <unknown>\n#1 0x55d2c9452546 <unknown>\n#2 0x55d2c949abf6 <unknown>\n#3 0x55d2c948fa29 <unknown>\n#4 0x55d2c94bb602 <unknown>\n#5 0x55d2c948f446 <unknown>\n#6 0x55d2c94bb7ce <unknown>\n#7 0x55d2c94d4857 <unknown>\n#8 0x55d2c94bb3d3 <unknown>\n#9 0x55d2c948de64 <unknown>\n#10 0x55d2c948ec4e <unknown>\n#11 0x55d2c973e558 <unknown>\n#12 0x55d2c97424a0 <unknown>\n#13 0x55d2c974c97c <unknown>\n#14 0x55d2c97430b8 <unknown>\n#15 0x55d2c970ecdf <unknown>\n#16 0x55d2c9767048 <unknown>\n#17 0x55d2c9767219 <unknown>\n#18 0x55d2c9777ac3 <unknown>\n#19 0x7f34db2bf044 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7f41ffe8bdd0>\nmain_page = <pages.main_page.MainPage object at 0x7f41fffaf610>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail  # \"Сломалось?\"\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/main/test_main_page.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe84a590>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55d2c9767219 \\\\u003Cunknown>\\\\n#18 0x55d2c9777ac3 \\\\u003Cunknown>\\\\n#19 0x7f34db2bf044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55d2c9778933 <unknown>\nE       #1 0x55d2c9452546 <unknown>\nE       #2 0x55d2c949abf6 <unknown>\nE       #3 0x55d2c948fa29 <unknown>\nE       #4 0x55d2c94bb602 <unknown>\nE       #5 0x55d2c948f446 <unknown>\nE       #6 0x55d2c94bb7ce <unknown>\nE       #7 0x55d2c94d4857 <unknown>\nE       #8 0x55d2c94bb3d3 <unknown>\nE       #9 0x55d2c948de64 <unknown>\nE       #10 0x55d2c948ec4e <unknown>\nE       #11 0x55d2c973e558 <unknown>\nE       #12 0x55d2c97424a0 <unknown>\nE       #13 0x55d2c974c97c <unknown>\nE       #14 0x55d2c97430b8 <unknown>\nE       #15 0x55d2c970ecdf <unknown>\nE       #16 0x55d2c9767048 <unknown>\nE       #17 0x55d2c9767219 <unknown>\nE       #18 0x55d2c9777ac3 <unknown>\nE       #19 0x7f34db2bf044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696467495614,"stop":1696467496424,"duration":810},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467496424,"stop":1696467496424,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_page","time":{"start":1696467496425,"stop":1696467506698,"duration":10273},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467873662,"stop":1696467873662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55d2c9778933 <unknown>\n#1 0x55d2c9452546 <unknown>\n#2 0x55d2c949abf6 <unknown>\n#3 0x55d2c948fa29 <unknown>\n#4 0x55d2c94bb602 <unknown>\n#5 0x55d2c948f446 <unknown>\n#6 0x55d2c94bb7ce <unknown>\n#7 0x55d2c94d4857 <unknown>\n#8 0x55d2c94bb3d3 <unknown>\n#9 0x55d2c948de64 <unknown>\n#10 0x55d2c948ec4e <unknown>\n#11 0x55d2c973e558 <unknown>\n#12 0x55d2c97424a0 <unknown>\n#13 0x55d2c974c97c <unknown>\n#14 0x55d2c97430b8 <unknown>\n#15 0x55d2c970ecdf <unknown>\n#16 0x55d2c9767048 <unknown>\n#17 0x55d2c9767219 <unknown>\n#18 0x55d2c9777ac3 <unknown>\n#19 0x7f34db2bf044 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7f41ffe8bdd0>\nmain_page = <pages.main_page.MainPage object at 0x7f41fffaf610>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail  # \"Сломалось?\"\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/main/test_main_page.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe84a590>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55d2c9767219 \\\\u003Cunknown>\\\\n#18 0x55d2c9777ac3 \\\\u003Cunknown>\\\\n#19 0x7f34db2bf044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55d2c9778933 <unknown>\nE       #1 0x55d2c9452546 <unknown>\nE       #2 0x55d2c949abf6 <unknown>\nE       #3 0x55d2c948fa29 <unknown>\nE       #4 0x55d2c94bb602 <unknown>\nE       #5 0x55d2c948f446 <unknown>\nE       #6 0x55d2c94bb7ce <unknown>\nE       #7 0x55d2c94d4857 <unknown>\nE       #8 0x55d2c94bb3d3 <unknown>\nE       #9 0x55d2c948de64 <unknown>\nE       #10 0x55d2c948ec4e <unknown>\nE       #11 0x55d2c973e558 <unknown>\nE       #12 0x55d2c97424a0 <unknown>\nE       #13 0x55d2c974c97c <unknown>\nE       #14 0x55d2c97430b8 <unknown>\nE       #15 0x55d2c970ecdf <unknown>\nE       #16 0x55d2c9767048 <unknown>\nE       #17 0x55d2c9767219 <unknown>\nE       #18 0x55d2c9777ac3 <unknown>\nE       #19 0x7f34db2bf044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Обратный звонок'","time":{"start":1696467506699,"stop":1696467506734,"duration":35},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55d2c9778933 <unknown>\n#1 0x55d2c9452546 <unknown>\n#2 0x55d2c949abf6 <unknown>\n#3 0x55d2c948fa29 <unknown>\n#4 0x55d2c94bb602 <unknown>\n#5 0x55d2c948f446 <unknown>\n#6 0x55d2c94bb7ce <unknown>\n#7 0x55d2c94d4857 <unknown>\n#8 0x55d2c94bb3d3 <unknown>\n#9 0x55d2c948de64 <unknown>\n#10 0x55d2c948ec4e <unknown>\n#11 0x55d2c973e558 <unknown>\n#12 0x55d2c97424a0 <unknown>\n#13 0x55d2c974c97c <unknown>\n#14 0x55d2c97430b8 <unknown>\n#15 0x55d2c970ecdf <unknown>\n#16 0x55d2c9767048 <unknown>\n#17 0x55d2c9767219 <unknown>\n#18 0x55d2c9777ac3 <unknown>\n#19 0x7f34db2bf044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 103, in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"79c55eb79ed6a131","name":"Screenshot","source":"79c55eb79ed6a131.png","type":"image/png","size":191028},{"uid":"95ee10c51c2e6ddb","name":"HTML source","source":"95ee10c51c2e6ddb.html","type":"text/html","size":401824}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696467506948,"stop":1696467506948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696467506948,"stop":1696467507014,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696467886392,"stop":1696467886392,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Footer functionality"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests.main"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.main.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"84aff114b52999f4","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/84aff114b52999f4","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x560526a516b3 <unknown>\n#1 0x560526727036 <unknown>\n#2 0x56052676f6b6 <unknown>\n#3 0x5605267644f9 <unknown>\n#4 0x5605267900c2 <unknown>\n#5 0x560526763f16 <unknown>\n#6 0x56052679028e <unknown>\n#7 0x5605267a9322 <unknown>\n#8 0x56052678fe93 <unknown>\n#9 0x560526762934 <unknown>\n#10 0x56052676371e <unknown>\n#11 0x560526a16cb8 <unknown>\n#12 0x560526a1abf0 <unknown>\n#13 0x560526a2519c <unknown>\n#14 0x560526a1b808 <unknown>\n#15 0x5605269e827f <unknown>\n#16 0x560526a3fe88 <unknown>\n#17 0x560526a40059 <unknown>\n#18 0x560526a50843 <unknown>\n#19 0x7f4ffe77f044 <unknown>","time":{"start":1696380945375,"stop":1696380945407,"duration":32}},{"uid":"fe7333121b4a13ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/fe7333121b4a13ea","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x555af58a96b3 <unknown>\n#1 0x555af557f036 <unknown>\n#2 0x555af55c76b6 <unknown>\n#3 0x555af55bc4f9 <unknown>\n#4 0x555af55e80c2 <unknown>\n#5 0x555af55bbf16 <unknown>\n#6 0x555af55e828e <unknown>\n#7 0x555af5601322 <unknown>\n#8 0x555af55e7e93 <unknown>\n#9 0x555af55ba934 <unknown>\n#10 0x555af55bb71e <unknown>\n#11 0x555af586ecb8 <unknown>\n#12 0x555af5872bf0 <unknown>\n#13 0x555af587d19c <unknown>\n#14 0x555af5873808 <unknown>\n#15 0x555af584027f <unknown>\n#16 0x555af5897e88 <unknown>\n#17 0x555af5898059 <unknown>\n#18 0x555af58a8843 <unknown>\n#19 0x7fa89cbfc044 <unknown>","time":{"start":1696294521251,"stop":1696294521285,"duration":34}},{"uid":"3bf4c6b4324a3fb1","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/3bf4c6b4324a3fb1","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55f3435fe6b3 <unknown>\n#1 0x55f3432d4036 <unknown>\n#2 0x55f34331c6b6 <unknown>\n#3 0x55f3433114f9 <unknown>\n#4 0x55f34333d0c2 <unknown>\n#5 0x55f343310f16 <unknown>\n#6 0x55f34333d28e <unknown>\n#7 0x55f343356322 <unknown>\n#8 0x55f34333ce93 <unknown>\n#9 0x55f34330f934 <unknown>\n#10 0x55f34331071e <unknown>\n#11 0x55f3435c3cb8 <unknown>\n#12 0x55f3435c7bf0 <unknown>\n#13 0x55f3435d219c <unknown>\n#14 0x55f3435c8808 <unknown>\n#15 0x55f34359527f <unknown>\n#16 0x55f3435ece88 <unknown>\n#17 0x55f3435ed059 <unknown>\n#18 0x55f3435fd843 <unknown>\n#19 0x7f47b39fb044 <unknown>","time":{"start":1696282259603,"stop":1696282259645,"duration":42}}]},"tags":["@pytest.mark.xfail","smoke_test"]},"source":"bd0f94710f776c0e.json","parameterValues":["'https://stroyrem-nn.ru/'"]}