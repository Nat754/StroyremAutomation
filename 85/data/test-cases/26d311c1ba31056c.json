{"uid":"26d311c1ba31056c","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"7f4f129a3704d352785ddaeba828a7cd","time":{"start":1696467902767,"stop":1696467905104,"duration":2337},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x557248ae1933 <unknown>\n#1 0x5572487bb6f7 <unknown>\n#2 0x557248808b9d <unknown>\n#3 0x557248806f3d <unknown>\n#4 0x557248804cf8 <unknown>\n#5 0x557248803d67 <unknown>\n#6 0x5572487f8a29 <unknown>\n#7 0x557248824602 <unknown>\n#8 0x5572487f8446 <unknown>\n#9 0x5572488247ce <unknown>\n#10 0x55724883d857 <unknown>\n#11 0x5572488243d3 <unknown>\n#12 0x5572487f6e64 <unknown>\n#13 0x5572487f7c4e <unknown>\n#14 0x557248aa7558 <unknown>\n#15 0x557248aab4a0 <unknown>\n#16 0x557248ab597c <unknown>\n#17 0x557248aac0b8 <unknown>\n#18 0x557248a77cdf <unknown>\n#19 0x557248ad0048 <unknown>\n#20 0x557248ad0219 <unknown>\n#21 0x557248ae0ac3 <unknown>\n#22 0x7fe07ff76044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806850>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe822510>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe822e10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557248ad0219 \\\\u003Cunknown>\\\\n#21 0x557248ae0ac3 \\\\u003Cunknown>\\\\n#22 0x7fe07ff76044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x557248ae1933 <unknown>\nE       #1 0x5572487bb6f7 <unknown>\nE       #2 0x557248808b9d <unknown>\nE       #3 0x557248806f3d <unknown>\nE       #4 0x557248804cf8 <unknown>\nE       #5 0x557248803d67 <unknown>\nE       #6 0x5572487f8a29 <unknown>\nE       #7 0x557248824602 <unknown>\nE       #8 0x5572487f8446 <unknown>\nE       #9 0x5572488247ce <unknown>\nE       #10 0x55724883d857 <unknown>\nE       #11 0x5572488243d3 <unknown>\nE       #12 0x5572487f6e64 <unknown>\nE       #13 0x5572487f7c4e <unknown>\nE       #14 0x557248aa7558 <unknown>\nE       #15 0x557248aab4a0 <unknown>\nE       #16 0x557248ab597c <unknown>\nE       #17 0x557248aac0b8 <unknown>\nE       #18 0x557248a77cdf <unknown>\nE       #19 0x557248ad0048 <unknown>\nE       #20 0x557248ad0219 <unknown>\nE       #21 0x557248ae0ac3 <unknown>\nE       #22 0x7fe07ff76044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696467886465,"stop":1696467887268,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696467887269,"stop":1696467902767,"duration":15498},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467887269,"stop":1696467887269,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x557248ae1933 <unknown>\n#1 0x5572487bb6f7 <unknown>\n#2 0x557248808b9d <unknown>\n#3 0x557248806f3d <unknown>\n#4 0x557248804cf8 <unknown>\n#5 0x557248803d67 <unknown>\n#6 0x5572487f8a29 <unknown>\n#7 0x557248824602 <unknown>\n#8 0x5572487f8446 <unknown>\n#9 0x5572488247ce <unknown>\n#10 0x55724883d857 <unknown>\n#11 0x5572488243d3 <unknown>\n#12 0x5572487f6e64 <unknown>\n#13 0x5572487f7c4e <unknown>\n#14 0x557248aa7558 <unknown>\n#15 0x557248aab4a0 <unknown>\n#16 0x557248ab597c <unknown>\n#17 0x557248aac0b8 <unknown>\n#18 0x557248a77cdf <unknown>\n#19 0x557248ad0048 <unknown>\n#20 0x557248ad0219 <unknown>\n#21 0x557248ae0ac3 <unknown>\n#22 0x7fe07ff76044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806850>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe822510>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fe822e10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557248ad0219 \\\\u003Cunknown>\\\\n#21 0x557248ae0ac3 \\\\u003Cunknown>\\\\n#22 0x7fe07ff76044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x557248ae1933 <unknown>\nE       #1 0x5572487bb6f7 <unknown>\nE       #2 0x557248808b9d <unknown>\nE       #3 0x557248806f3d <unknown>\nE       #4 0x557248804cf8 <unknown>\nE       #5 0x557248803d67 <unknown>\nE       #6 0x5572487f8a29 <unknown>\nE       #7 0x557248824602 <unknown>\nE       #8 0x5572487f8446 <unknown>\nE       #9 0x5572488247ce <unknown>\nE       #10 0x55724883d857 <unknown>\nE       #11 0x5572488243d3 <unknown>\nE       #12 0x5572487f6e64 <unknown>\nE       #13 0x5572487f7c4e <unknown>\nE       #14 0x557248aa7558 <unknown>\nE       #15 0x557248aab4a0 <unknown>\nE       #16 0x557248ab597c <unknown>\nE       #17 0x557248aac0b8 <unknown>\nE       #18 0x557248a77cdf <unknown>\nE       #19 0x557248ad0048 <unknown>\nE       #20 0x557248ad0219 <unknown>\nE       #21 0x557248ae0ac3 <unknown>\nE       #22 0x7fe07ff76044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696467902768,"stop":1696467902808,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696467902874,"stop":1696467902911,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696467903963,"stop":1696467904020,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"c9da1cc84c603f15","name":"Screenshot","source":"c9da1cc84c603f15.png","type":"image/png","size":58752},{"uid":"98ab3283f126d7bd","name":"HTML source","source":"98ab3283f126d7bd.html","type":"text/html","size":895323}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696467905323,"stop":1696467905323,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696467905324,"stop":1696467905391,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":30,"unknown":0,"total":36},"items":[{"uid":"1bb80566d442d78c","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/1bb80566d442d78c","status":"passed","time":{"start":1696381211558,"stop":1696381220032,"duration":8474}},{"uid":"bfe643e4a7c20d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/bfe643e4a7c20d2","status":"passed","time":{"start":1696294764648,"stop":1696294772994,"duration":8346}},{"uid":"d727663b9c6ae02b","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/d727663b9c6ae02b","status":"passed","time":{"start":1696282605120,"stop":1696282615184,"duration":10064}},{"uid":"b5d8a7ceae4c7986","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/b5d8a7ceae4c7986","status":"passed","time":{"start":1696258257718,"stop":1696258266431,"duration":8713}},{"uid":"71d650f0e2b85316","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/71d650f0e2b85316","status":"passed","time":{"start":1696208406202,"stop":1696208413995,"duration":7793}},{"uid":"a5c9419925dc3314","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/a5c9419925dc3314","status":"passed","time":{"start":1696122389470,"stop":1696122396955,"duration":7485}},{"uid":"142f20939703fb1b","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/142f20939703fb1b","status":"passed","time":{"start":1696035376589,"stop":1696035383717,"duration":7128}},{"uid":"6bac3885e38c9085","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/6bac3885e38c9085","status":"passed","time":{"start":1695949105885,"stop":1695949112786,"duration":6901}},{"uid":"3efcf69c784f7c6d","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/3efcf69c784f7c6d","status":"passed","time":{"start":1695862880409,"stop":1695862889186,"duration":8777}},{"uid":"b3875245ad168a8b","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/b3875245ad168a8b","status":"passed","time":{"start":1695776699046,"stop":1695776707518,"duration":8472}},{"uid":"e8cf297dc9aaac10","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/e8cf297dc9aaac10","status":"passed","time":{"start":1695690162244,"stop":1695690170466,"duration":8222}},{"uid":"ac24d94468d1ec60","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/ac24d94468d1ec60","status":"passed","time":{"start":1695603734820,"stop":1695603743183,"duration":8363}},{"uid":"170aa63a9cb02557","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/170aa63a9cb02557","status":"passed","time":{"start":1695517232753,"stop":1695517239903,"duration":7150}},{"uid":"5ab45764481b64f5","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/5ab45764481b64f5","status":"passed","time":{"start":1695430761669,"stop":1695430770415,"duration":8746}},{"uid":"e958c266b7c74007","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/e958c266b7c74007","status":"passed","time":{"start":1695406073759,"stop":1695406082898,"duration":9139}},{"uid":"937abf1ecd2983e0","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/937abf1ecd2983e0","status":"passed","time":{"start":1695344289957,"stop":1695344296950,"duration":6993}},{"uid":"6a7824585242933f","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/6a7824585242933f","status":"passed","time":{"start":1695257869676,"stop":1695257877004,"duration":7328}},{"uid":"8003c791113e85f3","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/8003c791113e85f3","status":"passed","time":{"start":1695171858191,"stop":1695171866742,"duration":8551}},{"uid":"e2a98e33c507c083","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/e2a98e33c507c083","status":"passed","time":{"start":1695085196903,"stop":1695085204844,"duration":7941}},{"uid":"f149423164ecf112","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/f149423164ecf112","status":"passed","time":{"start":1695063714348,"stop":1695063722882,"duration":8534}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"26d311c1ba31056c.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}