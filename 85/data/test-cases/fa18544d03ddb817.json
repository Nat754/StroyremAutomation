{"uid":"fa18544d03ddb817","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"8519a10778cf28e105209a17627cfb4a","time":{"start":1696467917656,"stop":1696467919976,"duration":2320},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5624bfb58933 <unknown>\n#1 0x5624bf8326f7 <unknown>\n#2 0x5624bf87fb9d <unknown>\n#3 0x5624bf87df3d <unknown>\n#4 0x5624bf87bcf8 <unknown>\n#5 0x5624bf87ad67 <unknown>\n#6 0x5624bf86fa29 <unknown>\n#7 0x5624bf89b602 <unknown>\n#8 0x5624bf86f446 <unknown>\n#9 0x5624bf89b7ce <unknown>\n#10 0x5624bf8b4857 <unknown>\n#11 0x5624bf89b3d3 <unknown>\n#12 0x5624bf86de64 <unknown>\n#13 0x5624bf86ec4e <unknown>\n#14 0x5624bfb1e558 <unknown>\n#15 0x5624bfb224a0 <unknown>\n#16 0x5624bfb2c97c <unknown>\n#17 0x5624bfb230b8 <unknown>\n#18 0x5624bfaeecdf <unknown>\n#19 0x5624bfb47048 <unknown>\n#20 0x5624bfb47219 <unknown>\n#21 0x5624bfb57ac3 <unknown>\n#22 0x7f9a9ca06044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806e50>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ff928a10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fff92510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5624bfb47219 \\\\u003Cunknown>\\\\n#21 0x5624bfb57ac3 \\\\u003Cunknown>\\\\n#22 0x7f9a9ca06044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5624bfb58933 <unknown>\nE       #1 0x5624bf8326f7 <unknown>\nE       #2 0x5624bf87fb9d <unknown>\nE       #3 0x5624bf87df3d <unknown>\nE       #4 0x5624bf87bcf8 <unknown>\nE       #5 0x5624bf87ad67 <unknown>\nE       #6 0x5624bf86fa29 <unknown>\nE       #7 0x5624bf89b602 <unknown>\nE       #8 0x5624bf86f446 <unknown>\nE       #9 0x5624bf89b7ce <unknown>\nE       #10 0x5624bf8b4857 <unknown>\nE       #11 0x5624bf89b3d3 <unknown>\nE       #12 0x5624bf86de64 <unknown>\nE       #13 0x5624bf86ec4e <unknown>\nE       #14 0x5624bfb1e558 <unknown>\nE       #15 0x5624bfb224a0 <unknown>\nE       #16 0x5624bfb2c97c <unknown>\nE       #17 0x5624bfb230b8 <unknown>\nE       #18 0x5624bfaeecdf <unknown>\nE       #19 0x5624bfb47048 <unknown>\nE       #20 0x5624bfb47219 <unknown>\nE       #21 0x5624bfb57ac3 <unknown>\nE       #22 0x7f9a9ca06044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696467905393,"stop":1696467906200,"duration":807},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696467906200,"stop":1696467906200,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696467906200,"stop":1696467917655,"duration":11455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5624bfb58933 <unknown>\n#1 0x5624bf8326f7 <unknown>\n#2 0x5624bf87fb9d <unknown>\n#3 0x5624bf87df3d <unknown>\n#4 0x5624bf87bcf8 <unknown>\n#5 0x5624bf87ad67 <unknown>\n#6 0x5624bf86fa29 <unknown>\n#7 0x5624bf89b602 <unknown>\n#8 0x5624bf86f446 <unknown>\n#9 0x5624bf89b7ce <unknown>\n#10 0x5624bf8b4857 <unknown>\n#11 0x5624bf89b3d3 <unknown>\n#12 0x5624bf86de64 <unknown>\n#13 0x5624bf86ec4e <unknown>\n#14 0x5624bfb1e558 <unknown>\n#15 0x5624bfb224a0 <unknown>\n#16 0x5624bfb2c97c <unknown>\n#17 0x5624bfb230b8 <unknown>\n#18 0x5624bfaeecdf <unknown>\n#19 0x5624bfb47048 <unknown>\n#20 0x5624bfb47219 <unknown>\n#21 0x5624bfb57ac3 <unknown>\n#22 0x7f9a9ca06044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f4200806e50>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ff928a10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fff92510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5624bfb47219 \\\\u003Cunknown>\\\\n#21 0x5624bfb57ac3 \\\\u003Cunknown>\\\\n#22 0x7f9a9ca06044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5624bfb58933 <unknown>\nE       #1 0x5624bf8326f7 <unknown>\nE       #2 0x5624bf87fb9d <unknown>\nE       #3 0x5624bf87df3d <unknown>\nE       #4 0x5624bf87bcf8 <unknown>\nE       #5 0x5624bf87ad67 <unknown>\nE       #6 0x5624bf86fa29 <unknown>\nE       #7 0x5624bf89b602 <unknown>\nE       #8 0x5624bf86f446 <unknown>\nE       #9 0x5624bf89b7ce <unknown>\nE       #10 0x5624bf8b4857 <unknown>\nE       #11 0x5624bf89b3d3 <unknown>\nE       #12 0x5624bf86de64 <unknown>\nE       #13 0x5624bf86ec4e <unknown>\nE       #14 0x5624bfb1e558 <unknown>\nE       #15 0x5624bfb224a0 <unknown>\nE       #16 0x5624bfb2c97c <unknown>\nE       #17 0x5624bfb230b8 <unknown>\nE       #18 0x5624bfaeecdf <unknown>\nE       #19 0x5624bfb47048 <unknown>\nE       #20 0x5624bfb47219 <unknown>\nE       #21 0x5624bfb57ac3 <unknown>\nE       #22 0x7f9a9ca06044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696467917656,"stop":1696467917695,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696467917778,"stop":1696467917816,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696467918873,"stop":1696467918926,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"5a1ec15f4098b1e2","name":"Screenshot","source":"5a1ec15f4098b1e2.png","type":"image/png","size":135589},{"uid":"326158ebbac61aa2","name":"HTML source","source":"326158ebbac61aa2.html","type":"text/html","size":869652}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1696467920202,"stop":1696467920268,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1696467920202,"stop":1696467920202,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":82,"unknown":0,"total":86},"items":[{"uid":"fa233c5ddf2d8f77","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/fa233c5ddf2d8f77","status":"passed","time":{"start":1696381228522,"stop":1696381238153,"duration":9631}},{"uid":"d906cc6c00ddf8ac","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/d906cc6c00ddf8ac","status":"passed","time":{"start":1696294780423,"stop":1696294789868,"duration":9445}},{"uid":"c8a29ed186133412","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/c8a29ed186133412","status":"passed","time":{"start":1696282625998,"stop":1696282637036,"duration":11038}},{"uid":"f46eb7ff46397f2b","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/f46eb7ff46397f2b","status":"passed","time":{"start":1696258275618,"stop":1696258284757,"duration":9139}},{"uid":"a6bd9a4060127170","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/a6bd9a4060127170","status":"passed","time":{"start":1696208423032,"stop":1696208431769,"duration":8737}},{"uid":"fcb90cb80162c472","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/fcb90cb80162c472","status":"passed","time":{"start":1696122405848,"stop":1696122414489,"duration":8641}},{"uid":"3676eee43cbaae90","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/3676eee43cbaae90","status":"passed","time":{"start":1696035392541,"stop":1696035400715,"duration":8174}},{"uid":"bbf7017ead626cc8","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/bbf7017ead626cc8","status":"passed","time":{"start":1695949120653,"stop":1695949128860,"duration":8207}},{"uid":"e7370cdc52cd404c","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/e7370cdc52cd404c","status":"passed","time":{"start":1695862900409,"stop":1695862910166,"duration":9757}},{"uid":"ca4d52b8b6bdeb0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/ca4d52b8b6bdeb0d","status":"passed","time":{"start":1695776719208,"stop":1695776729007,"duration":9799}},{"uid":"f024aadc662ec572","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/f024aadc662ec572","status":"passed","time":{"start":1695690185455,"stop":1695690194579,"duration":9124}},{"uid":"3f91d0819eff4e96","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/3f91d0819eff4e96","status":"passed","time":{"start":1695603754673,"stop":1695603764496,"duration":9823}},{"uid":"b1f395070939bb06","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/b1f395070939bb06","status":"passed","time":{"start":1695517248156,"stop":1695517256373,"duration":8217}},{"uid":"d9167f4fe6467977","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/d9167f4fe6467977","status":"passed","time":{"start":1695430781866,"stop":1695430792243,"duration":10377}},{"uid":"9352817b99c54009","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/9352817b99c54009","status":"passed","time":{"start":1695406094670,"stop":1695406104788,"duration":10118}},{"uid":"3595dcc190f6bc26","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/3595dcc190f6bc26","status":"passed","time":{"start":1695344304746,"stop":1695344312938,"duration":8192}},{"uid":"b14b932c7e3ebdd2","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/b14b932c7e3ebdd2","status":"passed","time":{"start":1695257884905,"stop":1695257893035,"duration":8130}},{"uid":"30d9a370a6298900","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/30d9a370a6298900","status":"passed","time":{"start":1695171878989,"stop":1695171888717,"duration":9728}},{"uid":"918c362903a23a84","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/918c362903a23a84","status":"passed","time":{"start":1695085214547,"stop":1695085223079,"duration":8532}},{"uid":"bd54464780184202","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/bd54464780184202","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695063734259,"stop":1695063757535,"duration":23276}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"fa18544d03ddb817.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}