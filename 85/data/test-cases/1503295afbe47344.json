{"uid":"1503295afbe47344","name":"positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke","historyId":"e0d976e55c1c3f57267ef6c33e3c287f","time":{"start":1696468353897,"stop":1696468356272,"duration":2375},"status":"skipped","statusMessage":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5561de6ec933 <unknown>\n#1 0x5561de3c66f7 <unknown>\n#2 0x5561de413b9d <unknown>\n#3 0x5561de411f3d <unknown>\n#4 0x5561de40fcf8 <unknown>\n#5 0x5561de40ed67 <unknown>\n#6 0x5561de403a29 <unknown>\n#7 0x5561de42f602 <unknown>\n#8 0x5561de403446 <unknown>\n#9 0x5561de42f7ce <unknown>\n#10 0x5561de448857 <unknown>\n#11 0x5561de42f3d3 <unknown>\n#12 0x5561de401e64 <unknown>\n#13 0x5561de402c4e <unknown>\n#14 0x5561de6b2558 <unknown>\n#15 0x5561de6b64a0 <unknown>\n#16 0x5561de6c097c <unknown>\n#17 0x5561de6b70b8 <unknown>\n#18 0x5561de682cdf <unknown>\n#19 0x5561de6db048 <unknown>\n#20 0x5561de6db219 <unknown>\n#21 0x5561de6ebac3 <unknown>\n#22 0x7efd5d5b7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082c690>\nlink = 'https://stroyrem-nn.ru/catalog/rastvornye-pistolety-sopla'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7ec6d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{RASTVORNYE_PISTOLETY_SOPLA_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{RASTVORNYE_PISTOLETY_SOPLA_PAGE_URL}\"])\n    @pytest.mark.xfail(reason=\"Ждем уточнение о способе округления скидки и стоимости товара\")\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(5000)\n        product_page_open.get_field_price_last().send_keys(7499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fff8af10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561de6db219 \\\\u003Cunknown>\\\\n#21 0x5561de6ebac3 \\\\u003Cunknown>\\\\n#22 0x7efd5d5b7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5561de6ec933 <unknown>\nE       #1 0x5561de3c66f7 <unknown>\nE       #2 0x5561de413b9d <unknown>\nE       #3 0x5561de411f3d <unknown>\nE       #4 0x5561de40fcf8 <unknown>\nE       #5 0x5561de40ed67 <unknown>\nE       #6 0x5561de403a29 <unknown>\nE       #7 0x5561de42f602 <unknown>\nE       #8 0x5561de403446 <unknown>\nE       #9 0x5561de42f7ce <unknown>\nE       #10 0x5561de448857 <unknown>\nE       #11 0x5561de42f3d3 <unknown>\nE       #12 0x5561de401e64 <unknown>\nE       #13 0x5561de402c4e <unknown>\nE       #14 0x5561de6b2558 <unknown>\nE       #15 0x5561de6b64a0 <unknown>\nE       #16 0x5561de6c097c <unknown>\nE       #17 0x5561de6b70b8 <unknown>\nE       #18 0x5561de682cdf <unknown>\nE       #19 0x5561de6db048 <unknown>\nE       #20 0x5561de6db219 <unknown>\nE       #21 0x5561de6ebac3 <unknown>\nE       #22 0x7efd5d5b7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468341039,"stop":1696468341842,"duration":803},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468341842,"stop":1696468341842,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468341842,"stop":1696468353896,"duration":12054},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nselenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x5561de6ec933 <unknown>\n#1 0x5561de3c66f7 <unknown>\n#2 0x5561de413b9d <unknown>\n#3 0x5561de411f3d <unknown>\n#4 0x5561de40fcf8 <unknown>\n#5 0x5561de40ed67 <unknown>\n#6 0x5561de403a29 <unknown>\n#7 0x5561de42f602 <unknown>\n#8 0x5561de403446 <unknown>\n#9 0x5561de42f7ce <unknown>\n#10 0x5561de448857 <unknown>\n#11 0x5561de42f3d3 <unknown>\n#12 0x5561de401e64 <unknown>\n#13 0x5561de402c4e <unknown>\n#14 0x5561de6b2558 <unknown>\n#15 0x5561de6b64a0 <unknown>\n#16 0x5561de6c097c <unknown>\n#17 0x5561de6b70b8 <unknown>\n#18 0x5561de682cdf <unknown>\n#19 0x5561de6db048 <unknown>\n#20 0x5561de6db219 <unknown>\n#21 0x5561de6ebac3 <unknown>\n#22 0x7efd5d5b7044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420082c690>\nlink = 'https://stroyrem-nn.ru/catalog/rastvornye-pistolety-sopla'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41fe7ec6d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{RASTVORNYE_PISTOLETY_SOPLA_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{RASTVORNYE_PISTOLETY_SOPLA_PAGE_URL}\"])\n    @pytest.mark.xfail(reason=\"Ждем уточнение о способе округления скидки и стоимости товара\")\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_5000_to_7499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(5000)\n        product_page_open.get_field_price_last().send_keys(7499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:323: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f41fff8af10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561de6db219 \\\\u003Cunknown>\\\\n#21 0x5561de6ebac3 \\\\u003Cunknown>\\\\n#22 0x7efd5d5b7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x5561de6ec933 <unknown>\nE       #1 0x5561de3c66f7 <unknown>\nE       #2 0x5561de413b9d <unknown>\nE       #3 0x5561de411f3d <unknown>\nE       #4 0x5561de40fcf8 <unknown>\nE       #5 0x5561de40ed67 <unknown>\nE       #6 0x5561de403a29 <unknown>\nE       #7 0x5561de42f602 <unknown>\nE       #8 0x5561de403446 <unknown>\nE       #9 0x5561de42f7ce <unknown>\nE       #10 0x5561de448857 <unknown>\nE       #11 0x5561de42f3d3 <unknown>\nE       #12 0x5561de401e64 <unknown>\nE       #13 0x5561de402c4e <unknown>\nE       #14 0x5561de6b2558 <unknown>\nE       #15 0x5561de6b64a0 <unknown>\nE       #16 0x5561de6c097c <unknown>\nE       #17 0x5561de6b70b8 <unknown>\nE       #18 0x5561de682cdf <unknown>\nE       #19 0x5561de6db048 <unknown>\nE       #20 0x5561de6db219 <unknown>\nE       #21 0x5561de6ebac3 <unknown>\nE       #22 0x7efd5d5b7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468353897,"stop":1696468353938,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468354035,"stop":1696468354077,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468355132,"stop":1696468355186,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"92ab240592795689","name":"Screenshot","source":"92ab240592795689.png","type":"image/png","size":133450},{"uid":"9526f6a562db536a","name":"HTML source","source":"9526f6a562db536a.html","type":"text/html","size":873029}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468356507,"stop":1696468356507,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468356507,"stop":1696468356573,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='Ждем уточнение о способе округления скидки и стоимости товара')"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/rastvornye-pistolety-sopla'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":69,"passed":0,"unknown":0,"total":69},"items":[{"uid":"7d2cc8dc275698d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/7d2cc8dc275698d0","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696381679342,"stop":1696381690421,"duration":11079}},{"uid":"8aae1215494cf205","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/8aae1215494cf205","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696295211155,"stop":1696295222122,"duration":10967}},{"uid":"8164de373bce8dc","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/8164de373bce8dc","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696283204543,"stop":1696283216685,"duration":12142}},{"uid":"f0ed73eb61eedac4","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/f0ed73eb61eedac4","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696258752413,"stop":1696258762689,"duration":10276}},{"uid":"37c1265cbadfb9d1","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/37c1265cbadfb9d1","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696208849172,"stop":1696208859159,"duration":9987}},{"uid":"a078a618a640eb24","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/a078a618a640eb24","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696122853301,"stop":1696122863355,"duration":10054}},{"uid":"79623f7bd4280385","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/79623f7bd4280385","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1696035796616,"stop":1696035806370,"duration":9754}},{"uid":"44ad0c659f50379f","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/44ad0c659f50379f","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695949520434,"stop":1695949530166,"duration":9732}},{"uid":"6581e6464581aa6e","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/6581e6464581aa6e","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695863443796,"stop":1695863454472,"duration":10676}},{"uid":"b36b2ca532d0df0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/b36b2ca532d0df0d","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695777273133,"stop":1695777284167,"duration":11034}},{"uid":"c411a5d7e8525d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/c411a5d7e8525d0","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695690731268,"stop":1695690741614,"duration":10346}},{"uid":"c008293101b36fe7","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/c008293101b36fe7","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695604288839,"stop":1695604299673,"duration":10834}},{"uid":"6e60dafbaccf07dd","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/6e60dafbaccf07dd","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695517647655,"stop":1695517657348,"duration":9693}},{"uid":"3eafc0bb380a7948","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/3eafc0bb380a7948","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695431361442,"stop":1695431372423,"duration":10981}},{"uid":"3a391d1381178a0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/3a391d1381178a0d","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695406658653,"stop":1695406669584,"duration":10931}},{"uid":"e975dea7479ed65f","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/e975dea7479ed65f","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695344735247,"stop":1695344744767,"duration":9520}},{"uid":"d26619ba885f5a4c","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/d26619ba885f5a4c","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695258319028,"stop":1695258328602,"duration":9574}},{"uid":"ecf07858075dbc5c","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/ecf07858075dbc5c","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695172439657,"stop":1695172450484,"duration":10827}},{"uid":"6db4025126a8a45d","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/6db4025126a8a45d","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695085699887,"stop":1695085709964,"duration":10077}},{"uid":"9965304850946872","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/9965304850946872","status":"skipped","statusDetails":"XFAIL Ждем уточнение о способе округления скидки и стоимости товара\n\nAssertionError: ОР: Скидка за объем = 172.12, ФР: скидка = 172.13\nassert 172.13 == 172.12\n +  where 172.12 = round((6885.0 * 0.025), 2)","time":{"start":1695064286629,"stop":1695064296963,"duration":10334}}]},"tags":["@pytest.mark.xfail(reason='Ждем уточнение о способе округления скидки и стоимости товара')","smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"1503295afbe47344.json","parameterValues":["'https://stroyrem-nn.ru/catalog/rastvornye-pistolety-sopla'"]}