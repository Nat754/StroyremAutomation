{"uid":"b9f78242b5e73301","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"6c6513eb0cdbeb8cfcb6aa8a59b40c6b","time":{"start":1696468338431,"stop":1696468340759,"duration":2328},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55cb2fd14933 <unknown>\n#1 0x55cb2f9ee6f7 <unknown>\n#2 0x55cb2fa3bb9d <unknown>\n#3 0x55cb2fa39f3d <unknown>\n#4 0x55cb2fa37cf8 <unknown>\n#5 0x55cb2fa36d67 <unknown>\n#6 0x55cb2fa2ba29 <unknown>\n#7 0x55cb2fa57602 <unknown>\n#8 0x55cb2fa2b446 <unknown>\n#9 0x55cb2fa577ce <unknown>\n#10 0x55cb2fa70857 <unknown>\n#11 0x55cb2fa573d3 <unknown>\n#12 0x55cb2fa29e64 <unknown>\n#13 0x55cb2fa2ac4e <unknown>\n#14 0x55cb2fcda558 <unknown>\n#15 0x55cb2fcde4a0 <unknown>\n#16 0x55cb2fce897c <unknown>\n#17 0x55cb2fcdf0b8 <unknown>\n#18 0x55cb2fcaacdf <unknown>\n#19 0x55cb2fd03048 <unknown>\n#20 0x55cb2fd03219 <unknown>\n#21 0x55cb2fd13ac3 <unknown>\n#22 0x7fa638fd1044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080e610>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ffdfeb50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4200697510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55cb2fd03219 \\\\u003Cunknown>\\\\n#21 0x55cb2fd13ac3 \\\\u003Cunknown>\\\\n#22 0x7fa638fd1044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55cb2fd14933 <unknown>\nE       #1 0x55cb2f9ee6f7 <unknown>\nE       #2 0x55cb2fa3bb9d <unknown>\nE       #3 0x55cb2fa39f3d <unknown>\nE       #4 0x55cb2fa37cf8 <unknown>\nE       #5 0x55cb2fa36d67 <unknown>\nE       #6 0x55cb2fa2ba29 <unknown>\nE       #7 0x55cb2fa57602 <unknown>\nE       #8 0x55cb2fa2b446 <unknown>\nE       #9 0x55cb2fa577ce <unknown>\nE       #10 0x55cb2fa70857 <unknown>\nE       #11 0x55cb2fa573d3 <unknown>\nE       #12 0x55cb2fa29e64 <unknown>\nE       #13 0x55cb2fa2ac4e <unknown>\nE       #14 0x55cb2fcda558 <unknown>\nE       #15 0x55cb2fcde4a0 <unknown>\nE       #16 0x55cb2fce897c <unknown>\nE       #17 0x55cb2fcdf0b8 <unknown>\nE       #18 0x55cb2fcaacdf <unknown>\nE       #19 0x55cb2fd03048 <unknown>\nE       #20 0x55cb2fd03219 <unknown>\nE       #21 0x55cb2fd13ac3 <unknown>\nE       #22 0x7fa638fd1044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1696466884827,"stop":1696466884906,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1696466884906,"stop":1696466884906,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1696468321554,"stop":1696468322362,"duration":808},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1696468322362,"stop":1696468322362,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1696468322362,"stop":1696468338430,"duration":16068},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.149)\nStacktrace:\n#0 0x55cb2fd14933 <unknown>\n#1 0x55cb2f9ee6f7 <unknown>\n#2 0x55cb2fa3bb9d <unknown>\n#3 0x55cb2fa39f3d <unknown>\n#4 0x55cb2fa37cf8 <unknown>\n#5 0x55cb2fa36d67 <unknown>\n#6 0x55cb2fa2ba29 <unknown>\n#7 0x55cb2fa57602 <unknown>\n#8 0x55cb2fa2b446 <unknown>\n#9 0x55cb2fa577ce <unknown>\n#10 0x55cb2fa70857 <unknown>\n#11 0x55cb2fa573d3 <unknown>\n#12 0x55cb2fa29e64 <unknown>\n#13 0x55cb2fa2ac4e <unknown>\n#14 0x55cb2fcda558 <unknown>\n#15 0x55cb2fcde4a0 <unknown>\n#16 0x55cb2fce897c <unknown>\n#17 0x55cb2fcdf0b8 <unknown>\n#18 0x55cb2fcaacdf <unknown>\n#19 0x55cb2fd03048 <unknown>\n#20 0x55cb2fd03219 <unknown>\n#21 0x55cb2fd13ac3 <unknown>\n#22 0x7fa638fd1044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f420080e610>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f41ffdfeb50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f4200697510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55cb2fd03219 \\\\u003Cunknown>\\\\n#21 0x55cb2fd13ac3 \\\\u003Cunknown>\\\\n#22 0x7fa638fd1044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.149)\nE       Stacktrace:\nE       #0 0x55cb2fd14933 <unknown>\nE       #1 0x55cb2f9ee6f7 <unknown>\nE       #2 0x55cb2fa3bb9d <unknown>\nE       #3 0x55cb2fa39f3d <unknown>\nE       #4 0x55cb2fa37cf8 <unknown>\nE       #5 0x55cb2fa36d67 <unknown>\nE       #6 0x55cb2fa2ba29 <unknown>\nE       #7 0x55cb2fa57602 <unknown>\nE       #8 0x55cb2fa2b446 <unknown>\nE       #9 0x55cb2fa577ce <unknown>\nE       #10 0x55cb2fa70857 <unknown>\nE       #11 0x55cb2fa573d3 <unknown>\nE       #12 0x55cb2fa29e64 <unknown>\nE       #13 0x55cb2fa2ac4e <unknown>\nE       #14 0x55cb2fcda558 <unknown>\nE       #15 0x55cb2fcde4a0 <unknown>\nE       #16 0x55cb2fce897c <unknown>\nE       #17 0x55cb2fcdf0b8 <unknown>\nE       #18 0x55cb2fcaacdf <unknown>\nE       #19 0x55cb2fd03048 <unknown>\nE       #20 0x55cb2fd03219 <unknown>\nE       #21 0x55cb2fd13ac3 <unknown>\nE       #22 0x7fa638fd1044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1696468338431,"stop":1696468338473,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1696468338533,"stop":1696468338575,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1696468339623,"stop":1696468339676,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"3d860262c880b1e0","name":"Screenshot","source":"3d860262c880b1e0.png","type":"image/png","size":79209},{"uid":"80874f2a039ae60","name":"HTML source","source":"80874f2a039ae60.html","type":"text/html","size":641392}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1696468340969,"stop":1696468340970,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1696468340970,"stop":1696468341038,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1b29e55ed669"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":47,"unknown":0,"total":69},"items":[{"uid":"be341b1b11b12a84","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/be341b1b11b12a84","status":"passed","time":{"start":1696381659133,"stop":1696381669910,"duration":10777}},{"uid":"a2d63545e9c0e2b5","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/a2d63545e9c0e2b5","status":"passed","time":{"start":1696295192042,"stop":1696295202839,"duration":10797}},{"uid":"fa3e7c5eb849ce36","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/fa3e7c5eb849ce36","status":"passed","time":{"start":1696283180597,"stop":1696283192643,"duration":12046}},{"uid":"d07f115769eaa18e","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/d07f115769eaa18e","status":"passed","time":{"start":1696258731615,"stop":1696258741983,"duration":10368}},{"uid":"d755228178d31948","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/d755228178d31948","status":"passed","time":{"start":1696208830440,"stop":1696208840279,"duration":9839}},{"uid":"332d3fd9c691b4d8","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/332d3fd9c691b4d8","status":"passed","time":{"start":1696122833760,"stop":1696122843605,"duration":9845}},{"uid":"c4860b9dae2d8159","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/c4860b9dae2d8159","status":"passed","time":{"start":1696035778645,"stop":1696035787976,"duration":9331}},{"uid":"504ec97de3f290e4","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/504ec97de3f290e4","status":"passed","time":{"start":1695949502332,"stop":1695949511779,"duration":9447}},{"uid":"9eb6476ba8a97436","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/9eb6476ba8a97436","status":"passed","time":{"start":1695863421144,"stop":1695863431859,"duration":10715}},{"uid":"e1be8e8553119619","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/e1be8e8553119619","status":"passed","time":{"start":1695777249980,"stop":1695777260829,"duration":10849}},{"uid":"c8c5c6db463ede14","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/c8c5c6db463ede14","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x56521f6016b3 <unknown>\n#1 0x56521f2d71e7 <unknown>\n#2 0x56521f32465d <unknown>\n#3 0x56521f3229fd <unknown>\n#4 0x56521f3207b8 <unknown>\n#5 0x56521f31f827 <unknown>\n#6 0x56521f3144f9 <unknown>\n#7 0x56521f3400c2 <unknown>\n#8 0x56521f313f16 <unknown>\n#9 0x56521f34028e <unknown>\n#10 0x56521f359322 <unknown>\n#11 0x56521f33fe93 <unknown>\n#12 0x56521f312934 <unknown>\n#13 0x56521f31371e <unknown>\n#14 0x56521f5c6cb8 <unknown>\n#15 0x56521f5cabf0 <unknown>\n#16 0x56521f5d519c <unknown>\n#17 0x56521f5cb808 <unknown>\n#18 0x56521f59827f <unknown>\n#19 0x56521f5efe88 <unknown>\n#20 0x56521f5f0059 <unknown>\n#21 0x56521f600843 <unknown>\n#22 0x7f4e8b17c044 <unknown>","time":{"start":1695690717773,"stop":1695690720114,"duration":2341}},{"uid":"e557381d9370e858","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/e557381d9370e858","status":"passed","time":{"start":1695604265769,"stop":1695604276433,"duration":10664}},{"uid":"59db7436e3c1d93f","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/59db7436e3c1d93f","status":"passed","time":{"start":1695517629941,"stop":1695517639402,"duration":9461}},{"uid":"aafd0a739c26e728","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/aafd0a739c26e728","status":"passed","time":{"start":1695431337200,"stop":1695431348437,"duration":11237}},{"uid":"9ebbcd7e25305bbb","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/9ebbcd7e25305bbb","status":"passed","time":{"start":1695406635043,"stop":1695406646108,"duration":11065}},{"uid":"1d2362a1a48756f5","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/1d2362a1a48756f5","status":"passed","time":{"start":1695344717081,"stop":1695344726610,"duration":9529}},{"uid":"3a061778c848efd8","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/3a061778c848efd8","status":"passed","time":{"start":1695258301071,"stop":1695258310557,"duration":9486}},{"uid":"c0a0f3ae6e4028d8","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/c0a0f3ae6e4028d8","status":"passed","time":{"start":1695172416810,"stop":1695172427614,"duration":10804}},{"uid":"a42c798b7f96f9e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/a42c798b7f96f9e1","status":"passed","time":{"start":1695085678533,"stop":1695085688448,"duration":9915}},{"uid":"4d0ec0ed8c4cf843","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/4d0ec0ed8c4cf843","status":"passed","time":{"start":1695064265840,"stop":1695064276181,"duration":10341}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"b9f78242b5e73301.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}