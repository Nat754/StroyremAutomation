{"uid":"82e1508651c7d302","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"56dc95032881057b0b8ffab5dc914f14","time":{"start":1716081140560,"stop":1716081142802,"duration":2242},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5595ff000eca <unknown>\n#1 0x5595fecea45c <unknown>\n#2 0x5595fed3d336 <unknown>\n#3 0x5595fed3b176 <unknown>\n#4 0x5595fed38b57 <unknown>\n#5 0x5595fed3797c <unknown>\n#6 0x5595fed2b0ff <unknown>\n#7 0x5595fed594b2 <unknown>\n#8 0x5595fed2aa79 <unknown>\n#9 0x5595fed5967e <unknown>\n#10 0x5595fed782cc <unknown>\n#11 0x5595fed59253 <unknown>\n#12 0x5595fed291c7 <unknown>\n#13 0x5595fed29b3e <unknown>\n#14 0x5595fefc730b <unknown>\n#15 0x5595fefcb3b7 <unknown>\n#16 0x5595fefb3e3e <unknown>\n#17 0x5595fefcbe82 <unknown>\n#18 0x5595fef987df <unknown>\n#19 0x5595feff01b8 <unknown>\n#20 0x5595feff038b <unknown>\n#21 0x5595fefffffc <unknown>\n#22 0x7fe163e37134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f12e7dc6590>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f12e822a490>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f12e77ae0d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5595feff038b \\\\u003Cunknown>\\\\n#21 0x5595fefffffc \\\\u003Cunknown>\\\\n#22 0x7fe163e37134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x5595ff000eca <unknown>\nE       #1 0x5595fecea45c <unknown>\nE       #2 0x5595fed3d336 <unknown>\nE       #3 0x5595fed3b176 <unknown>\nE       #4 0x5595fed38b57 <unknown>\nE       #5 0x5595fed3797c <unknown>\nE       #6 0x5595fed2b0ff <unknown>\nE       #7 0x5595fed594b2 <unknown>\nE       #8 0x5595fed2aa79 <unknown>\nE       #9 0x5595fed5967e <unknown>\nE       #10 0x5595fed782cc <unknown>\nE       #11 0x5595fed59253 <unknown>\nE       #12 0x5595fed291c7 <unknown>\nE       #13 0x5595fed29b3e <unknown>\nE       #14 0x5595fefc730b <unknown>\nE       #15 0x5595fefcb3b7 <unknown>\nE       #16 0x5595fefb3e3e <unknown>\nE       #17 0x5595fefcbe82 <unknown>\nE       #18 0x5595fef987df <unknown>\nE       #19 0x5595feff01b8 <unknown>\nE       #20 0x5595feff038b <unknown>\nE       #21 0x5595fefffffc <unknown>\nE       #22 0x7fe163e37134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1716080152510,"stop":1716080152577,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1716080152577,"stop":1716080152577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1716081129915,"stop":1716081130602,"duration":687},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1716081130602,"stop":1716081130603,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1716081130603,"stop":1716081140560,"duration":9957},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x5595ff000eca <unknown>\n#1 0x5595fecea45c <unknown>\n#2 0x5595fed3d336 <unknown>\n#3 0x5595fed3b176 <unknown>\n#4 0x5595fed38b57 <unknown>\n#5 0x5595fed3797c <unknown>\n#6 0x5595fed2b0ff <unknown>\n#7 0x5595fed594b2 <unknown>\n#8 0x5595fed2aa79 <unknown>\n#9 0x5595fed5967e <unknown>\n#10 0x5595fed782cc <unknown>\n#11 0x5595fed59253 <unknown>\n#12 0x5595fed291c7 <unknown>\n#13 0x5595fed29b3e <unknown>\n#14 0x5595fefc730b <unknown>\n#15 0x5595fefcb3b7 <unknown>\n#16 0x5595fefb3e3e <unknown>\n#17 0x5595fefcbe82 <unknown>\n#18 0x5595fef987df <unknown>\n#19 0x5595feff01b8 <unknown>\n#20 0x5595feff038b <unknown>\n#21 0x5595fefffffc <unknown>\n#22 0x7fe163e37134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f12e7dc6590>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f12e822a490>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f12e77ae0d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5595feff038b \\\\u003Cunknown>\\\\n#21 0x5595fefffffc \\\\u003Cunknown>\\\\n#22 0x7fe163e37134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x5595ff000eca <unknown>\nE       #1 0x5595fecea45c <unknown>\nE       #2 0x5595fed3d336 <unknown>\nE       #3 0x5595fed3b176 <unknown>\nE       #4 0x5595fed38b57 <unknown>\nE       #5 0x5595fed3797c <unknown>\nE       #6 0x5595fed2b0ff <unknown>\nE       #7 0x5595fed594b2 <unknown>\nE       #8 0x5595fed2aa79 <unknown>\nE       #9 0x5595fed5967e <unknown>\nE       #10 0x5595fed782cc <unknown>\nE       #11 0x5595fed59253 <unknown>\nE       #12 0x5595fed291c7 <unknown>\nE       #13 0x5595fed29b3e <unknown>\nE       #14 0x5595fefc730b <unknown>\nE       #15 0x5595fefcb3b7 <unknown>\nE       #16 0x5595fefb3e3e <unknown>\nE       #17 0x5595fefcbe82 <unknown>\nE       #18 0x5595fef987df <unknown>\nE       #19 0x5595feff01b8 <unknown>\nE       #20 0x5595feff038b <unknown>\nE       #21 0x5595fefffffc <unknown>\nE       #22 0x7fe163e37134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1716081140560,"stop":1716081140616,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1716081141679,"stop":1716081141720,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"4063f3f42ec723b7","name":"Screenshot","source":"4063f3f42ec723b7.png","type":"image/png","size":182660},{"uid":"da7bb5ff8d0976c4","name":"HTML source","source":"da7bb5ff8d0976c4.html","type":"text/html","size":850559}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1716081142986,"stop":1716081143062,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1716081142986,"stop":1716081142986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"3ceb2c0e7944"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":274,"unknown":0,"total":280},"items":[{"uid":"a71499370a02fce0","reportUrl":"https://Nat754.github.io/StroyremAutomation/311//#testresult/a71499370a02fce0","status":"passed","time":{"start":1715994649217,"stop":1715994664583,"duration":15366}},{"uid":"2abb884dff958050","reportUrl":"https://Nat754.github.io/StroyremAutomation/310//#testresult/2abb884dff958050","status":"passed","time":{"start":1715908088264,"stop":1715908102600,"duration":14336}},{"uid":"e0e1d120d1a0c35f","reportUrl":"https://Nat754.github.io/StroyremAutomation/309//#testresult/e0e1d120d1a0c35f","status":"passed","time":{"start":1715821890448,"stop":1715821904876,"duration":14428}},{"uid":"ba4ab1d54a43f43b","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/ba4ab1d54a43f43b","status":"passed","time":{"start":1715735284896,"stop":1715735298403,"duration":13507}},{"uid":"f1e8e36ded9944a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/f1e8e36ded9944a1","status":"passed","time":{"start":1715648865168,"stop":1715648877340,"duration":12172}},{"uid":"651c58ff867fa143","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/651c58ff867fa143","status":"passed","time":{"start":1715562753499,"stop":1715562766293,"duration":12794}},{"uid":"8397695706e83ccf","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/8397695706e83ccf","status":"passed","time":{"start":1715476189359,"stop":1715476200739,"duration":11380}},{"uid":"f2a9ec09346027","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/f2a9ec09346027","status":"passed","time":{"start":1715389484496,"stop":1715389495422,"duration":10926}},{"uid":"9908daa4ab7342d7","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/9908daa4ab7342d7","status":"passed","time":{"start":1715303413466,"stop":1715303425892,"duration":12426}},{"uid":"c24787a4f57112c","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/c24787a4f57112c","status":"passed","time":{"start":1715216721609,"stop":1715216732788,"duration":11179}},{"uid":"cbfaa9cbeee442d1","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/cbfaa9cbeee442d1","status":"passed","time":{"start":1715130022399,"stop":1715130034811,"duration":12412}},{"uid":"1b0afcc3784235f2","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/1b0afcc3784235f2","status":"passed","time":{"start":1715043904030,"stop":1715043915179,"duration":11149}},{"uid":"3464c01acf8918a","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/3464c01acf8918a","status":"passed","time":{"start":1714957562510,"stop":1714957573521,"duration":11011}},{"uid":"28acfe90ef99312f","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/28acfe90ef99312f","status":"passed","time":{"start":1714871301188,"stop":1714871312498,"duration":11310}},{"uid":"dc56fe569b6573e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/dc56fe569b6573e1","status":"passed","time":{"start":1714784694740,"stop":1714784706196,"duration":11456}},{"uid":"2287564a1fa9747a","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/2287564a1fa9747a","status":"passed","time":{"start":1714698549015,"stop":1714698560279,"duration":11264}},{"uid":"c7a1ff745ffeb109","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/c7a1ff745ffeb109","status":"passed","time":{"start":1714611842177,"stop":1714611853422,"duration":11245}},{"uid":"a0decebb5743a722","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/a0decebb5743a722","status":"passed","time":{"start":1714525700385,"stop":1714525711249,"duration":10864}},{"uid":"670d0450116ce073","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/670d0450116ce073","status":"passed","time":{"start":1714439065991,"stop":1714439076750,"duration":10759}},{"uid":"8e5a9d00c916548c","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/8e5a9d00c916548c","status":"passed","time":{"start":1714352752966,"stop":1714352764217,"duration":11251}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"82e1508651c7d302.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}