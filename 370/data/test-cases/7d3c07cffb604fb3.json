{"uid":"7d3c07cffb604fb3","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"f06b2cbff298092fba61eca6271d3112","time":{"start":1721092403517,"stop":1721092407324,"duration":3807},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562fd8882c7a <unknown>\n#1 0x562fd8565e2c <unknown>\n#2 0x562fd856b539 <unknown>\n#3 0x562fd856d2e5 <unknown>\n#4 0x562fd856d36c <unknown>\n#5 0x562fd85b931c <unknown>\n#6 0x562fd85b7246 <unknown>\n#7 0x562fd85b4c27 <unknown>\n#8 0x562fd85b3a60 <unknown>\n#9 0x562fd85a715f <unknown>\n#10 0x562fd85d55c2 <unknown>\n#11 0x562fd85a6ad9 <unknown>\n#12 0x562fd85d578e <unknown>\n#13 0x562fd85f4303 <unknown>\n#14 0x562fd85d5363 <unknown>\n#15 0x562fd85a5247 <unknown>\n#16 0x562fd85a5b9e <unknown>\n#17 0x562fd884924b <unknown>\n#18 0x562fd884d2f1 <unknown>\n#19 0x562fd8834afe <unknown>\n#20 0x562fd884de52 <unknown>\n#21 0x562fd881979f <unknown>\n#22 0x562fd8872638 <unknown>\n#23 0x562fd8872810 <unknown>\n#24 0x562fd8881dac <unknown>\n#25 0x7f4c79fff134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7feee1337090>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7feee1938b10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7feee1938190>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x562fd8872810 \\\\u003Cunknown>\\\\n#24 0x562fd8881dac \\\\u003Cunknown>\\\\n#25 0x7f4c79fff134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x562fd8882c7a <unknown>\nE       #1 0x562fd8565e2c <unknown>\nE       #2 0x562fd856b539 <unknown>\nE       #3 0x562fd856d2e5 <unknown>\nE       #4 0x562fd856d36c <unknown>\nE       #5 0x562fd85b931c <unknown>\nE       #6 0x562fd85b7246 <unknown>\nE       #7 0x562fd85b4c27 <unknown>\nE       #8 0x562fd85b3a60 <unknown>\nE       #9 0x562fd85a715f <unknown>\nE       #10 0x562fd85d55c2 <unknown>\nE       #11 0x562fd85a6ad9 <unknown>\nE       #12 0x562fd85d578e <unknown>\nE       #13 0x562fd85f4303 <unknown>\nE       #14 0x562fd85d5363 <unknown>\nE       #15 0x562fd85a5247 <unknown>\nE       #16 0x562fd85a5b9e <unknown>\nE       #17 0x562fd884924b <unknown>\nE       #18 0x562fd884d2f1 <unknown>\nE       #19 0x562fd8834afe <unknown>\nE       #20 0x562fd884de52 <unknown>\nE       #21 0x562fd881979f <unknown>\nE       #22 0x562fd8872638 <unknown>\nE       #23 0x562fd8872810 <unknown>\nE       #24 0x562fd8881dac <unknown>\nE       #25 0x7f4c79fff134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1721091410493,"stop":1721091410560,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1721091410560,"stop":1721091410560,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1721092386117,"stop":1721092386855,"duration":738},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1721092386855,"stop":1721092386855,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1721092386855,"stop":1721092403516,"duration":16661},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x562fd8882c7a <unknown>\n#1 0x562fd8565e2c <unknown>\n#2 0x562fd856b539 <unknown>\n#3 0x562fd856d2e5 <unknown>\n#4 0x562fd856d36c <unknown>\n#5 0x562fd85b931c <unknown>\n#6 0x562fd85b7246 <unknown>\n#7 0x562fd85b4c27 <unknown>\n#8 0x562fd85b3a60 <unknown>\n#9 0x562fd85a715f <unknown>\n#10 0x562fd85d55c2 <unknown>\n#11 0x562fd85a6ad9 <unknown>\n#12 0x562fd85d578e <unknown>\n#13 0x562fd85f4303 <unknown>\n#14 0x562fd85d5363 <unknown>\n#15 0x562fd85a5247 <unknown>\n#16 0x562fd85a5b9e <unknown>\n#17 0x562fd884924b <unknown>\n#18 0x562fd884d2f1 <unknown>\n#19 0x562fd8834afe <unknown>\n#20 0x562fd884de52 <unknown>\n#21 0x562fd881979f <unknown>\n#22 0x562fd8872638 <unknown>\n#23 0x562fd8872810 <unknown>\n#24 0x562fd8881dac <unknown>\n#25 0x7f4c79fff134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7feee1337090>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7feee1938b10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7feee1938190>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x562fd8872810 \\\\u003Cunknown>\\\\n#24 0x562fd8881dac \\\\u003Cunknown>\\\\n#25 0x7f4c79fff134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x562fd8882c7a <unknown>\nE       #1 0x562fd8565e2c <unknown>\nE       #2 0x562fd856b539 <unknown>\nE       #3 0x562fd856d2e5 <unknown>\nE       #4 0x562fd856d36c <unknown>\nE       #5 0x562fd85b931c <unknown>\nE       #6 0x562fd85b7246 <unknown>\nE       #7 0x562fd85b4c27 <unknown>\nE       #8 0x562fd85b3a60 <unknown>\nE       #9 0x562fd85a715f <unknown>\nE       #10 0x562fd85d55c2 <unknown>\nE       #11 0x562fd85a6ad9 <unknown>\nE       #12 0x562fd85d578e <unknown>\nE       #13 0x562fd85f4303 <unknown>\nE       #14 0x562fd85d5363 <unknown>\nE       #15 0x562fd85a5247 <unknown>\nE       #16 0x562fd85a5b9e <unknown>\nE       #17 0x562fd884924b <unknown>\nE       #18 0x562fd884d2f1 <unknown>\nE       #19 0x562fd8834afe <unknown>\nE       #20 0x562fd884de52 <unknown>\nE       #21 0x562fd881979f <unknown>\nE       #22 0x562fd8872638 <unknown>\nE       #23 0x562fd8872810 <unknown>\nE       #24 0x562fd8881dac <unknown>\nE       #25 0x7f4c79fff134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1721092403517,"stop":1721092403551,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1721092403600,"stop":1721092403634,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1721092404669,"stop":1721092404711,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1721092407082,"stop":1721092407152,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8d3d01aad252e0bb","name":"Screenshot","source":"8d3d01aad252e0bb.png","type":"image/png","size":59600},{"uid":"e4ce50fd038bf1cf","name":"HTML source","source":"e4ce50fd038bf1cf.html","type":"text/html","size":796494}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1721092407510,"stop":1721092407510,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1721092407511,"stop":1721092407588,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"621744e410d6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":44,"unknown":0,"total":48},"items":[{"uid":"e29b744b815cc2bd","reportUrl":"https://Nat754.github.io/StroyremAutomation/369//#testresult/e29b744b815cc2bd","status":"passed","time":{"start":1721006135807,"stop":1721006144763,"duration":8956}},{"uid":"e93c090d700076b","reportUrl":"https://Nat754.github.io/StroyremAutomation/368//#testresult/e93c090d700076b","status":"passed","time":{"start":1720919693177,"stop":1720919701290,"duration":8113}},{"uid":"15bc3e5755c0bcab","reportUrl":"https://Nat754.github.io/StroyremAutomation/367//#testresult/15bc3e5755c0bcab","status":"passed","time":{"start":1720832997182,"stop":1720833006589,"duration":9407}},{"uid":"eced214373835ee2","reportUrl":"https://Nat754.github.io/StroyremAutomation/366//#testresult/eced214373835ee2","status":"passed","time":{"start":1720746795326,"stop":1720746805122,"duration":9796}},{"uid":"459545ad0d2e3fe7","reportUrl":"https://Nat754.github.io/StroyremAutomation/365//#testresult/459545ad0d2e3fe7","status":"passed","time":{"start":1720660300130,"stop":1720660308847,"duration":8717}},{"uid":"497da858d5ce764e","reportUrl":"https://Nat754.github.io/StroyremAutomation/364//#testresult/497da858d5ce764e","status":"passed","time":{"start":1720573894292,"stop":1720573902739,"duration":8447}},{"uid":"b60b124c58d9178","reportUrl":"https://Nat754.github.io/StroyremAutomation/363//#testresult/b60b124c58d9178","status":"passed","time":{"start":1720487556113,"stop":1720487565672,"duration":9559}},{"uid":"e8b20dd006567229","reportUrl":"https://Nat754.github.io/StroyremAutomation/362//#testresult/e8b20dd006567229","status":"passed","time":{"start":1720401057609,"stop":1720401066823,"duration":9214}},{"uid":"bb74d85ed24b1f5f","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/bb74d85ed24b1f5f","status":"passed","time":{"start":1720314808039,"stop":1720314816151,"duration":8112}},{"uid":"4e9c8fbed024131d","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/4e9c8fbed024131d","status":"passed","time":{"start":1720228104660,"stop":1720228114106,"duration":9446}},{"uid":"e2edadbc6c3bdbf1","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/e2edadbc6c3bdbf1","status":"passed","time":{"start":1720141724339,"stop":1720141732660,"duration":8321}},{"uid":"e9b20d3ccf523c71","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/e9b20d3ccf523c71","status":"passed","time":{"start":1720055392985,"stop":1720055401494,"duration":8509}},{"uid":"86ff17d5021c2f5c","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/86ff17d5021c2f5c","status":"passed","time":{"start":1719969029726,"stop":1719969038467,"duration":8741}},{"uid":"7064c2101a140c74","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/7064c2101a140c74","status":"passed","time":{"start":1719882622203,"stop":1719882631603,"duration":9400}},{"uid":"aaf096b7f553ed47","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/aaf096b7f553ed47","status":"passed","time":{"start":1719796474722,"stop":1719796482439,"duration":7717}},{"uid":"8b36646c2afe53d6","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/8b36646c2afe53d6","status":"passed","time":{"start":1719709992833,"stop":1719710001301,"duration":8468}},{"uid":"47b596aa1dbb96bf","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/47b596aa1dbb96bf","status":"passed","time":{"start":1719623274455,"stop":1719623282475,"duration":8020}},{"uid":"ea75eec80c88f30a","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/ea75eec80c88f30a","status":"passed","time":{"start":1719537125434,"stop":1719537134441,"duration":9007}},{"uid":"ac928eee6d13bc59","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/ac928eee6d13bc59","status":"passed","time":{"start":1719450573742,"stop":1719450581941,"duration":8199}},{"uid":"c2735907da52a8b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/c2735907da52a8b1","status":"passed","time":{"start":1719364139771,"stop":1719364147994,"duration":8223}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"7d3c07cffb604fb3.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"]}