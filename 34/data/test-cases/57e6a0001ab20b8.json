{"uid":"57e6a0001ab20b8","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"e70d08884877bbd8c1896610e4ab110a","time":{"start":1692723642006,"stop":1692723642044,"duration":38},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x564c42f79e23 <unknown>\n#1 0x564c42ca25f6 <unknown>\n#2 0x564c42ce21c2 <unknown>\n#3 0x564c42cd7599 <unknown>\n#4 0x564c42d02012 <unknown>\n#5 0x564c42cd6fb6 <unknown>\n#6 0x564c42d021de <unknown>\n#7 0x564c42d1a369 <unknown>\n#8 0x564c42d01de3 <unknown>\n#9 0x564c42cd5a7b <unknown>\n#10 0x564c42cd681e <unknown>\n#11 0x564c42f3b638 <unknown>\n#12 0x564c42f3f507 <unknown>\n#13 0x564c42f49c4c <unknown>\n#14 0x564c42f40136 <unknown>\n#15 0x564c42f0e9cf <unknown>\n#16 0x564c42f63b98 <unknown>\n#17 0x564c42f63d68 <unknown>\n#18 0x564c42f72cb3 <unknown>\n#19 0x7f549d45b044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7ff8f0948590>\nmain_page = <pages.main_page.MainPage object at 0x7ff8f098e310>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff8f07de210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x564c42f63d68 \\\\u003Cunknown>\\\\n#18 0x564c42f72cb3 \\\\u003Cunknown>\\\\n#19 0x7f549d45b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x564c42f79e23 <unknown>\nE       #1 0x564c42ca25f6 <unknown>\nE       #2 0x564c42ce21c2 <unknown>\nE       #3 0x564c42cd7599 <unknown>\nE       #4 0x564c42d02012 <unknown>\nE       #5 0x564c42cd6fb6 <unknown>\nE       #6 0x564c42d021de <unknown>\nE       #7 0x564c42d1a369 <unknown>\nE       #8 0x564c42d01de3 <unknown>\nE       #9 0x564c42cd5a7b <unknown>\nE       #10 0x564c42cd681e <unknown>\nE       #11 0x564c42f3b638 <unknown>\nE       #12 0x564c42f3f507 <unknown>\nE       #13 0x564c42f49c4c <unknown>\nE       #14 0x564c42f40136 <unknown>\nE       #15 0x564c42f0e9cf <unknown>\nE       #16 0x564c42f63b98 <unknown>\nE       #17 0x564c42f63d68 <unknown>\nE       #18 0x564c42f72cb3 <unknown>\nE       #19 0x7f549d45b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":true,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692723522510,"stop":1692723522577,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1692723522578,"stop":1692723522578,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1692723634521,"stop":1692723635281,"duration":760},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"main_page","time":{"start":1692723635281,"stop":1692723642005,"duration":6724},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1692723635281,"stop":1692723635281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x564c42f79e23 <unknown>\n#1 0x564c42ca25f6 <unknown>\n#2 0x564c42ce21c2 <unknown>\n#3 0x564c42cd7599 <unknown>\n#4 0x564c42d02012 <unknown>\n#5 0x564c42cd6fb6 <unknown>\n#6 0x564c42d021de <unknown>\n#7 0x564c42d1a369 <unknown>\n#8 0x564c42d01de3 <unknown>\n#9 0x564c42cd5a7b <unknown>\n#10 0x564c42cd681e <unknown>\n#11 0x564c42f3b638 <unknown>\n#12 0x564c42f3f507 <unknown>\n#13 0x564c42f49c4c <unknown>\n#14 0x564c42f40136 <unknown>\n#15 0x564c42f0e9cf <unknown>\n#16 0x564c42f63b98 <unknown>\n#17 0x564c42f63d68 <unknown>\n#18 0x564c42f72cb3 <unknown>\n#19 0x7f549d45b044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7ff8f0948590>\nmain_page = <pages.main_page.MainPage object at 0x7ff8f098e310>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff8f07de210>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x564c42f63d68 \\\\u003Cunknown>\\\\n#18 0x564c42f72cb3 \\\\u003Cunknown>\\\\n#19 0x7f549d45b044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x564c42f79e23 <unknown>\nE       #1 0x564c42ca25f6 <unknown>\nE       #2 0x564c42ce21c2 <unknown>\nE       #3 0x564c42cd7599 <unknown>\nE       #4 0x564c42d02012 <unknown>\nE       #5 0x564c42cd6fb6 <unknown>\nE       #6 0x564c42d021de <unknown>\nE       #7 0x564c42d1a369 <unknown>\nE       #8 0x564c42d01de3 <unknown>\nE       #9 0x564c42cd5a7b <unknown>\nE       #10 0x564c42cd681e <unknown>\nE       #11 0x564c42f3b638 <unknown>\nE       #12 0x564c42f3f507 <unknown>\nE       #13 0x564c42f49c4c <unknown>\nE       #14 0x564c42f40136 <unknown>\nE       #15 0x564c42f0e9cf <unknown>\nE       #16 0x564c42f63b98 <unknown>\nE       #17 0x564c42f63d68 <unknown>\nE       #18 0x564c42f72cb3 <unknown>\nE       #19 0x7f549d45b044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Обратный звонок'","time":{"start":1692723642006,"stop":1692723642042,"duration":36},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x564c42f79e23 <unknown>\n#1 0x564c42ca25f6 <unknown>\n#2 0x564c42ce21c2 <unknown>\n#3 0x564c42cd7599 <unknown>\n#4 0x564c42d02012 <unknown>\n#5 0x564c42cd6fb6 <unknown>\n#6 0x564c42d021de <unknown>\n#7 0x564c42d1a369 <unknown>\n#8 0x564c42d01de3 <unknown>\n#9 0x564c42cd5a7b <unknown>\n#10 0x564c42cd681e <unknown>\n#11 0x564c42f3b638 <unknown>\n#12 0x564c42f3f507 <unknown>\n#13 0x564c42f49c4c <unknown>\n#14 0x564c42f40136 <unknown>\n#15 0x564c42f0e9cf <unknown>\n#16 0x564c42f63b98 <unknown>\n#17 0x564c42f63d68 <unknown>\n#18 0x564c42f72cb3 <unknown>\n#19 0x7f549d45b044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 103, in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"4f1a883b3fbd3aad","name":"Screenshot","source":"4f1a883b3fbd3aad.png","type":"image/png","size":169743},{"uid":"fdc89fade0ee135a","name":"HTML source","source":"fdc89fade0ee135a.html","type":"text/html","size":375470}],"parameters":[],"stepsCount":1,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1692723642274,"stop":1692723642338,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup::0","time":{"start":1692723642274,"stop":1692723642274,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"feature","value":"Footer functionality"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"c9ee045b5178"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://test2.stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":25,"unknown":0,"total":27},"items":[{"uid":"b105f8dbf9a6c783","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/b105f8dbf9a6c783","status":"passed","time":{"start":1692720762314,"stop":1692720762433,"duration":119}},{"uid":"1a4770cf54df0c6f","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/1a4770cf54df0c6f","status":"failed","statusDetails":"AssertionError: Ожидалось 'Заказать обратный звонок', но получено ''\nassert '' == 'Заказать обратный звонок'\n  - Заказать обратный звонок","time":{"start":1692717766093,"stop":1692717766218,"duration":125}},{"uid":"2859630ab8ab7955","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/2859630ab8ab7955","status":"passed","time":{"start":1692665273707,"stop":1692665273813,"duration":106}},{"uid":"4bbedea5e25ae8b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/33//#testresult/4bbedea5e25ae8b1","status":"passed","time":{"start":1692578864356,"stop":1692578864495,"duration":139}},{"uid":"c91a4cbeb94e022f","reportUrl":"https://Nat754.github.io/StroyremAutomation/31//#testresult/c91a4cbeb94e022f","status":"passed","time":{"start":1692567121186,"stop":1692567121319,"duration":133}},{"uid":"6d5c3ac732d2bd8","reportUrl":"https://Nat754.github.io/StroyremAutomation/32//#testresult/6d5c3ac732d2bd8","status":"passed","time":{"start":1692565350369,"stop":1692565350487,"duration":118}},{"uid":"b8ad31145897a687","reportUrl":"https://Nat754.github.io/StroyremAutomation/27//#testresult/b8ad31145897a687","status":"passed","time":{"start":1692060489536,"stop":1692060489683,"duration":147}},{"uid":"c993a440494ee41b","reportUrl":"https://Nat754.github.io/StroyremAutomation/26//#testresult/c993a440494ee41b","status":"passed","time":{"start":1691974108393,"stop":1691974108601,"duration":208}},{"uid":"29185d654865455","reportUrl":"https://Nat754.github.io/StroyremAutomation/25//#testresult/29185d654865455","status":"passed","time":{"start":1691887779424,"stop":1691887779524,"duration":100}},{"uid":"92c2c77950d43629","reportUrl":"https://Nat754.github.io/StroyremAutomation/24//#testresult/92c2c77950d43629","status":"passed","time":{"start":1691801141634,"stop":1691801141768,"duration":134}},{"uid":"d00d3b1eb56aaeb8","reportUrl":"https://Nat754.github.io/StroyremAutomation/23//#testresult/d00d3b1eb56aaeb8","status":"passed","time":{"start":1691714793043,"stop":1691714793168,"duration":125}},{"uid":"fa0b15afdb82112c","reportUrl":"https://Nat754.github.io/StroyremAutomation/22//#testresult/fa0b15afdb82112c","status":"passed","time":{"start":1691629140744,"stop":1691629140888,"duration":144}},{"uid":"a34204840a36a4fe","reportUrl":"https://Nat754.github.io/StroyremAutomation/21//#testresult/a34204840a36a4fe","status":"passed","time":{"start":1691542695774,"stop":1691542695907,"duration":133}},{"uid":"79c95cd58a741117","reportUrl":"https://Nat754.github.io/StroyremAutomation/20//#testresult/79c95cd58a741117","status":"passed","time":{"start":1691456265006,"stop":1691456265155,"duration":149}},{"uid":"89efab0cef218cd1","reportUrl":"https://Nat754.github.io/StroyremAutomation/19//#testresult/89efab0cef218cd1","status":"passed","time":{"start":1691370007355,"stop":1691370007516,"duration":161}},{"uid":"fe1718127ff485a","reportUrl":"https://Nat754.github.io/StroyremAutomation/18//#testresult/fe1718127ff485a","status":"passed","time":{"start":1691283217621,"stop":1691283217739,"duration":118}},{"uid":"f697f407d124fbc7","reportUrl":"https://Nat754.github.io/StroyremAutomation/17//#testresult/f697f407d124fbc7","status":"passed","time":{"start":1691196979400,"stop":1691196979551,"duration":151}},{"uid":"d9c65bfd0404b3c9","reportUrl":"https://Nat754.github.io/StroyremAutomation/16//#testresult/d9c65bfd0404b3c9","status":"passed","time":{"start":1691110796859,"stop":1691110796975,"duration":116}},{"uid":"eecb9d963cb1c5b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/15//#testresult/eecb9d963cb1c5b6","status":"passed","time":{"start":1691024364043,"stop":1691024364173,"duration":130}},{"uid":"1d6106b2b8f860c2","reportUrl":"https://Nat754.github.io/StroyremAutomation/14//#testresult/1d6106b2b8f860c2","status":"passed","time":{"start":1690937857867,"stop":1690937857998,"duration":131}}]},"tags":["smoke_test"]},"source":"57e6a0001ab20b8.json","parameterValues":["'https://test2.stroyrem-nn.ru/'"]}