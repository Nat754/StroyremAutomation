{"uid":"1ea5d47d620b7e00","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"f92d847cbd907f4f9e252d1a101ee715","time":{"start":1694183776951,"stop":1694183780234,"duration":3283},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x5592c387ae23 <unknown>\n#1 0x5592c35a37a7 <unknown>\n#2 0x5592c35e7d22 <unknown>\n#3 0x5592c35e6267 <unknown>\n#4 0x5592c35e41e8 <unknown>\n#5 0x5592c35e332d <unknown>\n#6 0x5592c35d8599 <unknown>\n#7 0x5592c3603012 <unknown>\n#8 0x5592c35d7fb6 <unknown>\n#9 0x5592c36031de <unknown>\n#10 0x5592c361b369 <unknown>\n#11 0x5592c3602de3 <unknown>\n#12 0x5592c35d6a7b <unknown>\n#13 0x5592c35d781e <unknown>\n#14 0x5592c383c638 <unknown>\n#15 0x5592c3840507 <unknown>\n#16 0x5592c384ac4c <unknown>\n#17 0x5592c3841136 <unknown>\n#18 0x5592c380f9cf <unknown>\n#19 0x5592c3864b98 <unknown>\n#20 0x5592c3864d68 <unknown>\n#21 0x5592c3873cb3 <unknown>\n#22 0x7f831635f044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa11524ce10>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa1152ca5d0>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa10ff68c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5592c3864d68 \\\\u003Cunknown>\\\\n#21 0x5592c3873cb3 \\\\u003Cunknown>\\\\n#22 0x7f831635f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x5592c387ae23 <unknown>\nE       #1 0x5592c35a37a7 <unknown>\nE       #2 0x5592c35e7d22 <unknown>\nE       #3 0x5592c35e6267 <unknown>\nE       #4 0x5592c35e41e8 <unknown>\nE       #5 0x5592c35e332d <unknown>\nE       #6 0x5592c35d8599 <unknown>\nE       #7 0x5592c3603012 <unknown>\nE       #8 0x5592c35d7fb6 <unknown>\nE       #9 0x5592c36031de <unknown>\nE       #10 0x5592c361b369 <unknown>\nE       #11 0x5592c3602de3 <unknown>\nE       #12 0x5592c35d6a7b <unknown>\nE       #13 0x5592c35d781e <unknown>\nE       #14 0x5592c383c638 <unknown>\nE       #15 0x5592c3840507 <unknown>\nE       #16 0x5592c384ac4c <unknown>\nE       #17 0x5592c3841136 <unknown>\nE       #18 0x5592c380f9cf <unknown>\nE       #19 0x5592c3864b98 <unknown>\nE       #20 0x5592c3864d68 <unknown>\nE       #21 0x5592c3873cb3 <unknown>\nE       #22 0x7f831635f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694183420519,"stop":1694183420596,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694183420596,"stop":1694183420597,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694183769674,"stop":1694183770496,"duration":822},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694183770496,"stop":1694183776951,"duration":6455},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694183770496,"stop":1694183770496,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x5592c387ae23 <unknown>\n#1 0x5592c35a37a7 <unknown>\n#2 0x5592c35e7d22 <unknown>\n#3 0x5592c35e6267 <unknown>\n#4 0x5592c35e41e8 <unknown>\n#5 0x5592c35e332d <unknown>\n#6 0x5592c35d8599 <unknown>\n#7 0x5592c3603012 <unknown>\n#8 0x5592c35d7fb6 <unknown>\n#9 0x5592c36031de <unknown>\n#10 0x5592c361b369 <unknown>\n#11 0x5592c3602de3 <unknown>\n#12 0x5592c35d6a7b <unknown>\n#13 0x5592c35d781e <unknown>\n#14 0x5592c383c638 <unknown>\n#15 0x5592c3840507 <unknown>\n#16 0x5592c384ac4c <unknown>\n#17 0x5592c3841136 <unknown>\n#18 0x5592c380f9cf <unknown>\n#19 0x5592c3864b98 <unknown>\n#20 0x5592c3864d68 <unknown>\n#21 0x5592c3873cb3 <unknown>\n#22 0x7f831635f044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa11524ce10>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa1152ca5d0>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa10ff68c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5592c3864d68 \\\\u003Cunknown>\\\\n#21 0x5592c3873cb3 \\\\u003Cunknown>\\\\n#22 0x7f831635f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x5592c387ae23 <unknown>\nE       #1 0x5592c35a37a7 <unknown>\nE       #2 0x5592c35e7d22 <unknown>\nE       #3 0x5592c35e6267 <unknown>\nE       #4 0x5592c35e41e8 <unknown>\nE       #5 0x5592c35e332d <unknown>\nE       #6 0x5592c35d8599 <unknown>\nE       #7 0x5592c3603012 <unknown>\nE       #8 0x5592c35d7fb6 <unknown>\nE       #9 0x5592c36031de <unknown>\nE       #10 0x5592c361b369 <unknown>\nE       #11 0x5592c3602de3 <unknown>\nE       #12 0x5592c35d6a7b <unknown>\nE       #13 0x5592c35d781e <unknown>\nE       #14 0x5592c383c638 <unknown>\nE       #15 0x5592c3840507 <unknown>\nE       #16 0x5592c384ac4c <unknown>\nE       #17 0x5592c3841136 <unknown>\nE       #18 0x5592c380f9cf <unknown>\nE       #19 0x5592c3864b98 <unknown>\nE       #20 0x5592c3864d68 <unknown>\nE       #21 0x5592c3873cb3 <unknown>\nE       #22 0x7f831635f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694183776952,"stop":1694183777031,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1694183779081,"stop":1694183779138,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"eec41cff04598fe2","name":"Screenshot","source":"eec41cff04598fe2.png","type":"image/png","size":181764},{"uid":"5be5cf8b2446821c","name":"HTML source","source":"5be5cf8b2446821c.html","type":"text/html","size":746158}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1694183780471,"stop":1694183780540,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1694183780471,"stop":1694183780471,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"be9c248a42b6"},{"name":"thread","value":"11-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":19,"unknown":0,"total":25},"items":[{"uid":"beb92ec927efa28f","reportUrl":"https://Nat754.github.io/StroyremAutomation/52//#testresult/beb92ec927efa28f","status":"passed","time":{"start":1694135081643,"stop":1694135089719,"duration":8076}},{"uid":"ff9fa29c60338049","reportUrl":"https://Nat754.github.io/StroyremAutomation/51//#testresult/ff9fa29c60338049","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x56538d3f1e23 <unknown>\n#1 0x56538d11a7a7 <unknown>\n#2 0x56538d15ed22 <unknown>\n#3 0x56538d15d267 <unknown>\n#4 0x56538d15b1e8 <unknown>\n#5 0x56538d15a32d <unknown>\n#6 0x56538d14f599 <unknown>\n#7 0x56538d17a012 <unknown>\n#8 0x56538d14efb6 <unknown>\n#9 0x56538d17a1de <unknown>\n#10 0x56538d192369 <unknown>\n#11 0x56538d179de3 <unknown>\n#12 0x56538d14da7b <unknown>\n#13 0x56538d14e81e <unknown>\n#14 0x56538d3b3638 <unknown>\n#15 0x56538d3b7507 <unknown>\n#16 0x56538d3c1c4c <unknown>\n#17 0x56538d3b8136 <unknown>\n#18 0x56538d3869cf <unknown>\n#19 0x56538d3dbb98 <unknown>\n#20 0x56538d3dbd68 <unknown>\n#21 0x56538d3eacb3 <unknown>\n#22 0x7f9022527044 <unknown>","time":{"start":1694048378410,"stop":1694048381744,"duration":3334}},{"uid":"a31874fe5bc8b615","reportUrl":"https://Nat754.github.io/StroyremAutomation/50//#testresult/a31874fe5bc8b615","status":"passed","time":{"start":1693962503231,"stop":1693962511940,"duration":8709}},{"uid":"3c864691484276ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/49//#testresult/3c864691484276ea","status":"passed","time":{"start":1693875615385,"stop":1693875622936,"duration":7551}},{"uid":"654256512b492cc5","reportUrl":"https://Nat754.github.io/StroyremAutomation/48//#testresult/654256512b492cc5","status":"passed","time":{"start":1693789661472,"stop":1693789669540,"duration":8068}},{"uid":"75096185dfa26906","reportUrl":"https://Nat754.github.io/StroyremAutomation/3//#testresult/75096185dfa26906","status":"passed","time":{"start":1693730441838,"stop":1693730449364,"duration":7526}},{"uid":"9c7fcfaad6868b1f","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/9c7fcfaad6868b1f","status":"passed","time":{"start":1693731162455,"stop":1693731170589,"duration":8134}},{"uid":"210cf5d61428368f","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/210cf5d61428368f","status":"passed","time":{"start":1693703510801,"stop":1693703519589,"duration":8788}},{"uid":"9d8a7d591f1887bb","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/9d8a7d591f1887bb","status":"passed","time":{"start":1693616682507,"stop":1693616691356,"duration":8849}},{"uid":"e9de2dc56d6973cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/e9de2dc56d6973cf","status":"passed","time":{"start":1693530575408,"stop":1693530584035,"duration":8627}},{"uid":"d0d99544ef825daf","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/d0d99544ef825daf","status":"passed","time":{"start":1693476504665,"stop":1693476513094,"duration":8429}},{"uid":"95dc61df52f4a961","reportUrl":"https://Nat754.github.io/StroyremAutomation/44//#testresult/95dc61df52f4a961","status":"passed","time":{"start":1693443834618,"stop":1693443842993,"duration":8375}},{"uid":"6c2bee05858f3954","reportUrl":"https://Nat754.github.io/StroyremAutomation/43//#testresult/6c2bee05858f3954","status":"passed","time":{"start":1693357534533,"stop":1693357543180,"duration":8647}},{"uid":"27712ec88de238c6","reportUrl":"https://Nat754.github.io/StroyremAutomation/42//#testresult/27712ec88de238c6","status":"passed","time":{"start":1693300357788,"stop":1693300364771,"duration":6983}},{"uid":"a2e72b879a84775b","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/a2e72b879a84775b","status":"passed","time":{"start":1693298527030,"stop":1693298534545,"duration":7515}},{"uid":"66d1a241491d15e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/66d1a241491d15e1","status":"passed","time":{"start":1693270801644,"stop":1693270809235,"duration":7591}},{"uid":"9584e8bf87e89e89","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/9584e8bf87e89e89","status":"passed","time":{"start":1693244006873,"stop":1693244015670,"duration":8797}},{"uid":"90b5550b75d94d66","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/90b5550b75d94d66","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558ef721be23 <unknown>\n#1 0x558ef6f447a7 <unknown>\n#2 0x558ef6f831d3 <unknown>\n#3 0x558ef6f832c1 <unknown>\n#4 0x558ef6fbea04 <unknown>\n#5 0x558ef6fa403d <unknown>\n#6 0x558ef6fbc369 <unknown>\n#7 0x558ef6fa3de3 <unknown>\n#8 0x558ef6f77a7b <unknown>\n#9 0x558ef6f7881e <unknown>\n#10 0x558ef71dd638 <unknown>\n#11 0x558ef71e1507 <unknown>\n#12 0x558ef71ebc4c <unknown>\n#13 0x558ef71e2136 <unknown>\n#14 0x558ef71b09cf <unknown>\n#15 0x558ef7205b98 <unknown>\n#16 0x558ef7205d68 <unknown>\n#17 0x558ef7214cb3 <unknown>\n#18 0x7fc07d0a7044 <unknown>","time":{"start":1693184476610,"stop":1693184491793,"duration":15183}},{"uid":"dc315b6e15d87dfd","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/dc315b6e15d87dfd","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558a89c11e23 <unknown>\n#1 0x558a8993a7a7 <unknown>\n#2 0x558a899791d3 <unknown>\n#3 0x558a899792c1 <unknown>\n#4 0x558a899b4a04 <unknown>\n#5 0x558a8999a03d <unknown>\n#6 0x558a899b2369 <unknown>\n#7 0x558a89999de3 <unknown>\n#8 0x558a8996da7b <unknown>\n#9 0x558a8996e81e <unknown>\n#10 0x558a89bd3638 <unknown>\n#11 0x558a89bd7507 <unknown>\n#12 0x558a89be1c4c <unknown>\n#13 0x558a89bd8136 <unknown>\n#14 0x558a89ba69cf <unknown>\n#15 0x558a89bfbb98 <unknown>\n#16 0x558a89bfbd68 <unknown>\n#17 0x558a89c0acb3 <unknown>\n#18 0x7f92d9bbd044 <unknown>","time":{"start":1693170572937,"stop":1693170588121,"duration":15184}},{"uid":"4aafcfcd41665cf4","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/4aafcfcd41665cf4","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5605db2b4e23 <unknown>\n#1 0x5605dafdd7a7 <unknown>\n#2 0x5605db01c1d3 <unknown>\n#3 0x5605db01c2c1 <unknown>\n#4 0x5605db057a04 <unknown>\n#5 0x5605db03d03d <unknown>\n#6 0x5605db055369 <unknown>\n#7 0x5605db03cde3 <unknown>\n#8 0x5605db010a7b <unknown>\n#9 0x5605db01181e <unknown>\n#10 0x5605db276638 <unknown>\n#11 0x5605db27a507 <unknown>\n#12 0x5605db284c4c <unknown>\n#13 0x5605db27b136 <unknown>\n#14 0x5605db2499cf <unknown>\n#15 0x5605db29eb98 <unknown>\n#16 0x5605db29ed68 <unknown>\n#17 0x5605db2adcb3 <unknown>\n#18 0x7f158a55a044 <unknown>","time":{"start":1693140700079,"stop":1693140715343,"duration":15264}}]},"tags":["smoke_test"]},"source":"1ea5d47d620b7e00.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}