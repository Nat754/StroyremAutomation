{"uid":"567abd042a1a9a00","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"af8fbd6f50a28c543b5170548fcea335","time":{"start":1694183751402,"stop":1694183753852,"duration":2450},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55dd7d854e23 <unknown>\n#1 0x55dd7d57d7a7 <unknown>\n#2 0x55dd7d5c1d22 <unknown>\n#3 0x55dd7d5c0267 <unknown>\n#4 0x55dd7d5be1e8 <unknown>\n#5 0x55dd7d5bd32d <unknown>\n#6 0x55dd7d5b2599 <unknown>\n#7 0x55dd7d5dd012 <unknown>\n#8 0x55dd7d5b1fb6 <unknown>\n#9 0x55dd7d5dd1de <unknown>\n#10 0x55dd7d5f5369 <unknown>\n#11 0x55dd7d5dcde3 <unknown>\n#12 0x55dd7d5b0a7b <unknown>\n#13 0x55dd7d5b181e <unknown>\n#14 0x55dd7d816638 <unknown>\n#15 0x55dd7d81a507 <unknown>\n#16 0x55dd7d824c4c <unknown>\n#17 0x55dd7d81b136 <unknown>\n#18 0x55dd7d7e99cf <unknown>\n#19 0x55dd7d83eb98 <unknown>\n#20 0x55dd7d83ed68 <unknown>\n#21 0x55dd7d84dcb3 <unknown>\n#22 0x7f6ce95e5044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa11524e290>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa10fe252d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa1145f5f10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55dd7d83ed68 \\\\u003Cunknown>\\\\n#21 0x55dd7d84dcb3 \\\\u003Cunknown>\\\\n#22 0x7f6ce95e5044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55dd7d854e23 <unknown>\nE       #1 0x55dd7d57d7a7 <unknown>\nE       #2 0x55dd7d5c1d22 <unknown>\nE       #3 0x55dd7d5c0267 <unknown>\nE       #4 0x55dd7d5be1e8 <unknown>\nE       #5 0x55dd7d5bd32d <unknown>\nE       #6 0x55dd7d5b2599 <unknown>\nE       #7 0x55dd7d5dd012 <unknown>\nE       #8 0x55dd7d5b1fb6 <unknown>\nE       #9 0x55dd7d5dd1de <unknown>\nE       #10 0x55dd7d5f5369 <unknown>\nE       #11 0x55dd7d5dcde3 <unknown>\nE       #12 0x55dd7d5b0a7b <unknown>\nE       #13 0x55dd7d5b181e <unknown>\nE       #14 0x55dd7d816638 <unknown>\nE       #15 0x55dd7d81a507 <unknown>\nE       #16 0x55dd7d824c4c <unknown>\nE       #17 0x55dd7d81b136 <unknown>\nE       #18 0x55dd7d7e99cf <unknown>\nE       #19 0x55dd7d83eb98 <unknown>\nE       #20 0x55dd7d83ed68 <unknown>\nE       #21 0x55dd7d84dcb3 <unknown>\nE       #22 0x7f6ce95e5044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694183420519,"stop":1694183420596,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694183420596,"stop":1694183420597,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694183745205,"stop":1694183746007,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694183746007,"stop":1694183746007,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694183746007,"stop":1694183751401,"duration":5394},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55dd7d854e23 <unknown>\n#1 0x55dd7d57d7a7 <unknown>\n#2 0x55dd7d5c1d22 <unknown>\n#3 0x55dd7d5c0267 <unknown>\n#4 0x55dd7d5be1e8 <unknown>\n#5 0x55dd7d5bd32d <unknown>\n#6 0x55dd7d5b2599 <unknown>\n#7 0x55dd7d5dd012 <unknown>\n#8 0x55dd7d5b1fb6 <unknown>\n#9 0x55dd7d5dd1de <unknown>\n#10 0x55dd7d5f5369 <unknown>\n#11 0x55dd7d5dcde3 <unknown>\n#12 0x55dd7d5b0a7b <unknown>\n#13 0x55dd7d5b181e <unknown>\n#14 0x55dd7d816638 <unknown>\n#15 0x55dd7d81a507 <unknown>\n#16 0x55dd7d824c4c <unknown>\n#17 0x55dd7d81b136 <unknown>\n#18 0x55dd7d7e99cf <unknown>\n#19 0x55dd7d83eb98 <unknown>\n#20 0x55dd7d83ed68 <unknown>\n#21 0x55dd7d84dcb3 <unknown>\n#22 0x7f6ce95e5044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fa11524e290>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fa10fe252d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:241: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fa1145f5f10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55dd7d83ed68 \\\\u003Cunknown>\\\\n#21 0x55dd7d84dcb3 \\\\u003Cunknown>\\\\n#22 0x7f6ce95e5044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55dd7d854e23 <unknown>\nE       #1 0x55dd7d57d7a7 <unknown>\nE       #2 0x55dd7d5c1d22 <unknown>\nE       #3 0x55dd7d5c0267 <unknown>\nE       #4 0x55dd7d5be1e8 <unknown>\nE       #5 0x55dd7d5bd32d <unknown>\nE       #6 0x55dd7d5b2599 <unknown>\nE       #7 0x55dd7d5dd012 <unknown>\nE       #8 0x55dd7d5b1fb6 <unknown>\nE       #9 0x55dd7d5dd1de <unknown>\nE       #10 0x55dd7d5f5369 <unknown>\nE       #11 0x55dd7d5dcde3 <unknown>\nE       #12 0x55dd7d5b0a7b <unknown>\nE       #13 0x55dd7d5b181e <unknown>\nE       #14 0x55dd7d816638 <unknown>\nE       #15 0x55dd7d81a507 <unknown>\nE       #16 0x55dd7d824c4c <unknown>\nE       #17 0x55dd7d81b136 <unknown>\nE       #18 0x55dd7d7e99cf <unknown>\nE       #19 0x55dd7d83eb98 <unknown>\nE       #20 0x55dd7d83ed68 <unknown>\nE       #21 0x55dd7d84dcb3 <unknown>\nE       #22 0x7f6ce95e5044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1694183751402,"stop":1694183751493,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1694183751560,"stop":1694183751617,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694183752704,"stop":1694183752771,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"bd5d157180d886c","name":"Screenshot","source":"bd5d157180d886c.png","type":"image/png","size":58752},{"uid":"cc143caaec1dcc5a","name":"HTML source","source":"cc143caaec1dcc5a.html","type":"text/html","size":892082}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1694183754083,"stop":1694183754151,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1694183754083,"stop":1694183754083,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"be9c248a42b6"},{"name":"thread","value":"11-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":20,"unknown":0,"total":26},"items":[{"uid":"565e5165b0c13bcd","reportUrl":"https://Nat754.github.io/StroyremAutomation/52//#testresult/565e5165b0c13bcd","status":"passed","time":{"start":1694135043930,"stop":1694135053988,"duration":10058}},{"uid":"9ab0f69ae7dccca6","reportUrl":"https://Nat754.github.io/StroyremAutomation/51//#testresult/9ab0f69ae7dccca6","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x5648dc987e23 <unknown>\n#1 0x5648dc6b07a7 <unknown>\n#2 0x5648dc6f4d22 <unknown>\n#3 0x5648dc6f3267 <unknown>\n#4 0x5648dc6f11e8 <unknown>\n#5 0x5648dc6f032d <unknown>\n#6 0x5648dc6e5599 <unknown>\n#7 0x5648dc710012 <unknown>\n#8 0x5648dc6e4fb6 <unknown>\n#9 0x5648dc7101de <unknown>\n#10 0x5648dc728369 <unknown>\n#11 0x5648dc70fde3 <unknown>\n#12 0x5648dc6e3a7b <unknown>\n#13 0x5648dc6e481e <unknown>\n#14 0x5648dc949638 <unknown>\n#15 0x5648dc94d507 <unknown>\n#16 0x5648dc957c4c <unknown>\n#17 0x5648dc94e136 <unknown>\n#18 0x5648dc91c9cf <unknown>\n#19 0x5648dc971b98 <unknown>\n#20 0x5648dc971d68 <unknown>\n#21 0x5648dc980cb3 <unknown>\n#22 0x7f7c775cf044 <unknown>","time":{"start":1694048351791,"stop":1694048354234,"duration":2443}},{"uid":"8a1ec262791ec42b","reportUrl":"https://Nat754.github.io/StroyremAutomation/50//#testresult/8a1ec262791ec42b","status":"passed","time":{"start":1693962461256,"stop":1693962471991,"duration":10735}},{"uid":"44a53ef66b728ee0","reportUrl":"https://Nat754.github.io/StroyremAutomation/49//#testresult/44a53ef66b728ee0","status":"passed","time":{"start":1693875579661,"stop":1693875589493,"duration":9832}},{"uid":"c267960811b2afac","reportUrl":"https://Nat754.github.io/StroyremAutomation/48//#testresult/c267960811b2afac","status":"passed","time":{"start":1693789621354,"stop":1693789631775,"duration":10421}},{"uid":"b9778cc93fac346","reportUrl":"https://Nat754.github.io/StroyremAutomation/3//#testresult/b9778cc93fac346","status":"passed","time":{"start":1693730408240,"stop":1693730417781,"duration":9541}},{"uid":"935052ffe8ed72ed","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/935052ffe8ed72ed","status":"passed","time":{"start":1693731122343,"stop":1693731132890,"duration":10547}},{"uid":"e19a725a5e042150","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/e19a725a5e042150","status":"passed","time":{"start":1693703467327,"stop":1693703478153,"duration":10826}},{"uid":"4062e13bca23389d","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/4062e13bca23389d","status":"passed","time":{"start":1693616640048,"stop":1693616650922,"duration":10874}},{"uid":"3996f5e034b0cf0c","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/3996f5e034b0cf0c","status":"passed","time":{"start":1693530532113,"stop":1693530542792,"duration":10679}},{"uid":"2ac338865f2145c5","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/2ac338865f2145c5","status":"passed","time":{"start":1693476510494,"stop":1693476521063,"duration":10569}},{"uid":"94029d6285ab20a7","reportUrl":"https://Nat754.github.io/StroyremAutomation/44//#testresult/94029d6285ab20a7","status":"passed","time":{"start":1693443794336,"stop":1693443804775,"duration":10439}},{"uid":"d9b0aac2f6624f1a","reportUrl":"https://Nat754.github.io/StroyremAutomation/43//#testresult/d9b0aac2f6624f1a","status":"passed","time":{"start":1693357490119,"stop":1693357501112,"duration":10993}},{"uid":"d8aca7639e2f13b8","reportUrl":"https://Nat754.github.io/StroyremAutomation/42//#testresult/d8aca7639e2f13b8","status":"passed","time":{"start":1693300319447,"stop":1693300328422,"duration":8975}},{"uid":"9e4cb71cc04f0a6d","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/9e4cb71cc04f0a6d","status":"passed","time":{"start":1693298485482,"stop":1693298495014,"duration":9532}},{"uid":"f26c92299408f564","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/f26c92299408f564","status":"passed","time":{"start":1693270768504,"stop":1693270777987,"duration":9483}},{"uid":"8dc33c5b134f6350","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/8dc33c5b134f6350","status":"passed","time":{"start":1693243963954,"stop":1693243974690,"duration":10736}},{"uid":"c6bc6df96c470b5d","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/c6bc6df96c470b5d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5644802dfe23 <unknown>\n#1 0x5644800087a7 <unknown>\n#2 0x5644800471d3 <unknown>\n#3 0x5644800472c1 <unknown>\n#4 0x564480082a04 <unknown>\n#5 0x56448006803d <unknown>\n#6 0x564480080369 <unknown>\n#7 0x564480067de3 <unknown>\n#8 0x56448003ba7b <unknown>\n#9 0x56448003c81e <unknown>\n#10 0x5644802a1638 <unknown>\n#11 0x5644802a5507 <unknown>\n#12 0x5644802afc4c <unknown>\n#13 0x5644802a6136 <unknown>\n#14 0x5644802749cf <unknown>\n#15 0x5644802c9b98 <unknown>\n#16 0x5644802c9d68 <unknown>\n#17 0x5644802d8cb3 <unknown>\n#18 0x7f65e9f78044 <unknown>","time":{"start":1693184439776,"stop":1693184454954,"duration":15178}},{"uid":"e864d27c2e8a12d","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/e864d27c2e8a12d","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5582409dae23 <unknown>\n#1 0x5582407037a7 <unknown>\n#2 0x5582407421d3 <unknown>\n#3 0x5582407422c1 <unknown>\n#4 0x55824077da04 <unknown>\n#5 0x55824076303d <unknown>\n#6 0x55824077b369 <unknown>\n#7 0x558240762de3 <unknown>\n#8 0x558240736a7b <unknown>\n#9 0x55824073781e <unknown>\n#10 0x55824099c638 <unknown>\n#11 0x5582409a0507 <unknown>\n#12 0x5582409aac4c <unknown>\n#13 0x5582409a1136 <unknown>\n#14 0x55824096f9cf <unknown>\n#15 0x5582409c4b98 <unknown>\n#16 0x5582409c4d68 <unknown>\n#17 0x5582409d3cb3 <unknown>\n#18 0x7f5fe11f8044 <unknown>","time":{"start":1693170532392,"stop":1693170547574,"duration":15182}},{"uid":"a0117c44a02f5805","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/a0117c44a02f5805","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e5982f4e23 <unknown>\n#1 0x55e59801d7a7 <unknown>\n#2 0x55e59805c1d3 <unknown>\n#3 0x55e59805c2c1 <unknown>\n#4 0x55e598097a04 <unknown>\n#5 0x55e59807d03d <unknown>\n#6 0x55e598095369 <unknown>\n#7 0x55e59807cde3 <unknown>\n#8 0x55e598050a7b <unknown>\n#9 0x55e59805181e <unknown>\n#10 0x55e5982b6638 <unknown>\n#11 0x55e5982ba507 <unknown>\n#12 0x55e5982c4c4c <unknown>\n#13 0x55e5982bb136 <unknown>\n#14 0x55e5982899cf <unknown>\n#15 0x55e5982deb98 <unknown>\n#16 0x55e5982ded68 <unknown>\n#17 0x55e5982edcb3 <unknown>\n#18 0x7faf3e536044 <unknown>","time":{"start":1693140664331,"stop":1693140679605,"duration":15274}}]},"tags":["smoke_test"]},"source":"567abd042a1a9a00.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}