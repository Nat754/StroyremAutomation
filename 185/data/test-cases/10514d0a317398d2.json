{"uid":"10514d0a317398d2","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1705108008492,"stop":1705108010820,"duration":2328},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x555da225af83 <unknown>\n#1 0x555da1f13cf7 <unknown>\n#2 0x555da1f6bd92 <unknown>\n#3 0x555da1f697f4 <unknown>\n#4 0x555da1f66894 <unknown>\n#5 0x555da1f654b9 <unknown>\n#6 0x555da1f57313 <unknown>\n#7 0x555da1f8d0b2 <unknown>\n#8 0x555da1f56b49 <unknown>\n#9 0x555da1f8d4ce <unknown>\n#10 0x555da1fac006 <unknown>\n#11 0x555da1f8ce53 <unknown>\n#12 0x555da1f54dd4 <unknown>\n#13 0x555da1f561de <unknown>\n#14 0x555da221f531 <unknown>\n#15 0x555da2223455 <unknown>\n#16 0x555da220bf55 <unknown>\n#17 0x555da22240ef <unknown>\n#18 0x555da21ef99f <unknown>\n#19 0x555da2248008 <unknown>\n#20 0x555da22481d7 <unknown>\n#21 0x555da225a124 <unknown>\n#22 0x7fcfac19e044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd08fe93190>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd08ec1eb50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd08eb78790>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x555da22481d7 \\\\u003Cunknown>\\\\n#21 0x555da225a124 \\\\u003Cunknown>\\\\n#22 0x7fcfac19e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x555da225af83 <unknown>\nE       #1 0x555da1f13cf7 <unknown>\nE       #2 0x555da1f6bd92 <unknown>\nE       #3 0x555da1f697f4 <unknown>\nE       #4 0x555da1f66894 <unknown>\nE       #5 0x555da1f654b9 <unknown>\nE       #6 0x555da1f57313 <unknown>\nE       #7 0x555da1f8d0b2 <unknown>\nE       #8 0x555da1f56b49 <unknown>\nE       #9 0x555da1f8d4ce <unknown>\nE       #10 0x555da1fac006 <unknown>\nE       #11 0x555da1f8ce53 <unknown>\nE       #12 0x555da1f54dd4 <unknown>\nE       #13 0x555da1f561de <unknown>\nE       #14 0x555da221f531 <unknown>\nE       #15 0x555da2223455 <unknown>\nE       #16 0x555da220bf55 <unknown>\nE       #17 0x555da22240ef <unknown>\nE       #18 0x555da21ef99f <unknown>\nE       #19 0x555da2248008 <unknown>\nE       #20 0x555da22481d7 <unknown>\nE       #21 0x555da225a124 <unknown>\nE       #22 0x7fcfac19e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705107091356,"stop":1705107091422,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705107091422,"stop":1705107091422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705107998259,"stop":1705107999038,"duration":779},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1705107999038,"stop":1705108008492,"duration":9454},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705107999038,"stop":1705107999038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x555da225af83 <unknown>\n#1 0x555da1f13cf7 <unknown>\n#2 0x555da1f6bd92 <unknown>\n#3 0x555da1f697f4 <unknown>\n#4 0x555da1f66894 <unknown>\n#5 0x555da1f654b9 <unknown>\n#6 0x555da1f57313 <unknown>\n#7 0x555da1f8d0b2 <unknown>\n#8 0x555da1f56b49 <unknown>\n#9 0x555da1f8d4ce <unknown>\n#10 0x555da1fac006 <unknown>\n#11 0x555da1f8ce53 <unknown>\n#12 0x555da1f54dd4 <unknown>\n#13 0x555da1f561de <unknown>\n#14 0x555da221f531 <unknown>\n#15 0x555da2223455 <unknown>\n#16 0x555da220bf55 <unknown>\n#17 0x555da22240ef <unknown>\n#18 0x555da21ef99f <unknown>\n#19 0x555da2248008 <unknown>\n#20 0x555da22481d7 <unknown>\n#21 0x555da225a124 <unknown>\n#22 0x7fcfac19e044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd08fe93190>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd08ec1eb50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd08eb78790>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x555da22481d7 \\\\u003Cunknown>\\\\n#21 0x555da225a124 \\\\u003Cunknown>\\\\n#22 0x7fcfac19e044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x555da225af83 <unknown>\nE       #1 0x555da1f13cf7 <unknown>\nE       #2 0x555da1f6bd92 <unknown>\nE       #3 0x555da1f697f4 <unknown>\nE       #4 0x555da1f66894 <unknown>\nE       #5 0x555da1f654b9 <unknown>\nE       #6 0x555da1f57313 <unknown>\nE       #7 0x555da1f8d0b2 <unknown>\nE       #8 0x555da1f56b49 <unknown>\nE       #9 0x555da1f8d4ce <unknown>\nE       #10 0x555da1fac006 <unknown>\nE       #11 0x555da1f8ce53 <unknown>\nE       #12 0x555da1f54dd4 <unknown>\nE       #13 0x555da1f561de <unknown>\nE       #14 0x555da221f531 <unknown>\nE       #15 0x555da2223455 <unknown>\nE       #16 0x555da220bf55 <unknown>\nE       #17 0x555da22240ef <unknown>\nE       #18 0x555da21ef99f <unknown>\nE       #19 0x555da2248008 <unknown>\nE       #20 0x555da22481d7 <unknown>\nE       #21 0x555da225a124 <unknown>\nE       #22 0x7fcfac19e044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1705108008492,"stop":1705108008545,"duration":53},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1705108008620,"stop":1705108008651,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1705108009692,"stop":1705108009735,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7a8f201f879f9a8d","name":"Screenshot","source":"7a8f201f879f9a8d.png","type":"image/png","size":149840},{"uid":"683c9ada8da88f2f","name":"HTML source","source":"683c9ada8da88f2f.html","type":"text/html","size":846302}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705108010999,"stop":1705108010999,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1705108011000,"stop":1705108011074,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"26bbeba49f9b"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":160,"unknown":0,"total":164},"items":[{"uid":"ccff2e24a1a10fe3","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/ccff2e24a1a10fe3","status":"passed","time":{"start":1705021548125,"stop":1705021556987,"duration":8862}},{"uid":"ac57f3198d7a7ec7","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/ac57f3198d7a7ec7","status":"passed","time":{"start":1704935258208,"stop":1704935268039,"duration":9831}},{"uid":"66982f1bcb9b4045","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/66982f1bcb9b4045","status":"passed","time":{"start":1704848867009,"stop":1704848876531,"duration":9522}},{"uid":"969e069025040dd6","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/969e069025040dd6","status":"passed","time":{"start":1704762257452,"stop":1704762265454,"duration":8002}},{"uid":"db50a6e27aab314f","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/db50a6e27aab314f","status":"passed","time":{"start":1704675890511,"stop":1704675898660,"duration":8149}},{"uid":"9628b81b1d3cd9d8","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/9628b81b1d3cd9d8","status":"passed","time":{"start":1704589858480,"stop":1704589867912,"duration":9432}},{"uid":"4f90c9344fe87323","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/4f90c9344fe87323","status":"passed","time":{"start":1704503112494,"stop":1704503122056,"duration":9562}},{"uid":"64c0c16c0757a3a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/64c0c16c0757a3a0","status":"passed","time":{"start":1704416615505,"stop":1704416623678,"duration":8173}},{"uid":"d623d14b1237636d","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/d623d14b1237636d","status":"passed","time":{"start":1704330214069,"stop":1704330222317,"duration":8248}},{"uid":"ef5399f46ba3b9c5","reportUrl":"https://Nat754.github.io/StroyremAutomation/175//#testresult/ef5399f46ba3b9c5","status":"passed","time":{"start":1704243866611,"stop":1704243875894,"duration":9283}},{"uid":"9faa9db9ff0957d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/174//#testresult/9faa9db9ff0957d2","status":"passed","time":{"start":1704157295454,"stop":1704157303970,"duration":8516}},{"uid":"b18dfd7d99bf1de","reportUrl":"https://Nat754.github.io/StroyremAutomation/173//#testresult/b18dfd7d99bf1de","status":"passed","time":{"start":1704071249437,"stop":1704071257720,"duration":8283}},{"uid":"2551556a8525b328","reportUrl":"https://Nat754.github.io/StroyremAutomation/172//#testresult/2551556a8525b328","status":"passed","time":{"start":1703984770921,"stop":1703984779349,"duration":8428}},{"uid":"cad9f6c692e7467e","reportUrl":"https://Nat754.github.io/StroyremAutomation/171//#testresult/cad9f6c692e7467e","status":"passed","time":{"start":1703898043530,"stop":1703898051829,"duration":8299}},{"uid":"e9ee8408971ef0cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/170//#testresult/e9ee8408971ef0cf","status":"passed","time":{"start":1703811376881,"stop":1703811386718,"duration":9837}},{"uid":"161d40437dee3b45","reportUrl":"https://Nat754.github.io/StroyremAutomation/169//#testresult/161d40437dee3b45","status":"passed","time":{"start":1703725288138,"stop":1703725296157,"duration":8019}},{"uid":"11cfb980c7b739a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/168//#testresult/11cfb980c7b739a5","status":"passed","time":{"start":1703639080997,"stop":1703639090594,"duration":9597}},{"uid":"1cb4ac8fcf1a8c31","reportUrl":"https://Nat754.github.io/StroyremAutomation/167//#testresult/1cb4ac8fcf1a8c31","status":"passed","time":{"start":1703552441405,"stop":1703552450154,"duration":8749}},{"uid":"d07b15adbfa333a7","reportUrl":"https://Nat754.github.io/StroyremAutomation/166//#testresult/d07b15adbfa333a7","status":"passed","time":{"start":1703466442934,"stop":1703466452367,"duration":9433}},{"uid":"541f9062212b14c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/165//#testresult/541f9062212b14c4","status":"passed","time":{"start":1703380133859,"stop":1703380142571,"duration":8712}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"10514d0a317398d2.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}