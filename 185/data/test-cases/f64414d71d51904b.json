{"uid":"f64414d71d51904b","name":"007_positive_catalog_first_link_smoke","fullName":"tests.catalog.test_catalog_page.TestCatalogPage#test_007_positive_catalog_first_link_smoke","historyId":"d0c67580db740592432b08ab75a259c2","time":{"start":1705107234841,"stop":1705107251504,"duration":16663},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7fd08f1e8fd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"929be3b982776f2ac38329dc76cc1c69\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7fd08f0210d0>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"929be3b982776f2ac38329dc76cc1c69\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fd08f167240>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705107091356,"stop":1705107091422,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705107091422,"stop":1705107091422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705107224192,"stop":1705107225004,"duration":812},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705107225004,"stop":1705107225005,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"catalog_page_open","time":{"start":1705107225005,"stop":1705107234841,"duration":9836},"status":"passed","steps":[{"name":"Проверяем что элемент 'Каталог товаров' виден в хедере","time":{"start":1705107234780,"stop":1705107234807,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7fd08f1e8fd0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"929be3b982776f2ac38329dc76cc1c69\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7fd08f0210d0>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"929be3b982776f2ac38329dc76cc1c69\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fd08f167240>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Проверяем что ссылка 'Гипсокартонные системы' видна на странице","time":{"start":1705107234841,"stop":1705107251504,"duration":16663},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/catalog_page.py\", line 98, in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 34, in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"6131e3f244d23c06","name":"Screenshot","source":"6131e3f244d23c06.png","type":"image/png","size":14012},{"uid":"fc78ab0b6aca3efb","name":"HTML source","source":"fc78ab0b6aca3efb.html","type":"text/html","size":386644}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705107251606,"stop":1705107251606,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1705107251606,"stop":1705107251678,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Catalog Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.catalog"},{"name":"suite","value":"test_catalog_page"},{"name":"subSuite","value":"TestCatalogPage"},{"name":"host","value":"26bbeba49f9b"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.test_catalog_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":46,"skipped":0,"passed":124,"unknown":0,"total":170},"items":[{"uid":"1e1adb5d682d4596","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/1e1adb5d682d4596","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1705020879489,"stop":1705020896170,"duration":16681}},{"uid":"a38b7b6c3ce54b29","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/a38b7b6c3ce54b29","status":"passed","time":{"start":1704934467331,"stop":1704934473414,"duration":6083}},{"uid":"cd468437b34633b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/cd468437b34633b6","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704848068519,"stop":1704848085189,"duration":16670}},{"uid":"db16876bbb275707","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/db16876bbb275707","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704761632892,"stop":1704761648049,"duration":15157}},{"uid":"be2a8eeef617075f","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/be2a8eeef617075f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704675248645,"stop":1704675265323,"duration":16678}},{"uid":"1b4d02d1e78f9056","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/1b4d02d1e78f9056","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704589074765,"stop":1704589091434,"duration":16669}},{"uid":"91585373cf39a67b","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/91585373cf39a67b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704502336923,"stop":1704502353579,"duration":16656}},{"uid":"31fe4a6205d632c0","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/31fe4a6205d632c0","status":"passed","time":{"start":1704415986252,"stop":1704415993576,"duration":7324}},{"uid":"168a9194695a3873","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/168a9194695a3873","status":"passed","time":{"start":1704329560061,"stop":1704329566946,"duration":6885}},{"uid":"aa88bf36bc17b22e","reportUrl":"https://Nat754.github.io/StroyremAutomation/175//#testresult/aa88bf36bc17b22e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1704243175281,"stop":1704243190487,"duration":15206}},{"uid":"db575c0de8a2ab57","reportUrl":"https://Nat754.github.io/StroyremAutomation/174//#testresult/db575c0de8a2ab57","status":"passed","time":{"start":1704156675648,"stop":1704156680283,"duration":4635}},{"uid":"7d67fa58abc6a1d","reportUrl":"https://Nat754.github.io/StroyremAutomation/173//#testresult/7d67fa58abc6a1d","status":"passed","time":{"start":1704070631022,"stop":1704070635092,"duration":4070}},{"uid":"80aadf5df032bc23","reportUrl":"https://Nat754.github.io/StroyremAutomation/172//#testresult/80aadf5df032bc23","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1703984128644,"stop":1703984145300,"duration":16656}},{"uid":"ed85de44b980dd91","reportUrl":"https://Nat754.github.io/StroyremAutomation/171//#testresult/ed85de44b980dd91","status":"passed","time":{"start":1703897421523,"stop":1703897426233,"duration":4710}},{"uid":"1b99493aca90a135","reportUrl":"https://Nat754.github.io/StroyremAutomation/170//#testresult/1b99493aca90a135","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1703810562299,"stop":1703810578960,"duration":16661}},{"uid":"d1bda096eccd7d1c","reportUrl":"https://Nat754.github.io/StroyremAutomation/169//#testresult/d1bda096eccd7d1c","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1703724638692,"stop":1703724655411,"duration":16719}},{"uid":"ff1c64c24074f1c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/168//#testresult/ff1c64c24074f1c4","status":"passed","time":{"start":1703638275347,"stop":1703638281753,"duration":6406}},{"uid":"4e88783a6e85e0cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/167//#testresult/4e88783a6e85e0cf","status":"passed","time":{"start":1703551827109,"stop":1703551831523,"duration":4414}},{"uid":"ad4b5086e1635310","reportUrl":"https://Nat754.github.io/StroyremAutomation/166//#testresult/ad4b5086e1635310","status":"passed","time":{"start":1703465637591,"stop":1703465647378,"duration":9787}},{"uid":"d04f491ac5d84345","reportUrl":"https://Nat754.github.io/StroyremAutomation/165//#testresult/d04f491ac5d84345","status":"passed","time":{"start":1703379378622,"stop":1703379384799,"duration":6177}}]},"tags":["smoke_test"]},"source":"f64414d71d51904b.json","parameterValues":["'https://test2.stroyrem-nn.ru/'"]}