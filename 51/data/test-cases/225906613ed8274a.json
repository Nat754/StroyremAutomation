{"uid":"225906613ed8274a","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"dc4e879f02824a08e341b1bdc96aa5ba","time":{"start":1694048545180,"stop":1694048547584,"duration":2404},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x557af1ee1e23 <unknown>\n#1 0x557af1c0a7a7 <unknown>\n#2 0x557af1c4ed22 <unknown>\n#3 0x557af1c4d267 <unknown>\n#4 0x557af1c4b1e8 <unknown>\n#5 0x557af1c4a32d <unknown>\n#6 0x557af1c3f599 <unknown>\n#7 0x557af1c6a012 <unknown>\n#8 0x557af1c3efb6 <unknown>\n#9 0x557af1c6a1de <unknown>\n#10 0x557af1c82369 <unknown>\n#11 0x557af1c69de3 <unknown>\n#12 0x557af1c3da7b <unknown>\n#13 0x557af1c3e81e <unknown>\n#14 0x557af1ea3638 <unknown>\n#15 0x557af1ea7507 <unknown>\n#16 0x557af1eb1c4c <unknown>\n#17 0x557af1ea8136 <unknown>\n#18 0x557af1e769cf <unknown>\n#19 0x557af1ecbb98 <unknown>\n#20 0x557af1ecbd68 <unknown>\n#21 0x557af1edacb3 <unknown>\n#22 0x7f6090d8d044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff255d124d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff255661250>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff255628110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557af1ecbd68 \\\\u003Cunknown>\\\\n#21 0x557af1edacb3 \\\\u003Cunknown>\\\\n#22 0x7f6090d8d044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x557af1ee1e23 <unknown>\nE       #1 0x557af1c0a7a7 <unknown>\nE       #2 0x557af1c4ed22 <unknown>\nE       #3 0x557af1c4d267 <unknown>\nE       #4 0x557af1c4b1e8 <unknown>\nE       #5 0x557af1c4a32d <unknown>\nE       #6 0x557af1c3f599 <unknown>\nE       #7 0x557af1c6a012 <unknown>\nE       #8 0x557af1c3efb6 <unknown>\nE       #9 0x557af1c6a1de <unknown>\nE       #10 0x557af1c82369 <unknown>\nE       #11 0x557af1c69de3 <unknown>\nE       #12 0x557af1c3da7b <unknown>\nE       #13 0x557af1c3e81e <unknown>\nE       #14 0x557af1ea3638 <unknown>\nE       #15 0x557af1ea7507 <unknown>\nE       #16 0x557af1eb1c4c <unknown>\nE       #17 0x557af1ea8136 <unknown>\nE       #18 0x557af1e769cf <unknown>\nE       #19 0x557af1ecbb98 <unknown>\nE       #20 0x557af1ecbd68 <unknown>\nE       #21 0x557af1edacb3 <unknown>\nE       #22 0x7f6090d8d044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694047564582,"stop":1694047564674,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694047564674,"stop":1694047564675,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694048538347,"stop":1694048539144,"duration":797},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694048539144,"stop":1694048539144,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694048539145,"stop":1694048545179,"duration":6034},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x557af1ee1e23 <unknown>\n#1 0x557af1c0a7a7 <unknown>\n#2 0x557af1c4ed22 <unknown>\n#3 0x557af1c4d267 <unknown>\n#4 0x557af1c4b1e8 <unknown>\n#5 0x557af1c4a32d <unknown>\n#6 0x557af1c3f599 <unknown>\n#7 0x557af1c6a012 <unknown>\n#8 0x557af1c3efb6 <unknown>\n#9 0x557af1c6a1de <unknown>\n#10 0x557af1c82369 <unknown>\n#11 0x557af1c69de3 <unknown>\n#12 0x557af1c3da7b <unknown>\n#13 0x557af1c3e81e <unknown>\n#14 0x557af1ea3638 <unknown>\n#15 0x557af1ea7507 <unknown>\n#16 0x557af1eb1c4c <unknown>\n#17 0x557af1ea8136 <unknown>\n#18 0x557af1e769cf <unknown>\n#19 0x557af1ecbb98 <unknown>\n#20 0x557af1ecbd68 <unknown>\n#21 0x557af1edacb3 <unknown>\n#22 0x7f6090d8d044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff255d124d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff255661250>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff255628110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x557af1ecbd68 \\\\u003Cunknown>\\\\n#21 0x557af1edacb3 \\\\u003Cunknown>\\\\n#22 0x7f6090d8d044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x557af1ee1e23 <unknown>\nE       #1 0x557af1c0a7a7 <unknown>\nE       #2 0x557af1c4ed22 <unknown>\nE       #3 0x557af1c4d267 <unknown>\nE       #4 0x557af1c4b1e8 <unknown>\nE       #5 0x557af1c4a32d <unknown>\nE       #6 0x557af1c3f599 <unknown>\nE       #7 0x557af1c6a012 <unknown>\nE       #8 0x557af1c3efb6 <unknown>\nE       #9 0x557af1c6a1de <unknown>\nE       #10 0x557af1c82369 <unknown>\nE       #11 0x557af1c69de3 <unknown>\nE       #12 0x557af1c3da7b <unknown>\nE       #13 0x557af1c3e81e <unknown>\nE       #14 0x557af1ea3638 <unknown>\nE       #15 0x557af1ea7507 <unknown>\nE       #16 0x557af1eb1c4c <unknown>\nE       #17 0x557af1ea8136 <unknown>\nE       #18 0x557af1e769cf <unknown>\nE       #19 0x557af1ecbb98 <unknown>\nE       #20 0x557af1ecbd68 <unknown>\nE       #21 0x557af1edacb3 <unknown>\nE       #22 0x7f6090d8d044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1694048545180,"stop":1694048545227,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1694048545308,"stop":1694048545352,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694048546423,"stop":1694048546495,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"e2c27fa50860be15","name":"Screenshot","source":"e2c27fa50860be15.png","type":"image/png","size":79209},{"uid":"2fe6f18eaea54b32","name":"HTML source","source":"2fe6f18eaea54b32.html","type":"text/html","size":638781}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1694048547840,"stop":1694048547915,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1694048547840,"stop":1694048547840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"3048aa0c53ab"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":17,"unknown":0,"total":22},"items":[{"uid":"df116a2ddfaa77cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/50//#testresult/df116a2ddfaa77cf","status":"passed","time":{"start":1693962751825,"stop":1693962762801,"duration":10976}},{"uid":"7361a4e6c945fd39","reportUrl":"https://Nat754.github.io/StroyremAutomation/49//#testresult/7361a4e6c945fd39","status":"passed","time":{"start":1693875818799,"stop":1693875828405,"duration":9606}},{"uid":"30a9f1a954066eb5","reportUrl":"https://Nat754.github.io/StroyremAutomation/48//#testresult/30a9f1a954066eb5","status":"passed","time":{"start":1693789898972,"stop":1693789909377,"duration":10405}},{"uid":"e675350d2a6b448","reportUrl":"https://Nat754.github.io/StroyremAutomation/3//#testresult/e675350d2a6b448","status":"passed","time":{"start":1693730569714,"stop":1693730579378,"duration":9664}},{"uid":"722a376e8d5a3bff","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/722a376e8d5a3bff","status":"passed","time":{"start":1693731393738,"stop":1693731404149,"duration":10411}},{"uid":"e645688366dee697","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/e645688366dee697","status":"passed","time":{"start":1693703764670,"stop":1693703775478,"duration":10808}},{"uid":"a114db981aa0e0de","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/a114db981aa0e0de","status":"passed","time":{"start":1693616940170,"stop":1693616951010,"duration":10840}},{"uid":"bd55b1a57584a9ce","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/bd55b1a57584a9ce","status":"passed","time":{"start":1693530827551,"stop":1693530838079,"duration":10528}},{"uid":"1dd2bf67b5215083","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/1dd2bf67b5215083","status":"passed","time":{"start":1693476637497,"stop":1693476647840,"duration":10343}},{"uid":"a85ca4f2a4957a48","reportUrl":"https://Nat754.github.io/StroyremAutomation/44//#testresult/a85ca4f2a4957a48","status":"passed","time":{"start":1693444074329,"stop":1693444084740,"duration":10411}},{"uid":"e8c4ee094bcc12a9","reportUrl":"https://Nat754.github.io/StroyremAutomation/43//#testresult/e8c4ee094bcc12a9","status":"passed","time":{"start":1693357790116,"stop":1693357800950,"duration":10834}},{"uid":"5687a0ab4f84150c","reportUrl":"https://Nat754.github.io/StroyremAutomation/42//#testresult/5687a0ab4f84150c","status":"passed","time":{"start":1693300584409,"stop":1693300593411,"duration":9002}},{"uid":"e4f2066f3833b4ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/e4f2066f3833b4ea","status":"passed","time":{"start":1693298771912,"stop":1693298781399,"duration":9487}},{"uid":"60388f6998cbb4fc","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/60388f6998cbb4fc","status":"passed","time":{"start":1693271000695,"stop":1693271010218,"duration":9523}},{"uid":"f08488eea0f46193","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/f08488eea0f46193","status":"passed","time":{"start":1693244258792,"stop":1693244269646,"duration":10854}},{"uid":"36be2d89f7709a5c","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/36be2d89f7709a5c","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559413ce0e23 <unknown>\n#1 0x559413a097a7 <unknown>\n#2 0x559413a481d3 <unknown>\n#3 0x559413a482c1 <unknown>\n#4 0x559413a83a04 <unknown>\n#5 0x559413a6903d <unknown>\n#6 0x559413a81369 <unknown>\n#7 0x559413a68de3 <unknown>\n#8 0x559413a3ca7b <unknown>\n#9 0x559413a3d81e <unknown>\n#10 0x559413ca2638 <unknown>\n#11 0x559413ca6507 <unknown>\n#12 0x559413cb0c4c <unknown>\n#13 0x559413ca7136 <unknown>\n#14 0x559413c759cf <unknown>\n#15 0x559413ccab98 <unknown>\n#16 0x559413ccad68 <unknown>\n#17 0x559413cd9cb3 <unknown>\n#18 0x7f1d61d57044 <unknown>","time":{"start":1693184703762,"stop":1693184718932,"duration":15170}},{"uid":"a6aa1bbf718946c9","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/a6aa1bbf718946c9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dab44cee23 <unknown>\n#1 0x55dab41f77a7 <unknown>\n#2 0x55dab42361d3 <unknown>\n#3 0x55dab42362c1 <unknown>\n#4 0x55dab4271a04 <unknown>\n#5 0x55dab425703d <unknown>\n#6 0x55dab426f369 <unknown>\n#7 0x55dab4256de3 <unknown>\n#8 0x55dab422aa7b <unknown>\n#9 0x55dab422b81e <unknown>\n#10 0x55dab4490638 <unknown>\n#11 0x55dab4494507 <unknown>\n#12 0x55dab449ec4c <unknown>\n#13 0x55dab4495136 <unknown>\n#14 0x55dab44639cf <unknown>\n#15 0x55dab44b8b98 <unknown>\n#16 0x55dab44b8d68 <unknown>\n#17 0x55dab44c7cb3 <unknown>\n#18 0x7f61c38b3044 <unknown>","time":{"start":1693170823393,"stop":1693170838578,"duration":15185}},{"uid":"1408ab8c695122ae","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/1408ab8c695122ae","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564a4a8e5e23 <unknown>\n#1 0x564a4a60e7a7 <unknown>\n#2 0x564a4a64d1d3 <unknown>\n#3 0x564a4a64d2c1 <unknown>\n#4 0x564a4a688a04 <unknown>\n#5 0x564a4a66e03d <unknown>\n#6 0x564a4a686369 <unknown>\n#7 0x564a4a66dde3 <unknown>\n#8 0x564a4a641a7b <unknown>\n#9 0x564a4a64281e <unknown>\n#10 0x564a4a8a7638 <unknown>\n#11 0x564a4a8ab507 <unknown>\n#12 0x564a4a8b5c4c <unknown>\n#13 0x564a4a8ac136 <unknown>\n#14 0x564a4a87a9cf <unknown>\n#15 0x564a4a8cfb98 <unknown>\n#16 0x564a4a8cfd68 <unknown>\n#17 0x564a4a8decb3 <unknown>\n#18 0x7f024c7c3044 <unknown>","time":{"start":1693140929920,"stop":1693140945176,"duration":15256}},{"uid":"c4ffa697057e1ce","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/c4ffa697057e1ce","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55c8d0746e23 <unknown>\n#1 0x55c8d046f7a7 <unknown>\n#2 0x55c8d04ae1d3 <unknown>\n#3 0x55c8d04ae2c1 <unknown>\n#4 0x55c8d04e9a04 <unknown>\n#5 0x55c8d04cf03d <unknown>\n#6 0x55c8d04e7369 <unknown>\n#7 0x55c8d04cede3 <unknown>\n#8 0x55c8d04a2a7b <unknown>\n#9 0x55c8d04a381e <unknown>\n#10 0x55c8d0708638 <unknown>\n#11 0x55c8d070c507 <unknown>\n#12 0x55c8d0716c4c <unknown>\n#13 0x55c8d070d136 <unknown>\n#14 0x55c8d06db9cf <unknown>\n#15 0x55c8d0730b98 <unknown>\n#16 0x55c8d0730d68 <unknown>\n#17 0x55c8d073fcb3 <unknown>\n#18 0x7ff86f86e044 <unknown>","time":{"start":1693098363488,"stop":1693098378526,"duration":15038}},{"uid":"318255817c07f5d3","reportUrl":"https://Nat754.github.io/StroyremAutomation/38//#testresult/318255817c07f5d3","status":"passed","time":{"start":1693032151894,"stop":1693032161309,"duration":9415}}]},"tags":["smoke_test"]},"source":"225906613ed8274a.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}