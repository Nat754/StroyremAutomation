{"uid":"cd32f02b99787d85","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"9c158f83f56fa7b7bac987d3d1def5a4","time":{"start":1694048518879,"stop":1694048521328,"duration":2449},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55c51b446e23 <unknown>\n#1 0x55c51b16f7a7 <unknown>\n#2 0x55c51b1b3d22 <unknown>\n#3 0x55c51b1b2267 <unknown>\n#4 0x55c51b1b01e8 <unknown>\n#5 0x55c51b1af32d <unknown>\n#6 0x55c51b1a4599 <unknown>\n#7 0x55c51b1cf012 <unknown>\n#8 0x55c51b1a3fb6 <unknown>\n#9 0x55c51b1cf1de <unknown>\n#10 0x55c51b1e7369 <unknown>\n#11 0x55c51b1cede3 <unknown>\n#12 0x55c51b1a2a7b <unknown>\n#13 0x55c51b1a381e <unknown>\n#14 0x55c51b408638 <unknown>\n#15 0x55c51b40c507 <unknown>\n#16 0x55c51b416c4c <unknown>\n#17 0x55c51b40d136 <unknown>\n#18 0x55c51b3db9cf <unknown>\n#19 0x55c51b430b98 <unknown>\n#20 0x55c51b430d68 <unknown>\n#21 0x55c51b43fcb3 <unknown>\n#22 0x7fde6cdbe044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff255d10ad0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff255d04d50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff256534d90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c51b430d68 \\\\u003Cunknown>\\\\n#21 0x55c51b43fcb3 \\\\u003Cunknown>\\\\n#22 0x7fde6cdbe044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55c51b446e23 <unknown>\nE       #1 0x55c51b16f7a7 <unknown>\nE       #2 0x55c51b1b3d22 <unknown>\nE       #3 0x55c51b1b2267 <unknown>\nE       #4 0x55c51b1b01e8 <unknown>\nE       #5 0x55c51b1af32d <unknown>\nE       #6 0x55c51b1a4599 <unknown>\nE       #7 0x55c51b1cf012 <unknown>\nE       #8 0x55c51b1a3fb6 <unknown>\nE       #9 0x55c51b1cf1de <unknown>\nE       #10 0x55c51b1e7369 <unknown>\nE       #11 0x55c51b1cede3 <unknown>\nE       #12 0x55c51b1a2a7b <unknown>\nE       #13 0x55c51b1a381e <unknown>\nE       #14 0x55c51b408638 <unknown>\nE       #15 0x55c51b40c507 <unknown>\nE       #16 0x55c51b416c4c <unknown>\nE       #17 0x55c51b40d136 <unknown>\nE       #18 0x55c51b3db9cf <unknown>\nE       #19 0x55c51b430b98 <unknown>\nE       #20 0x55c51b430d68 <unknown>\nE       #21 0x55c51b43fcb3 <unknown>\nE       #22 0x7fde6cdbe044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694047564582,"stop":1694047564674,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694047564674,"stop":1694047564675,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694048511567,"stop":1694048512363,"duration":796},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694048512363,"stop":1694048512363,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694048512363,"stop":1694048518878,"duration":6515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55c51b446e23 <unknown>\n#1 0x55c51b16f7a7 <unknown>\n#2 0x55c51b1b3d22 <unknown>\n#3 0x55c51b1b2267 <unknown>\n#4 0x55c51b1b01e8 <unknown>\n#5 0x55c51b1af32d <unknown>\n#6 0x55c51b1a4599 <unknown>\n#7 0x55c51b1cf012 <unknown>\n#8 0x55c51b1a3fb6 <unknown>\n#9 0x55c51b1cf1de <unknown>\n#10 0x55c51b1e7369 <unknown>\n#11 0x55c51b1cede3 <unknown>\n#12 0x55c51b1a2a7b <unknown>\n#13 0x55c51b1a381e <unknown>\n#14 0x55c51b408638 <unknown>\n#15 0x55c51b40c507 <unknown>\n#16 0x55c51b416c4c <unknown>\n#17 0x55c51b40d136 <unknown>\n#18 0x55c51b3db9cf <unknown>\n#19 0x55c51b430b98 <unknown>\n#20 0x55c51b430d68 <unknown>\n#21 0x55c51b43fcb3 <unknown>\n#22 0x7fde6cdbe044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff255d10ad0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff255d04d50>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:368: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff256534d90>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c51b430d68 \\\\u003Cunknown>\\\\n#21 0x55c51b43fcb3 \\\\u003Cunknown>\\\\n#22 0x7fde6cdbe044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55c51b446e23 <unknown>\nE       #1 0x55c51b16f7a7 <unknown>\nE       #2 0x55c51b1b3d22 <unknown>\nE       #3 0x55c51b1b2267 <unknown>\nE       #4 0x55c51b1b01e8 <unknown>\nE       #5 0x55c51b1af32d <unknown>\nE       #6 0x55c51b1a4599 <unknown>\nE       #7 0x55c51b1cf012 <unknown>\nE       #8 0x55c51b1a3fb6 <unknown>\nE       #9 0x55c51b1cf1de <unknown>\nE       #10 0x55c51b1e7369 <unknown>\nE       #11 0x55c51b1cede3 <unknown>\nE       #12 0x55c51b1a2a7b <unknown>\nE       #13 0x55c51b1a381e <unknown>\nE       #14 0x55c51b408638 <unknown>\nE       #15 0x55c51b40c507 <unknown>\nE       #16 0x55c51b416c4c <unknown>\nE       #17 0x55c51b40d136 <unknown>\nE       #18 0x55c51b3db9cf <unknown>\nE       #19 0x55c51b430b98 <unknown>\nE       #20 0x55c51b430d68 <unknown>\nE       #21 0x55c51b43fcb3 <unknown>\nE       #22 0x7fde6cdbe044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1694048518879,"stop":1694048518949,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1694048519023,"stop":1694048519084,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694048520155,"stop":1694048520235,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"cd5c9853eff3b3d4","name":"Screenshot","source":"cd5c9853eff3b3d4.png","type":"image/png","size":129722},{"uid":"bb6adde9bd0d8b94","name":"HTML source","source":"bb6adde9bd0d8b94.html","type":"text/html","size":885775}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1694048521618,"stop":1694048521618,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1694048521618,"stop":1694048521684,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"3048aa0c53ab"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":17,"unknown":0,"total":22},"items":[{"uid":"3dd7cb8a71ba7475","reportUrl":"https://Nat754.github.io/StroyremAutomation/50//#testresult/3dd7cb8a71ba7475","status":"passed","time":{"start":1693962710467,"stop":1693962721211,"duration":10744}},{"uid":"eefd00af4cc56bdd","reportUrl":"https://Nat754.github.io/StroyremAutomation/49//#testresult/eefd00af4cc56bdd","status":"passed","time":{"start":1693875784329,"stop":1693875793961,"duration":9632}},{"uid":"2a9561050cc5e93c","reportUrl":"https://Nat754.github.io/StroyremAutomation/48//#testresult/2a9561050cc5e93c","status":"passed","time":{"start":1693789859716,"stop":1693789869974,"duration":10258}},{"uid":"5b542b8c3606828d","reportUrl":"https://Nat754.github.io/StroyremAutomation/3//#testresult/5b542b8c3606828d","status":"passed","time":{"start":1693730536366,"stop":1693730545940,"duration":9574}},{"uid":"b6c8e1e327049575","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/b6c8e1e327049575","status":"passed","time":{"start":1693731355146,"stop":1693731365523,"duration":10377}},{"uid":"6130e67b4a2bdc3a","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/6130e67b4a2bdc3a","status":"passed","time":{"start":1693703721901,"stop":1693703732889,"duration":10988}},{"uid":"2851e3bdd7e510b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/2851e3bdd7e510b1","status":"passed","time":{"start":1693616897208,"stop":1693616908329,"duration":11121}},{"uid":"ff97d0f4c7cc8dde","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/ff97d0f4c7cc8dde","status":"passed","time":{"start":1693530785257,"stop":1693530795998,"duration":10741}},{"uid":"7ca91f03792ef3ad","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/7ca91f03792ef3ad","status":"passed","time":{"start":1693476620831,"stop":1693476631272,"duration":10441}},{"uid":"6af4acb5a7b98f83","reportUrl":"https://Nat754.github.io/StroyremAutomation/44//#testresult/6af4acb5a7b98f83","status":"passed","time":{"start":1693444033653,"stop":1693444044133,"duration":10480}},{"uid":"513956b1249cdab0","reportUrl":"https://Nat754.github.io/StroyremAutomation/43//#testresult/513956b1249cdab0","status":"passed","time":{"start":1693357747823,"stop":1693357758774,"duration":10951}},{"uid":"461040e4e0d7df30","reportUrl":"https://Nat754.github.io/StroyremAutomation/42//#testresult/461040e4e0d7df30","status":"passed","time":{"start":1693300546124,"stop":1693300555070,"duration":8946}},{"uid":"c11de3b866e0d636","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/c11de3b866e0d636","status":"passed","time":{"start":1693298731574,"stop":1693298741049,"duration":9475}},{"uid":"e01460f4473cdd56","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/e01460f4473cdd56","status":"passed","time":{"start":1693270967737,"stop":1693270977196,"duration":9459}},{"uid":"91c10f23d8ca64bb","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/91c10f23d8ca64bb","status":"passed","time":{"start":1693244216101,"stop":1693244226910,"duration":10809}},{"uid":"f39d3783b175788","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/f39d3783b175788","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d801fb7e23 <unknown>\n#1 0x55d801ce07a7 <unknown>\n#2 0x55d801d1f1d3 <unknown>\n#3 0x55d801d1f2c1 <unknown>\n#4 0x55d801d5aa04 <unknown>\n#5 0x55d801d4003d <unknown>\n#6 0x55d801d58369 <unknown>\n#7 0x55d801d3fde3 <unknown>\n#8 0x55d801d13a7b <unknown>\n#9 0x55d801d1481e <unknown>\n#10 0x55d801f79638 <unknown>\n#11 0x55d801f7d507 <unknown>\n#12 0x55d801f87c4c <unknown>\n#13 0x55d801f7e136 <unknown>\n#14 0x55d801f4c9cf <unknown>\n#15 0x55d801fa1b98 <unknown>\n#16 0x55d801fa1d68 <unknown>\n#17 0x55d801fb0cb3 <unknown>\n#18 0x7f32f6209044 <unknown>","time":{"start":1693184665774,"stop":1693184680943,"duration":15169}},{"uid":"a7a95999a7889495","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/a7a95999a7889495","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564003271e23 <unknown>\n#1 0x564002f9a7a7 <unknown>\n#2 0x564002fd91d3 <unknown>\n#3 0x564002fd92c1 <unknown>\n#4 0x564003014a04 <unknown>\n#5 0x564002ffa03d <unknown>\n#6 0x564003012369 <unknown>\n#7 0x564002ff9de3 <unknown>\n#8 0x564002fcda7b <unknown>\n#9 0x564002fce81e <unknown>\n#10 0x564003233638 <unknown>\n#11 0x564003237507 <unknown>\n#12 0x564003241c4c <unknown>\n#13 0x564003238136 <unknown>\n#14 0x5640032069cf <unknown>\n#15 0x56400325bb98 <unknown>\n#16 0x56400325bd68 <unknown>\n#17 0x56400326acb3 <unknown>\n#18 0x7fc589ded044 <unknown>","time":{"start":1693170781443,"stop":1693170796618,"duration":15175}},{"uid":"6e1ed0d7f594047b","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/6e1ed0d7f594047b","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x560e32b6be23 <unknown>\n#1 0x560e328947a7 <unknown>\n#2 0x560e328d31d3 <unknown>\n#3 0x560e328d32c1 <unknown>\n#4 0x560e3290ea04 <unknown>\n#5 0x560e328f403d <unknown>\n#6 0x560e3290c369 <unknown>\n#7 0x560e328f3de3 <unknown>\n#8 0x560e328c7a7b <unknown>\n#9 0x560e328c881e <unknown>\n#10 0x560e32b2d638 <unknown>\n#11 0x560e32b31507 <unknown>\n#12 0x560e32b3bc4c <unknown>\n#13 0x560e32b32136 <unknown>\n#14 0x560e32b009cf <unknown>\n#15 0x560e32b55b98 <unknown>\n#16 0x560e32b55d68 <unknown>\n#17 0x560e32b64cb3 <unknown>\n#18 0x7f0245442044 <unknown>","time":{"start":1693140892150,"stop":1693140907412,"duration":15262}},{"uid":"376fea7dc45e3783","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/376fea7dc45e3783","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5589426dee23 <unknown>\n#1 0x5589424077a7 <unknown>\n#2 0x5589424461d3 <unknown>\n#3 0x5589424462c1 <unknown>\n#4 0x558942481a04 <unknown>\n#5 0x55894246703d <unknown>\n#6 0x55894247f369 <unknown>\n#7 0x558942466de3 <unknown>\n#8 0x55894243aa7b <unknown>\n#9 0x55894243b81e <unknown>\n#10 0x5589426a0638 <unknown>\n#11 0x5589426a4507 <unknown>\n#12 0x5589426aec4c <unknown>\n#13 0x5589426a5136 <unknown>\n#14 0x5589426739cf <unknown>\n#15 0x5589426c8b98 <unknown>\n#16 0x5589426c8d68 <unknown>\n#17 0x5589426d7cb3 <unknown>\n#18 0x7fa970295044 <unknown>","time":{"start":1693098327248,"stop":1693098342277,"duration":15029}},{"uid":"9c9cbdecb2079f39","reportUrl":"https://Nat754.github.io/StroyremAutomation/38//#testresult/9c9cbdecb2079f39","status":"passed","time":{"start":1693032118079,"stop":1693032127580,"duration":9501}}]},"tags":["smoke_test"]},"source":"cd32f02b99787d85.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/kisti-malyarnye'"]}