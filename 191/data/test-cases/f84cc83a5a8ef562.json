{"uid":"f84cc83a5a8ef562","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"efd25b243308c430f9522a855290012b","time":{"start":1705629668549,"stop":1705629672794,"duration":4245},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x558add0cdf83 <unknown>\n#1 0x558adcd86cf7 <unknown>\n#2 0x558adcd8d2a3 <unknown>\n#3 0x558adcd8f798 <unknown>\n#4 0x558adcd8f8ec <unknown>\n#5 0x558adcddecb1 <unknown>\n#6 0x558adcddc7f4 <unknown>\n#7 0x558adcdd9894 <unknown>\n#8 0x558adcdd84b9 <unknown>\n#9 0x558adcdca313 <unknown>\n#10 0x558adce000b2 <unknown>\n#11 0x558adcdc9b49 <unknown>\n#12 0x558adce004ce <unknown>\n#13 0x558adce1f006 <unknown>\n#14 0x558adcdffe53 <unknown>\n#15 0x558adcdc7dd4 <unknown>\n#16 0x558adcdc91de <unknown>\n#17 0x558add092531 <unknown>\n#18 0x558add096455 <unknown>\n#19 0x558add07ef55 <unknown>\n#20 0x558add0970ef <unknown>\n#21 0x558add06299f <unknown>\n#22 0x558add0bb008 <unknown>\n#23 0x558add0bb1d7 <unknown>\n#24 0x558add0cd124 <unknown>\n#25 0x7f85ea5aa044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1ee844e9d0>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f1ee7db2d10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2]))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1ee7d99b10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x558add0bb1d7 \\\\u003Cunknown>\\\\n#24 0x558add0cd124 \\\\u003Cunknown>\\\\n#25 0x7f85ea5aa044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x558add0cdf83 <unknown>\nE       #1 0x558adcd86cf7 <unknown>\nE       #2 0x558adcd8d2a3 <unknown>\nE       #3 0x558adcd8f798 <unknown>\nE       #4 0x558adcd8f8ec <unknown>\nE       #5 0x558adcddecb1 <unknown>\nE       #6 0x558adcddc7f4 <unknown>\nE       #7 0x558adcdd9894 <unknown>\nE       #8 0x558adcdd84b9 <unknown>\nE       #9 0x558adcdca313 <unknown>\nE       #10 0x558adce000b2 <unknown>\nE       #11 0x558adcdc9b49 <unknown>\nE       #12 0x558adce004ce <unknown>\nE       #13 0x558adce1f006 <unknown>\nE       #14 0x558adcdffe53 <unknown>\nE       #15 0x558adcdc7dd4 <unknown>\nE       #16 0x558adcdc91de <unknown>\nE       #17 0x558add092531 <unknown>\nE       #18 0x558add096455 <unknown>\nE       #19 0x558add07ef55 <unknown>\nE       #20 0x558add0970ef <unknown>\nE       #21 0x558add06299f <unknown>\nE       #22 0x558add0bb008 <unknown>\nE       #23 0x558add0bb1d7 <unknown>\nE       #24 0x558add0cd124 <unknown>\nE       #25 0x7f85ea5aa044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705625534495,"stop":1705625534563,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705625534563,"stop":1705625534563,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705629661966,"stop":1705629662745,"duration":779},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705629662745,"stop":1705629662745,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1705629662746,"stop":1705629668548,"duration":5802},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x558add0cdf83 <unknown>\n#1 0x558adcd86cf7 <unknown>\n#2 0x558adcd8d2a3 <unknown>\n#3 0x558adcd8f798 <unknown>\n#4 0x558adcd8f8ec <unknown>\n#5 0x558adcddecb1 <unknown>\n#6 0x558adcddc7f4 <unknown>\n#7 0x558adcdd9894 <unknown>\n#8 0x558adcdd84b9 <unknown>\n#9 0x558adcdca313 <unknown>\n#10 0x558adce000b2 <unknown>\n#11 0x558adcdc9b49 <unknown>\n#12 0x558adce004ce <unknown>\n#13 0x558adce1f006 <unknown>\n#14 0x558adcdffe53 <unknown>\n#15 0x558adcdc7dd4 <unknown>\n#16 0x558adcdc91de <unknown>\n#17 0x558add092531 <unknown>\n#18 0x558add096455 <unknown>\n#19 0x558add07ef55 <unknown>\n#20 0x558add0970ef <unknown>\n#21 0x558add06299f <unknown>\n#22 0x558add0bb008 <unknown>\n#23 0x558add0bb1d7 <unknown>\n#24 0x558add0cd124 <unknown>\n#25 0x7f85ea5aa044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f1ee844e9d0>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f1ee7db2d10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2]))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f1ee7d99b10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x558add0bb1d7 \\\\u003Cunknown>\\\\n#24 0x558add0cd124 \\\\u003Cunknown>\\\\n#25 0x7f85ea5aa044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x558add0cdf83 <unknown>\nE       #1 0x558adcd86cf7 <unknown>\nE       #2 0x558adcd8d2a3 <unknown>\nE       #3 0x558adcd8f798 <unknown>\nE       #4 0x558adcd8f8ec <unknown>\nE       #5 0x558adcddecb1 <unknown>\nE       #6 0x558adcddc7f4 <unknown>\nE       #7 0x558adcdd9894 <unknown>\nE       #8 0x558adcdd84b9 <unknown>\nE       #9 0x558adcdca313 <unknown>\nE       #10 0x558adce000b2 <unknown>\nE       #11 0x558adcdc9b49 <unknown>\nE       #12 0x558adce004ce <unknown>\nE       #13 0x558adce1f006 <unknown>\nE       #14 0x558adcdffe53 <unknown>\nE       #15 0x558adcdc7dd4 <unknown>\nE       #16 0x558adcdc91de <unknown>\nE       #17 0x558add092531 <unknown>\nE       #18 0x558add096455 <unknown>\nE       #19 0x558add07ef55 <unknown>\nE       #20 0x558add0970ef <unknown>\nE       #21 0x558add06299f <unknown>\nE       #22 0x558add0bb008 <unknown>\nE       #23 0x558add0bb1d7 <unknown>\nE       #24 0x558add0cd124 <unknown>\nE       #25 0x7f85ea5aa044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1705629668549,"stop":1705629668579,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1705629668635,"stop":1705629668664,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1705629669700,"stop":1705629669737,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость цены товара","time":{"start":1705629671770,"stop":1705629671813,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1705629671823,"stop":1705629671871,"duration":48},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"b13db781ad4fefcb","name":"Screenshot","source":"b13db781ad4fefcb.png","type":"image/png","size":126336},{"uid":"fa5b5f33508ef2f4","name":"HTML source","source":"fa5b5f33508ef2f4.html","type":"text/html","size":951960}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1705629672994,"stop":1705629673061,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1705629672994,"stop":1705629672994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"36181a51a6b2"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":118,"unknown":0,"total":122},"items":[{"uid":"c073150450051e9c","reportUrl":"https://Nat754.github.io/StroyremAutomation/190//#testresult/c073150450051e9c","status":"passed","time":{"start":1705543351993,"stop":1705543362252,"duration":10259}},{"uid":"9dc9d054d2f867f8","reportUrl":"https://Nat754.github.io/StroyremAutomation/189//#testresult/9dc9d054d2f867f8","status":"passed","time":{"start":1705456991938,"stop":1705457002195,"duration":10257}},{"uid":"5b10e5f5cb8cd3c","reportUrl":"https://Nat754.github.io/StroyremAutomation/188//#testresult/5b10e5f5cb8cd3c","status":"passed","time":{"start":1705370593278,"stop":1705370601795,"duration":8517}},{"uid":"56b8cc095e359ca1","reportUrl":"https://Nat754.github.io/StroyremAutomation/187//#testresult/56b8cc095e359ca1","status":"passed","time":{"start":1705280756526,"stop":1705280766755,"duration":10229}},{"uid":"20f4a17c41cf8ac8","reportUrl":"https://Nat754.github.io/StroyremAutomation/186//#testresult/20f4a17c41cf8ac8","status":"passed","time":{"start":1705194562703,"stop":1705194572451,"duration":9748}},{"uid":"b746b5d28df9ef78","reportUrl":"https://Nat754.github.io/StroyremAutomation/185//#testresult/b746b5d28df9ef78","status":"passed","time":{"start":1705107852215,"stop":1705107862238,"duration":10023}},{"uid":"736e195f6f67837f","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/736e195f6f67837f","status":"passed","time":{"start":1705021395847,"stop":1705021404890,"duration":9043}},{"uid":"fbf2bdc23c44bb7f","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/fbf2bdc23c44bb7f","status":"passed","time":{"start":1704935082828,"stop":1704935092596,"duration":9768}},{"uid":"ff437e067effcb65","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/ff437e067effcb65","status":"passed","time":{"start":1704848691275,"stop":1704848701050,"duration":9775}},{"uid":"fb47e5451a496ae0","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/fb47e5451a496ae0","status":"passed","time":{"start":1704762115202,"stop":1704762123779,"duration":8577}},{"uid":"ec093cfc4c6212e3","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/ec093cfc4c6212e3","status":"passed","time":{"start":1704675745594,"stop":1704675754110,"duration":8516}},{"uid":"24b62a3e81706b17","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/24b62a3e81706b17","status":"passed","time":{"start":1704589685546,"stop":1704589694945,"duration":9399}},{"uid":"47190dbc85a51b23","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/47190dbc85a51b23","status":"passed","time":{"start":1704502938563,"stop":1704502948172,"duration":9609}},{"uid":"f0f23d530d5d67a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/f0f23d530d5d67a0","status":"passed","time":{"start":1704416472130,"stop":1704416480430,"duration":8300}},{"uid":"99bbc581b73de33e","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/99bbc581b73de33e","status":"passed","time":{"start":1704330064620,"stop":1704330073332,"duration":8712}},{"uid":"339e0e6b937725b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/175//#testresult/339e0e6b937725b3","status":"passed","time":{"start":1704243709715,"stop":1704243718989,"duration":9274}},{"uid":"fd0fcb12db7cc11b","reportUrl":"https://Nat754.github.io/StroyremAutomation/174//#testresult/fd0fcb12db7cc11b","status":"passed","time":{"start":1704157152702,"stop":1704157161138,"duration":8436}},{"uid":"3562880cb628ffcd","reportUrl":"https://Nat754.github.io/StroyremAutomation/173//#testresult/3562880cb628ffcd","status":"passed","time":{"start":1704071107012,"stop":1704071115402,"duration":8390}},{"uid":"33e15d32293d073b","reportUrl":"https://Nat754.github.io/StroyremAutomation/172//#testresult/33e15d32293d073b","status":"passed","time":{"start":1703984627654,"stop":1703984635974,"duration":8320}},{"uid":"9d46d22bb693a61e","reportUrl":"https://Nat754.github.io/StroyremAutomation/171//#testresult/9d46d22bb693a61e","status":"passed","time":{"start":1703897898911,"stop":1703897907559,"duration":8648}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"f84cc83a5a8ef562.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}