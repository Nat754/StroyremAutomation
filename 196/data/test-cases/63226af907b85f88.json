{"uid":"63226af907b85f88","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1706058788195,"stop":1706058790473,"duration":2278},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x55ae6bbacd93 <unknown>\n#1 0x55ae6b890337 <unknown>\n#2 0x55ae6b8e2e2e <unknown>\n#3 0x55ae6b8e0bd0 <unknown>\n#4 0x55ae6b8de44a <unknown>\n#5 0x55ae6b8dd226 <unknown>\n#6 0x55ae6b8d06b7 <unknown>\n#7 0x55ae6b8fe442 <unknown>\n#8 0x55ae6b8d0028 <unknown>\n#9 0x55ae6b8fe60e <unknown>\n#10 0x55ae6b91d12d <unknown>\n#11 0x55ae6b8fe1e3 <unknown>\n#12 0x55ae6b8ce135 <unknown>\n#13 0x55ae6b8cf13e <unknown>\n#14 0x55ae6bb70e4b <unknown>\n#15 0x55ae6bb74dfa <unknown>\n#16 0x55ae6bb5d6d5 <unknown>\n#17 0x55ae6bb75a6f <unknown>\n#18 0x55ae6bb4169f <unknown>\n#19 0x55ae6bb9a098 <unknown>\n#20 0x55ae6bb9a262 <unknown>\n#21 0x55ae6bbabf34 <unknown>\n#22 0x7fb72923f044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fc9699e0690>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fc969228c90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc9693f3150>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55ae6bb9a262 \\\\u003Cunknown>\\\\n#21 0x55ae6bbabf34 \\\\u003Cunknown>\\\\n#22 0x7fb72923f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x55ae6bbacd93 <unknown>\nE       #1 0x55ae6b890337 <unknown>\nE       #2 0x55ae6b8e2e2e <unknown>\nE       #3 0x55ae6b8e0bd0 <unknown>\nE       #4 0x55ae6b8de44a <unknown>\nE       #5 0x55ae6b8dd226 <unknown>\nE       #6 0x55ae6b8d06b7 <unknown>\nE       #7 0x55ae6b8fe442 <unknown>\nE       #8 0x55ae6b8d0028 <unknown>\nE       #9 0x55ae6b8fe60e <unknown>\nE       #10 0x55ae6b91d12d <unknown>\nE       #11 0x55ae6b8fe1e3 <unknown>\nE       #12 0x55ae6b8ce135 <unknown>\nE       #13 0x55ae6b8cf13e <unknown>\nE       #14 0x55ae6bb70e4b <unknown>\nE       #15 0x55ae6bb74dfa <unknown>\nE       #16 0x55ae6bb5d6d5 <unknown>\nE       #17 0x55ae6bb75a6f <unknown>\nE       #18 0x55ae6bb4169f <unknown>\nE       #19 0x55ae6bb9a098 <unknown>\nE       #20 0x55ae6bb9a262 <unknown>\nE       #21 0x55ae6bbabf34 <unknown>\nE       #22 0x7fb72923f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1706057618685,"stop":1706057618756,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1706057618756,"stop":1706057618756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1706058778739,"stop":1706058779514,"duration":775},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1706058779514,"stop":1706058779514,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1706058779515,"stop":1706058788195,"duration":8680},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x55ae6bbacd93 <unknown>\n#1 0x55ae6b890337 <unknown>\n#2 0x55ae6b8e2e2e <unknown>\n#3 0x55ae6b8e0bd0 <unknown>\n#4 0x55ae6b8de44a <unknown>\n#5 0x55ae6b8dd226 <unknown>\n#6 0x55ae6b8d06b7 <unknown>\n#7 0x55ae6b8fe442 <unknown>\n#8 0x55ae6b8d0028 <unknown>\n#9 0x55ae6b8fe60e <unknown>\n#10 0x55ae6b91d12d <unknown>\n#11 0x55ae6b8fe1e3 <unknown>\n#12 0x55ae6b8ce135 <unknown>\n#13 0x55ae6b8cf13e <unknown>\n#14 0x55ae6bb70e4b <unknown>\n#15 0x55ae6bb74dfa <unknown>\n#16 0x55ae6bb5d6d5 <unknown>\n#17 0x55ae6bb75a6f <unknown>\n#18 0x55ae6bb4169f <unknown>\n#19 0x55ae6bb9a098 <unknown>\n#20 0x55ae6bb9a262 <unknown>\n#21 0x55ae6bbabf34 <unknown>\n#22 0x7fb72923f044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fc9699e0690>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fc969228c90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc9693f3150>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55ae6bb9a262 \\\\u003Cunknown>\\\\n#21 0x55ae6bbabf34 \\\\u003Cunknown>\\\\n#22 0x7fb72923f044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=121.0.6167.85)\nE       Stacktrace:\nE       #0 0x55ae6bbacd93 <unknown>\nE       #1 0x55ae6b890337 <unknown>\nE       #2 0x55ae6b8e2e2e <unknown>\nE       #3 0x55ae6b8e0bd0 <unknown>\nE       #4 0x55ae6b8de44a <unknown>\nE       #5 0x55ae6b8dd226 <unknown>\nE       #6 0x55ae6b8d06b7 <unknown>\nE       #7 0x55ae6b8fe442 <unknown>\nE       #8 0x55ae6b8d0028 <unknown>\nE       #9 0x55ae6b8fe60e <unknown>\nE       #10 0x55ae6b91d12d <unknown>\nE       #11 0x55ae6b8fe1e3 <unknown>\nE       #12 0x55ae6b8ce135 <unknown>\nE       #13 0x55ae6b8cf13e <unknown>\nE       #14 0x55ae6bb70e4b <unknown>\nE       #15 0x55ae6bb74dfa <unknown>\nE       #16 0x55ae6bb5d6d5 <unknown>\nE       #17 0x55ae6bb75a6f <unknown>\nE       #18 0x55ae6bb4169f <unknown>\nE       #19 0x55ae6bb9a098 <unknown>\nE       #20 0x55ae6bb9a262 <unknown>\nE       #21 0x55ae6bbabf34 <unknown>\nE       #22 0x7fb72923f044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1706058788195,"stop":1706058788233,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1706058788297,"stop":1706058788324,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1706058789361,"stop":1706058789405,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"bf0166fdc994a958","name":"Screenshot","source":"bf0166fdc994a958.png","type":"image/png","size":63536},{"uid":"10757e592eae74b3","name":"HTML source","source":"10757e592eae74b3.html","type":"text/html","size":951528}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1706058790683,"stop":1706058790683,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1706058790684,"stop":1706058790751,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"2795bba82f4e"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":159,"unknown":0,"total":162},"items":[{"uid":"c089fc10be7c8f44","reportUrl":"https://Nat754.github.io/StroyremAutomation/195//#testresult/c089fc10be7c8f44","status":"passed","time":{"start":1705975640548,"stop":1705975648708,"duration":8160}},{"uid":"1a4bc26d7a33dff0","reportUrl":"https://Nat754.github.io/StroyremAutomation/194//#testresult/1a4bc26d7a33dff0","status":"passed","time":{"start":1705889434628,"stop":1705889442518,"duration":7890}},{"uid":"48c2e966b54c7958","reportUrl":"https://Nat754.github.io/StroyremAutomation/193//#testresult/48c2e966b54c7958","status":"passed","time":{"start":1705803084947,"stop":1705803093286,"duration":8339}},{"uid":"70a2d9d2da898530","reportUrl":"https://Nat754.github.io/StroyremAutomation/192//#testresult/70a2d9d2da898530","status":"passed","time":{"start":1705716331549,"stop":1705716339504,"duration":7955}},{"uid":"f67bd033b95668e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/191//#testresult/f67bd033b95668e1","status":"passed","time":{"start":1705629976769,"stop":1705629984691,"duration":7922}},{"uid":"3eb1e25dac10624c","reportUrl":"https://Nat754.github.io/StroyremAutomation/190//#testresult/3eb1e25dac10624c","status":"passed","time":{"start":1705543711391,"stop":1705543721177,"duration":9786}},{"uid":"7ccc94687eef1615","reportUrl":"https://Nat754.github.io/StroyremAutomation/189//#testresult/7ccc94687eef1615","status":"passed","time":{"start":1705457385742,"stop":1705457395195,"duration":9453}},{"uid":"de73c439af38f768","reportUrl":"https://Nat754.github.io/StroyremAutomation/188//#testresult/de73c439af38f768","status":"passed","time":{"start":1705370902977,"stop":1705370910946,"duration":7969}},{"uid":"a95941159424d849","reportUrl":"https://Nat754.github.io/StroyremAutomation/187//#testresult/a95941159424d849","status":"passed","time":{"start":1705281093431,"stop":1705281102919,"duration":9488}},{"uid":"304b96c44adce56","reportUrl":"https://Nat754.github.io/StroyremAutomation/186//#testresult/304b96c44adce56","status":"passed","time":{"start":1705194949588,"stop":1705194959121,"duration":9533}},{"uid":"f712aee59ff2460b","reportUrl":"https://Nat754.github.io/StroyremAutomation/185//#testresult/f712aee59ff2460b","status":"passed","time":{"start":1705108204889,"stop":1705108214829,"duration":9940}},{"uid":"f5b4aa2bd67b05aa","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/f5b4aa2bd67b05aa","status":"passed","time":{"start":1705021718681,"stop":1705021727074,"duration":8393}},{"uid":"6e0bacf7832ea382","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/6e0bacf7832ea382","status":"passed","time":{"start":1704935453117,"stop":1704935461721,"duration":8604}},{"uid":"c12de0ad6c0a0be1","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/c12de0ad6c0a0be1","status":"passed","time":{"start":1704849063455,"stop":1704849072006,"duration":8551}},{"uid":"2b283eafa0a3755a","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/2b283eafa0a3755a","status":"passed","time":{"start":1704762415016,"stop":1704762422934,"duration":7918}},{"uid":"c623b79d0d08240c","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/c623b79d0d08240c","status":"passed","time":{"start":1704676052460,"stop":1704676060262,"duration":7802}},{"uid":"2e555ecf0df75187","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/2e555ecf0df75187","status":"passed","time":{"start":1704590054830,"stop":1704590063501,"duration":8671}},{"uid":"90c1853517ef6aa7","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/90c1853517ef6aa7","status":"passed","time":{"start":1704503309010,"stop":1704503317961,"duration":8951}},{"uid":"bc13055b526db486","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/bc13055b526db486","status":"passed","time":{"start":1704416776160,"stop":1704416783995,"duration":7835}},{"uid":"26fd12706b672d3c","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/26fd12706b672d3c","status":"passed","time":{"start":1704330378434,"stop":1704330386198,"duration":7764}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"63226af907b85f88.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}