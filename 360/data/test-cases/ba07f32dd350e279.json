{"uid":"ba07f32dd350e279","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"20a229ea56dbfac299ce8155fae6537d","time":{"start":1720228448082,"stop":1720228450366,"duration":2284},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x564ffde2ec7a <unknown>\n#1 0x564ffdb11e2c <unknown>\n#2 0x564ffdb65406 <unknown>\n#3 0x564ffdb63246 <unknown>\n#4 0x564ffdb60c27 <unknown>\n#5 0x564ffdb5fa60 <unknown>\n#6 0x564ffdb5315f <unknown>\n#7 0x564ffdb815c2 <unknown>\n#8 0x564ffdb52ad9 <unknown>\n#9 0x564ffdb8178e <unknown>\n#10 0x564ffdba0303 <unknown>\n#11 0x564ffdb81363 <unknown>\n#12 0x564ffdb51247 <unknown>\n#13 0x564ffdb51b9e <unknown>\n#14 0x564ffddf524b <unknown>\n#15 0x564ffddf92f1 <unknown>\n#16 0x564ffdde0afe <unknown>\n#17 0x564ffddf9e52 <unknown>\n#18 0x564ffddc579f <unknown>\n#19 0x564ffde1e638 <unknown>\n#20 0x564ffde1e810 <unknown>\n#21 0x564ffde2ddac <unknown>\n#22 0x7f78a25d6134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f18a2279050>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f18a2ecb8d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f18a2de7250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564ffde1e810 \\\\u003Cunknown>\\\\n#21 0x564ffde2ddac \\\\u003Cunknown>\\\\n#22 0x7f78a25d6134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x564ffde2ec7a <unknown>\nE       #1 0x564ffdb11e2c <unknown>\nE       #2 0x564ffdb65406 <unknown>\nE       #3 0x564ffdb63246 <unknown>\nE       #4 0x564ffdb60c27 <unknown>\nE       #5 0x564ffdb5fa60 <unknown>\nE       #6 0x564ffdb5315f <unknown>\nE       #7 0x564ffdb815c2 <unknown>\nE       #8 0x564ffdb52ad9 <unknown>\nE       #9 0x564ffdb8178e <unknown>\nE       #10 0x564ffdba0303 <unknown>\nE       #11 0x564ffdb81363 <unknown>\nE       #12 0x564ffdb51247 <unknown>\nE       #13 0x564ffdb51b9e <unknown>\nE       #14 0x564ffddf524b <unknown>\nE       #15 0x564ffddf92f1 <unknown>\nE       #16 0x564ffdde0afe <unknown>\nE       #17 0x564ffddf9e52 <unknown>\nE       #18 0x564ffddc579f <unknown>\nE       #19 0x564ffde1e638 <unknown>\nE       #20 0x564ffde1e810 <unknown>\nE       #21 0x564ffde2ddac <unknown>\nE       #22 0x7f78a25d6134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720227228760,"stop":1720227228827,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1720227228828,"stop":1720227228828,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1720228439016,"stop":1720228439702,"duration":686},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1720228439702,"stop":1720228439702,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1720228439702,"stop":1720228448081,"duration":8379},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x564ffde2ec7a <unknown>\n#1 0x564ffdb11e2c <unknown>\n#2 0x564ffdb65406 <unknown>\n#3 0x564ffdb63246 <unknown>\n#4 0x564ffdb60c27 <unknown>\n#5 0x564ffdb5fa60 <unknown>\n#6 0x564ffdb5315f <unknown>\n#7 0x564ffdb815c2 <unknown>\n#8 0x564ffdb52ad9 <unknown>\n#9 0x564ffdb8178e <unknown>\n#10 0x564ffdba0303 <unknown>\n#11 0x564ffdb81363 <unknown>\n#12 0x564ffdb51247 <unknown>\n#13 0x564ffdb51b9e <unknown>\n#14 0x564ffddf524b <unknown>\n#15 0x564ffddf92f1 <unknown>\n#16 0x564ffdde0afe <unknown>\n#17 0x564ffddf9e52 <unknown>\n#18 0x564ffddc579f <unknown>\n#19 0x564ffde1e638 <unknown>\n#20 0x564ffde1e810 <unknown>\n#21 0x564ffde2ddac <unknown>\n#22 0x7f78a25d6134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f18a2279050>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f18a2ecb8d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f18a2de7250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564ffde1e810 \\\\u003Cunknown>\\\\n#21 0x564ffde2ddac \\\\u003Cunknown>\\\\n#22 0x7f78a25d6134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x564ffde2ec7a <unknown>\nE       #1 0x564ffdb11e2c <unknown>\nE       #2 0x564ffdb65406 <unknown>\nE       #3 0x564ffdb63246 <unknown>\nE       #4 0x564ffdb60c27 <unknown>\nE       #5 0x564ffdb5fa60 <unknown>\nE       #6 0x564ffdb5315f <unknown>\nE       #7 0x564ffdb815c2 <unknown>\nE       #8 0x564ffdb52ad9 <unknown>\nE       #9 0x564ffdb8178e <unknown>\nE       #10 0x564ffdba0303 <unknown>\nE       #11 0x564ffdb81363 <unknown>\nE       #12 0x564ffdb51247 <unknown>\nE       #13 0x564ffdb51b9e <unknown>\nE       #14 0x564ffddf524b <unknown>\nE       #15 0x564ffddf92f1 <unknown>\nE       #16 0x564ffdde0afe <unknown>\nE       #17 0x564ffddf9e52 <unknown>\nE       #18 0x564ffddc579f <unknown>\nE       #19 0x564ffde1e638 <unknown>\nE       #20 0x564ffde1e810 <unknown>\nE       #21 0x564ffde2ddac <unknown>\nE       #22 0x7f78a25d6134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1720228448082,"stop":1720228448112,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1720228448169,"stop":1720228448207,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1720228449243,"stop":1720228449282,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"db5739d394ef793f","name":"Screenshot","source":"db5739d394ef793f.png","type":"image/png","size":88567},{"uid":"f28e2de5c021c956","name":"HTML source","source":"f28e2de5c021c956.html","type":"text/html","size":722508}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1720228450511,"stop":1720228450511,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1720228450512,"stop":1720228450584,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"2eadecd748a6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":1,"skipped":0,"passed":22,"unknown":0,"total":38},"items":[{"uid":"78b2c7fcd2161787","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/78b2c7fcd2161787","status":"passed","time":{"start":1720142035750,"stop":1720142047808,"duration":12058}},{"uid":"30ab7bbac6608796","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/30ab7bbac6608796","status":"passed","time":{"start":1720055716980,"stop":1720055729038,"duration":12058}},{"uid":"3d4e8b59e2851182","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/3d4e8b59e2851182","status":"passed","time":{"start":1719969366704,"stop":1719969379414,"duration":12710}},{"uid":"27543bcdea8dd6b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/27543bcdea8dd6b3","status":"passed","time":{"start":1719882953129,"stop":1719882964936,"duration":11807}},{"uid":"df3489a7c872768d","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/df3489a7c872768d","status":"passed","time":{"start":1719796777903,"stop":1719796788862,"duration":10959}},{"uid":"b1a594bfa966bbbd","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/b1a594bfa966bbbd","status":"passed","time":{"start":1719710301601,"stop":1719710312714,"duration":11113}},{"uid":"d16d9b774a220c3a","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/d16d9b774a220c3a","status":"passed","time":{"start":1719623596590,"stop":1719623608257,"duration":11667}},{"uid":"9e0ce754230fd8b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/9e0ce754230fd8b3","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719537505373,"stop":1719537517540,"duration":12167}},{"uid":"f84a61ed29d18df","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/f84a61ed29d18df","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719450899914,"stop":1719450912186,"duration":12272}},{"uid":"70cccf74687b502","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/70cccf74687b502","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719364433183,"stop":1719364444903,"duration":11720}},{"uid":"b30807d59680136b","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/b30807d59680136b","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719278287927,"stop":1719278301272,"duration":13345}},{"uid":"c71d25fbe511626f","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/c71d25fbe511626f","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719191813741,"stop":1719191830467,"duration":16726}},{"uid":"7f63851174ccf06a","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/7f63851174ccf06a","status":"passed","time":{"start":1719105534758,"stop":1719105547087,"duration":12329}},{"uid":"544c78796e38962f","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/544c78796e38962f","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1719018965885,"stop":1719018978518,"duration":12633}},{"uid":"7594bad038a7a8c9","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/7594bad038a7a8c9","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718932705207,"stop":1718932717569,"duration":12362}},{"uid":"90134dec2bd6a692","reportUrl":"https://Nat754.github.io/StroyremAutomation/344//#testresult/90134dec2bd6a692","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718845967981,"stop":1718845980644,"duration":12663}},{"uid":"4f4373bf73559036","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/4f4373bf73559036","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718759966059,"stop":1718759978318,"duration":12259}},{"uid":"3b0ece9fb944e8b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/3b0ece9fb944e8b6","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718673316234,"stop":1718673328875,"duration":12641}},{"uid":"f9804cfe0f793f31","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/f9804cfe0f793f31","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718587235894,"stop":1718587248039,"duration":12145}},{"uid":"629a93649b3a6a02","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/629a93649b3a6a02","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1718500934482,"stop":1718500947849,"duration":13367}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"ba07f32dd350e279.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}