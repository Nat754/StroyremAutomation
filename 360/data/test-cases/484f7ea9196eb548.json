{"uid":"484f7ea9196eb548","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1720228279907,"stop":1720228282192,"duration":2285},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55fc5d029c7a <unknown>\n#1 0x55fc5cd0ce2c <unknown>\n#2 0x55fc5cd60406 <unknown>\n#3 0x55fc5cd5e246 <unknown>\n#4 0x55fc5cd5bc27 <unknown>\n#5 0x55fc5cd5aa60 <unknown>\n#6 0x55fc5cd4e15f <unknown>\n#7 0x55fc5cd7c5c2 <unknown>\n#8 0x55fc5cd4dad9 <unknown>\n#9 0x55fc5cd7c78e <unknown>\n#10 0x55fc5cd9b303 <unknown>\n#11 0x55fc5cd7c363 <unknown>\n#12 0x55fc5cd4c247 <unknown>\n#13 0x55fc5cd4cb9e <unknown>\n#14 0x55fc5cff024b <unknown>\n#15 0x55fc5cff42f1 <unknown>\n#16 0x55fc5cfdbafe <unknown>\n#17 0x55fc5cff4e52 <unknown>\n#18 0x55fc5cfc079f <unknown>\n#19 0x55fc5d019638 <unknown>\n#20 0x55fc5d019810 <unknown>\n#21 0x55fc5d028dac <unknown>\n#22 0x7f48ba6c9134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f18a21b8850>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f18a1202310>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f18a2ec86d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fc5d019810 \\\\u003Cunknown>\\\\n#21 0x55fc5d028dac \\\\u003Cunknown>\\\\n#22 0x7f48ba6c9134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55fc5d029c7a <unknown>\nE       #1 0x55fc5cd0ce2c <unknown>\nE       #2 0x55fc5cd60406 <unknown>\nE       #3 0x55fc5cd5e246 <unknown>\nE       #4 0x55fc5cd5bc27 <unknown>\nE       #5 0x55fc5cd5aa60 <unknown>\nE       #6 0x55fc5cd4e15f <unknown>\nE       #7 0x55fc5cd7c5c2 <unknown>\nE       #8 0x55fc5cd4dad9 <unknown>\nE       #9 0x55fc5cd7c78e <unknown>\nE       #10 0x55fc5cd9b303 <unknown>\nE       #11 0x55fc5cd7c363 <unknown>\nE       #12 0x55fc5cd4c247 <unknown>\nE       #13 0x55fc5cd4cb9e <unknown>\nE       #14 0x55fc5cff024b <unknown>\nE       #15 0x55fc5cff42f1 <unknown>\nE       #16 0x55fc5cfdbafe <unknown>\nE       #17 0x55fc5cff4e52 <unknown>\nE       #18 0x55fc5cfc079f <unknown>\nE       #19 0x55fc5d019638 <unknown>\nE       #20 0x55fc5d019810 <unknown>\nE       #21 0x55fc5d028dac <unknown>\nE       #22 0x7f48ba6c9134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720227228760,"stop":1720227228827,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1720227228828,"stop":1720227228828,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1720228270439,"stop":1720228271127,"duration":688},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1720228271128,"stop":1720228271128,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1720228271128,"stop":1720228279906,"duration":8778},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55fc5d029c7a <unknown>\n#1 0x55fc5cd0ce2c <unknown>\n#2 0x55fc5cd60406 <unknown>\n#3 0x55fc5cd5e246 <unknown>\n#4 0x55fc5cd5bc27 <unknown>\n#5 0x55fc5cd5aa60 <unknown>\n#6 0x55fc5cd4e15f <unknown>\n#7 0x55fc5cd7c5c2 <unknown>\n#8 0x55fc5cd4dad9 <unknown>\n#9 0x55fc5cd7c78e <unknown>\n#10 0x55fc5cd9b303 <unknown>\n#11 0x55fc5cd7c363 <unknown>\n#12 0x55fc5cd4c247 <unknown>\n#13 0x55fc5cd4cb9e <unknown>\n#14 0x55fc5cff024b <unknown>\n#15 0x55fc5cff42f1 <unknown>\n#16 0x55fc5cfdbafe <unknown>\n#17 0x55fc5cff4e52 <unknown>\n#18 0x55fc5cfc079f <unknown>\n#19 0x55fc5d019638 <unknown>\n#20 0x55fc5d019810 <unknown>\n#21 0x55fc5d028dac <unknown>\n#22 0x7f48ba6c9134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f18a21b8850>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f18a1202310>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f18a2ec86d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55fc5d019810 \\\\u003Cunknown>\\\\n#21 0x55fc5d028dac \\\\u003Cunknown>\\\\n#22 0x7f48ba6c9134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55fc5d029c7a <unknown>\nE       #1 0x55fc5cd0ce2c <unknown>\nE       #2 0x55fc5cd60406 <unknown>\nE       #3 0x55fc5cd5e246 <unknown>\nE       #4 0x55fc5cd5bc27 <unknown>\nE       #5 0x55fc5cd5aa60 <unknown>\nE       #6 0x55fc5cd4e15f <unknown>\nE       #7 0x55fc5cd7c5c2 <unknown>\nE       #8 0x55fc5cd4dad9 <unknown>\nE       #9 0x55fc5cd7c78e <unknown>\nE       #10 0x55fc5cd9b303 <unknown>\nE       #11 0x55fc5cd7c363 <unknown>\nE       #12 0x55fc5cd4c247 <unknown>\nE       #13 0x55fc5cd4cb9e <unknown>\nE       #14 0x55fc5cff024b <unknown>\nE       #15 0x55fc5cff42f1 <unknown>\nE       #16 0x55fc5cfdbafe <unknown>\nE       #17 0x55fc5cff4e52 <unknown>\nE       #18 0x55fc5cfc079f <unknown>\nE       #19 0x55fc5d019638 <unknown>\nE       #20 0x55fc5d019810 <unknown>\nE       #21 0x55fc5d028dac <unknown>\nE       #22 0x7f48ba6c9134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1720228279907,"stop":1720228279940,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1720228280003,"stop":1720228280031,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1720228281069,"stop":1720228281109,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"14f7e3a5630921e8","name":"Screenshot","source":"14f7e3a5630921e8.png","type":"image/png","size":55833},{"uid":"ae87e1891e1828ef","name":"HTML source","source":"ae87e1891e1828ef.html","type":"text/html","size":940611}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1720228282379,"stop":1720228282379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1720228282379,"stop":1720228282450,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"2eadecd748a6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":31,"unknown":0,"total":38},"items":[{"uid":"e072cc40b3747629","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/e072cc40b3747629","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x5589cc71ec7a <unknown>\n#1 0x5589cc401e2c <unknown>\n#2 0x5589cc455406 <unknown>\n#3 0x5589cc453246 <unknown>\n#4 0x5589cc450c27 <unknown>\n#5 0x5589cc44fa60 <unknown>\n#6 0x5589cc44315f <unknown>\n#7 0x5589cc4715c2 <unknown>\n#8 0x5589cc442ad9 <unknown>\n#9 0x5589cc47178e <unknown>\n#10 0x5589cc490303 <unknown>\n#11 0x5589cc471363 <unknown>\n#12 0x5589cc441247 <unknown>\n#13 0x5589cc441b9e <unknown>\n#14 0x5589cc6e524b <unknown>\n#15 0x5589cc6e92f1 <unknown>\n#16 0x5589cc6d0afe <unknown>\n#17 0x5589cc6e9e52 <unknown>\n#18 0x5589cc6b579f <unknown>\n#19 0x5589cc70e638 <unknown>\n#20 0x5589cc70e810 <unknown>\n#21 0x5589cc71ddac <unknown>\n#22 0x7f064ac99134 <unknown>","time":{"start":1720141880385,"stop":1720141882679,"duration":2294}},{"uid":"36e31c5e82b0675a","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/36e31c5e82b0675a","status":"passed","time":{"start":1720055550117,"stop":1720055558640,"duration":8523}},{"uid":"e043f95381f6c663","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/e043f95381f6c663","status":"passed","time":{"start":1719969200448,"stop":1719969210781,"duration":10333}},{"uid":"7a686790deb975","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/7a686790deb975","status":"passed","time":{"start":1719882789136,"stop":1719882798858,"duration":9722}},{"uid":"75c1732489f5e912","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/75c1732489f5e912","status":"passed","time":{"start":1719796625204,"stop":1719796634351,"duration":9147}},{"uid":"72dd78528393161d","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/72dd78528393161d","status":"passed","time":{"start":1719710147297,"stop":1719710155198,"duration":7901}},{"uid":"6ba9690e7d1f9fdd","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/6ba9690e7d1f9fdd","status":"passed","time":{"start":1719623434835,"stop":1719623444029,"duration":9194}},{"uid":"e9d251659dafd2c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/e9d251659dafd2c4","status":"passed","time":{"start":1719537314003,"stop":1719537324114,"duration":10111}},{"uid":"ee3fe7f87cf20e17","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/ee3fe7f87cf20e17","status":"passed","time":{"start":1719450735222,"stop":1719450744315,"duration":9093}},{"uid":"6c2227ce4ceff24b","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/6c2227ce4ceff24b","status":"passed","time":{"start":1719364279060,"stop":1719364287429,"duration":8369}},{"uid":"e356a3f7ce129438","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/e356a3f7ce129438","status":"passed","time":{"start":1719278093567,"stop":1719278103677,"duration":10110}},{"uid":"ae0e0337f62b4bcc","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/ae0e0337f62b4bcc","status":"passed","time":{"start":1719191644266,"stop":1719191654285,"duration":10019}},{"uid":"6035ae27a9964824","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/6035ae27a9964824","status":"passed","time":{"start":1719105367294,"stop":1719105377361,"duration":10067}},{"uid":"fc52558795a9506a","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/fc52558795a9506a","status":"passed","time":{"start":1719018784509,"stop":1719018795145,"duration":10636}},{"uid":"de573daa47a9d49","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/de573daa47a9d49","status":"passed","time":{"start":1718932510702,"stop":1718932521803,"duration":11101}},{"uid":"9daa5028614b61a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/344//#testresult/9daa5028614b61a5","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x55646344b70a <unknown>\n#1 0x55646312e0dc <unknown>\n#2 0x5564631816c6 <unknown>\n#3 0x55646317f516 <unknown>\n#4 0x55646317cef7 <unknown>\n#5 0x55646317bd2c <unknown>\n#6 0x55646316f40f <unknown>\n#7 0x55646319d872 <unknown>\n#8 0x55646316ed89 <unknown>\n#9 0x55646319da3e <unknown>\n#10 0x5564631bc5c3 <unknown>\n#11 0x55646319d613 <unknown>\n#12 0x55646316d4f7 <unknown>\n#13 0x55646316de4e <unknown>\n#14 0x5564634118db <unknown>\n#15 0x556463415981 <unknown>\n#16 0x5564633fd3ce <unknown>\n#17 0x5564634164e2 <unknown>\n#18 0x5564633e1d2f <unknown>\n#19 0x55646343b108 <unknown>\n#20 0x55646343b2e0 <unknown>\n#21 0x55646344a83c <unknown>\n#22 0x7fc6bd3e9134 <unknown>","time":{"start":1718845811336,"stop":1718845813688,"duration":2352}},{"uid":"6121fe71bee87da8","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/6121fe71bee87da8","status":"passed","time":{"start":1718759764707,"stop":1718759775767,"duration":11060}},{"uid":"88c8a50e9bb78cb8","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/88c8a50e9bb78cb8","status":"passed","time":{"start":1718673153787,"stop":1718673163160,"duration":9373}},{"uid":"8769584d217513ff","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/8769584d217513ff","status":"passed","time":{"start":1718587040975,"stop":1718587050395,"duration":9420}},{"uid":"4f1a1f1afe34054d","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/4f1a1f1afe34054d","status":"passed","time":{"start":1718500740054,"stop":1718500749786,"duration":9732}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"484f7ea9196eb548.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}