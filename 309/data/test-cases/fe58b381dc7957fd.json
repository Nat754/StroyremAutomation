{"uid":"fe58b381dc7957fd","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"20a229ea56dbfac299ce8155fae6537d","time":{"start":1715822104213,"stop":1715822106490,"duration":2277},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x560830eececa <unknown>\n#1 0x560830bd645c <unknown>\n#2 0x560830c29336 <unknown>\n#3 0x560830c27176 <unknown>\n#4 0x560830c24b57 <unknown>\n#5 0x560830c2397c <unknown>\n#6 0x560830c170ff <unknown>\n#7 0x560830c454b2 <unknown>\n#8 0x560830c16a79 <unknown>\n#9 0x560830c4567e <unknown>\n#10 0x560830c642cc <unknown>\n#11 0x560830c45253 <unknown>\n#12 0x560830c151c7 <unknown>\n#13 0x560830c15b3e <unknown>\n#14 0x560830eb330b <unknown>\n#15 0x560830eb73b7 <unknown>\n#16 0x560830e9fe3e <unknown>\n#17 0x560830eb7e82 <unknown>\n#18 0x560830e847df <unknown>\n#19 0x560830edc1b8 <unknown>\n#20 0x560830edc38b <unknown>\n#21 0x560830eebffc <unknown>\n#22 0x7fd5c69ce134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f923a045650>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9238da62d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238da4cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560830edc38b \\\\u003Cunknown>\\\\n#21 0x560830eebffc \\\\u003Cunknown>\\\\n#22 0x7fd5c69ce134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x560830eececa <unknown>\nE       #1 0x560830bd645c <unknown>\nE       #2 0x560830c29336 <unknown>\nE       #3 0x560830c27176 <unknown>\nE       #4 0x560830c24b57 <unknown>\nE       #5 0x560830c2397c <unknown>\nE       #6 0x560830c170ff <unknown>\nE       #7 0x560830c454b2 <unknown>\nE       #8 0x560830c16a79 <unknown>\nE       #9 0x560830c4567e <unknown>\nE       #10 0x560830c642cc <unknown>\nE       #11 0x560830c45253 <unknown>\nE       #12 0x560830c151c7 <unknown>\nE       #13 0x560830c15b3e <unknown>\nE       #14 0x560830eb330b <unknown>\nE       #15 0x560830eb73b7 <unknown>\nE       #16 0x560830e9fe3e <unknown>\nE       #17 0x560830eb7e82 <unknown>\nE       #18 0x560830e847df <unknown>\nE       #19 0x560830edc1b8 <unknown>\nE       #20 0x560830edc38b <unknown>\nE       #21 0x560830eebffc <unknown>\nE       #22 0x7fd5c69ce134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715820760269,"stop":1715820760337,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1715820760337,"stop":1715820760337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715822093042,"stop":1715822093746,"duration":704},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1715822093746,"stop":1715822104213,"duration":10467},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1715822093746,"stop":1715822093746,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x560830eececa <unknown>\n#1 0x560830bd645c <unknown>\n#2 0x560830c29336 <unknown>\n#3 0x560830c27176 <unknown>\n#4 0x560830c24b57 <unknown>\n#5 0x560830c2397c <unknown>\n#6 0x560830c170ff <unknown>\n#7 0x560830c454b2 <unknown>\n#8 0x560830c16a79 <unknown>\n#9 0x560830c4567e <unknown>\n#10 0x560830c642cc <unknown>\n#11 0x560830c45253 <unknown>\n#12 0x560830c151c7 <unknown>\n#13 0x560830c15b3e <unknown>\n#14 0x560830eb330b <unknown>\n#15 0x560830eb73b7 <unknown>\n#16 0x560830e9fe3e <unknown>\n#17 0x560830eb7e82 <unknown>\n#18 0x560830e847df <unknown>\n#19 0x560830edc1b8 <unknown>\n#20 0x560830edc38b <unknown>\n#21 0x560830eebffc <unknown>\n#22 0x7fd5c69ce134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f923a045650>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9238da62d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238da4cd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x560830edc38b \\\\u003Cunknown>\\\\n#21 0x560830eebffc \\\\u003Cunknown>\\\\n#22 0x7fd5c69ce134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x560830eececa <unknown>\nE       #1 0x560830bd645c <unknown>\nE       #2 0x560830c29336 <unknown>\nE       #3 0x560830c27176 <unknown>\nE       #4 0x560830c24b57 <unknown>\nE       #5 0x560830c2397c <unknown>\nE       #6 0x560830c170ff <unknown>\nE       #7 0x560830c454b2 <unknown>\nE       #8 0x560830c16a79 <unknown>\nE       #9 0x560830c4567e <unknown>\nE       #10 0x560830c642cc <unknown>\nE       #11 0x560830c45253 <unknown>\nE       #12 0x560830c151c7 <unknown>\nE       #13 0x560830c15b3e <unknown>\nE       #14 0x560830eb330b <unknown>\nE       #15 0x560830eb73b7 <unknown>\nE       #16 0x560830e9fe3e <unknown>\nE       #17 0x560830eb7e82 <unknown>\nE       #18 0x560830e847df <unknown>\nE       #19 0x560830edc1b8 <unknown>\nE       #20 0x560830edc38b <unknown>\nE       #21 0x560830eebffc <unknown>\nE       #22 0x7fd5c69ce134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1715822104213,"stop":1715822104245,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1715822104297,"stop":1715822104327,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1715822105364,"stop":1715822105404,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"a36af094fb9034c5","name":"Screenshot","source":"a36af094fb9034c5.png","type":"image/png","size":120583},{"uid":"9dec1c7ffcacff2c","name":"HTML source","source":"9dec1c7ffcacff2c.html","type":"text/html","size":742846}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1715822106675,"stop":1715822106675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1715822106676,"stop":1715822106752,"duration":76},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4edfc54fdd20"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":107,"broken":3,"skipped":0,"passed":163,"unknown":0,"total":273},"items":[{"uid":"b7dbf2783b28559c","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/b7dbf2783b28559c","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715735479931,"stop":1715735492461,"duration":12530}},{"uid":"91cba2880d1f7196","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/91cba2880d1f7196","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715649056400,"stop":1715649068597,"duration":12197}},{"uid":"1235dec5b4767ecb","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/1235dec5b4767ecb","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715562986267,"stop":1715562998486,"duration":12219}},{"uid":"aad06b41130e0da5","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/aad06b41130e0da5","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715476368226,"stop":1715476379158,"duration":10932}},{"uid":"e60a2e3829585d94","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/e60a2e3829585d94","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715389663349,"stop":1715389674199,"duration":10850}},{"uid":"7d94c138c77b05cd","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/7d94c138c77b05cd","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715303637028,"stop":1715303648711,"duration":11683}},{"uid":"1966764e55e3f24c","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/1966764e55e3f24c","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715216897397,"stop":1715216907984,"duration":10587}},{"uid":"3d91b96e6951edc2","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/3d91b96e6951edc2","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715130248908,"stop":1715130261015,"duration":12107}},{"uid":"ec5c71246ae5ac7a","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/ec5c71246ae5ac7a","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715044079433,"stop":1715044090109,"duration":10676}},{"uid":"1fe378fe85b10b2d","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/1fe378fe85b10b2d","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714957737358,"stop":1714957748070,"duration":10712}},{"uid":"7ac39a9057adb0d7","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/7ac39a9057adb0d7","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714871478451,"stop":1714871489076,"duration":10625}},{"uid":"ccd6de3c4eb6b495","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/ccd6de3c4eb6b495","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714784872556,"stop":1714784883537,"duration":10981}},{"uid":"626ed2e91c4957ab","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/626ed2e91c4957ab","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714698736781,"stop":1714698747962,"duration":11181}},{"uid":"a2b573bf1d96f029","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/a2b573bf1d96f029","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714612020584,"stop":1714612031360,"duration":10776}},{"uid":"a42ee2abf420f192","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/a42ee2abf420f192","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714525874970,"stop":1714525885635,"duration":10665}},{"uid":"5539686fef5957c6","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/5539686fef5957c6","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714439242650,"stop":1714439253375,"duration":10725}},{"uid":"86743cfed679ae21","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/86743cfed679ae21","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714352927949,"stop":1714352939036,"duration":11087}},{"uid":"e4e821c6b1d44d93","reportUrl":"https://Nat754.github.io/StroyremAutomation/291//#testresult/e4e821c6b1d44d93","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714266914838,"stop":1714266926314,"duration":11476}},{"uid":"5ac48f97cb979422","reportUrl":"https://Nat754.github.io/StroyremAutomation/290//#testresult/5ac48f97cb979422","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714180285084,"stop":1714180297067,"duration":11983}},{"uid":"38733d2a8d115391","reportUrl":"https://Nat754.github.io/StroyremAutomation/289//#testresult/38733d2a8d115391","status":"failed","statusDetails":"AssertionError: ОР: Скидка за объем = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714093951927,"stop":1714093963776,"duration":11849}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"fe58b381dc7957fd.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}