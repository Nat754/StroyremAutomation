{"uid":"ca3485e686811c9a","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1715821741301,"stop":1715821743613,"duration":2312},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x560310525eca <unknown>\n#1 0x56031020f45c <unknown>\n#2 0x560310262336 <unknown>\n#3 0x560310260176 <unknown>\n#4 0x56031025db57 <unknown>\n#5 0x56031025c97c <unknown>\n#6 0x5603102500ff <unknown>\n#7 0x56031027e4b2 <unknown>\n#8 0x56031024fa79 <unknown>\n#9 0x56031027e67e <unknown>\n#10 0x56031029d2cc <unknown>\n#11 0x56031027e253 <unknown>\n#12 0x56031024e1c7 <unknown>\n#13 0x56031024eb3e <unknown>\n#14 0x5603104ec30b <unknown>\n#15 0x5603104f03b7 <unknown>\n#16 0x5603104d8e3e <unknown>\n#17 0x5603104f0e82 <unknown>\n#18 0x5603104bd7df <unknown>\n#19 0x5603105151b8 <unknown>\n#20 0x56031051538b <unknown>\n#21 0x560310524ffc <unknown>\n#22 0x7efd712f4134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9239471dd0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9238e1b350>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238e19d50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56031051538b \\\\u003Cunknown>\\\\n#21 0x560310524ffc \\\\u003Cunknown>\\\\n#22 0x7efd712f4134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x560310525eca <unknown>\nE       #1 0x56031020f45c <unknown>\nE       #2 0x560310262336 <unknown>\nE       #3 0x560310260176 <unknown>\nE       #4 0x56031025db57 <unknown>\nE       #5 0x56031025c97c <unknown>\nE       #6 0x5603102500ff <unknown>\nE       #7 0x56031027e4b2 <unknown>\nE       #8 0x56031024fa79 <unknown>\nE       #9 0x56031027e67e <unknown>\nE       #10 0x56031029d2cc <unknown>\nE       #11 0x56031027e253 <unknown>\nE       #12 0x56031024e1c7 <unknown>\nE       #13 0x56031024eb3e <unknown>\nE       #14 0x5603104ec30b <unknown>\nE       #15 0x5603104f03b7 <unknown>\nE       #16 0x5603104d8e3e <unknown>\nE       #17 0x5603104f0e82 <unknown>\nE       #18 0x5603104bd7df <unknown>\nE       #19 0x5603105151b8 <unknown>\nE       #20 0x56031051538b <unknown>\nE       #21 0x560310524ffc <unknown>\nE       #22 0x7efd712f4134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715820760269,"stop":1715820760337,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1715820760337,"stop":1715820760337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715821730946,"stop":1715821731630,"duration":684},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1715821731631,"stop":1715821741300,"duration":9669},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1715821731631,"stop":1715821731631,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x560310525eca <unknown>\n#1 0x56031020f45c <unknown>\n#2 0x560310262336 <unknown>\n#3 0x560310260176 <unknown>\n#4 0x56031025db57 <unknown>\n#5 0x56031025c97c <unknown>\n#6 0x5603102500ff <unknown>\n#7 0x56031027e4b2 <unknown>\n#8 0x56031024fa79 <unknown>\n#9 0x56031027e67e <unknown>\n#10 0x56031029d2cc <unknown>\n#11 0x56031027e253 <unknown>\n#12 0x56031024e1c7 <unknown>\n#13 0x56031024eb3e <unknown>\n#14 0x5603104ec30b <unknown>\n#15 0x5603104f03b7 <unknown>\n#16 0x5603104d8e3e <unknown>\n#17 0x5603104f0e82 <unknown>\n#18 0x5603104bd7df <unknown>\n#19 0x5603105151b8 <unknown>\n#20 0x56031051538b <unknown>\n#21 0x560310524ffc <unknown>\n#22 0x7efd712f4134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9239471dd0>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9238e1b350>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238e19d50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56031051538b \\\\u003Cunknown>\\\\n#21 0x560310524ffc \\\\u003Cunknown>\\\\n#22 0x7efd712f4134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x560310525eca <unknown>\nE       #1 0x56031020f45c <unknown>\nE       #2 0x560310262336 <unknown>\nE       #3 0x560310260176 <unknown>\nE       #4 0x56031025db57 <unknown>\nE       #5 0x56031025c97c <unknown>\nE       #6 0x5603102500ff <unknown>\nE       #7 0x56031027e4b2 <unknown>\nE       #8 0x56031024fa79 <unknown>\nE       #9 0x56031027e67e <unknown>\nE       #10 0x56031029d2cc <unknown>\nE       #11 0x56031027e253 <unknown>\nE       #12 0x56031024e1c7 <unknown>\nE       #13 0x56031024eb3e <unknown>\nE       #14 0x5603104ec30b <unknown>\nE       #15 0x5603104f03b7 <unknown>\nE       #16 0x5603104d8e3e <unknown>\nE       #17 0x5603104f0e82 <unknown>\nE       #18 0x5603104bd7df <unknown>\nE       #19 0x5603105151b8 <unknown>\nE       #20 0x56031051538b <unknown>\nE       #21 0x560310524ffc <unknown>\nE       #22 0x7efd712f4134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1715821741301,"stop":1715821741328,"duration":27},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1715821741413,"stop":1715821741442,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1715821742485,"stop":1715821742524,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"1174b165bee71910","name":"Screenshot","source":"1174b165bee71910.png","type":"image/png","size":112689},{"uid":"9f36d5319a58f5cb","name":"HTML source","source":"9f36d5319a58f5cb.html","type":"text/html","size":926776}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1715821743794,"stop":1715821743868,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1715821743794,"stop":1715821743794,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4edfc54fdd20"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":282,"unknown":0,"total":288},"items":[{"uid":"30ab52fc1116570a","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/30ab52fc1116570a","status":"passed","time":{"start":1715735148121,"stop":1715735158153,"duration":10032}},{"uid":"4d44482081ab3c0c","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/4d44482081ab3c0c","status":"passed","time":{"start":1715648727826,"stop":1715648736932,"duration":9106}},{"uid":"8b503dfd182c9e6f","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/8b503dfd182c9e6f","status":"passed","time":{"start":1715562592938,"stop":1715562602514,"duration":9576}},{"uid":"5d78973ecd2acf0b","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/5d78973ecd2acf0b","status":"passed","time":{"start":1715476061558,"stop":1715476069956,"duration":8398}},{"uid":"13e5b41d731af807","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/13e5b41d731af807","status":"passed","time":{"start":1715389356659,"stop":1715389364885,"duration":8226}},{"uid":"692a6e8cbc50cf3d","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/692a6e8cbc50cf3d","status":"passed","time":{"start":1715303255157,"stop":1715303264405,"duration":9248}},{"uid":"d470acb6753cabcb","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/d470acb6753cabcb","status":"passed","time":{"start":1715216595435,"stop":1715216603667,"duration":8232}},{"uid":"f040fd601f15cbf1","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/f040fd601f15cbf1","status":"passed","time":{"start":1715129862735,"stop":1715129872167,"duration":9432}},{"uid":"f081602145cba4cd","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/f081602145cba4cd","status":"passed","time":{"start":1715043777576,"stop":1715043786010,"duration":8434}},{"uid":"2be3d69f50b72574","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/2be3d69f50b72574","status":"passed","time":{"start":1714957435644,"stop":1714957443842,"duration":8198}},{"uid":"baca84fc004b256a","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/baca84fc004b256a","status":"passed","time":{"start":1714871173469,"stop":1714871181695,"duration":8226}},{"uid":"716c791d042b7571","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/716c791d042b7571","status":"passed","time":{"start":1714784567143,"stop":1714784575458,"duration":8315}},{"uid":"7827545e0ba2fa83","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/7827545e0ba2fa83","status":"passed","time":{"start":1714698414152,"stop":1714698422861,"duration":8709}},{"uid":"c14a061445a0a66","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/c14a061445a0a66","status":"passed","time":{"start":1714611714581,"stop":1714611722949,"duration":8368}},{"uid":"199858cd4676329e","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/199858cd4676329e","status":"passed","time":{"start":1714525574996,"stop":1714525583186,"duration":8190}},{"uid":"3428b8ca66e622b2","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/3428b8ca66e622b2","status":"passed","time":{"start":1714438938399,"stop":1714438946466,"duration":8067}},{"uid":"1e98e34a07562a27","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/1e98e34a07562a27","status":"passed","time":{"start":1714352627769,"stop":1714352635831,"duration":8062}},{"uid":"fffa42ec3ec4cbaf","reportUrl":"https://Nat754.github.io/StroyremAutomation/291//#testresult/fffa42ec3ec4cbaf","status":"passed","time":{"start":1714266555673,"stop":1714266564646,"duration":8973}},{"uid":"e9d0b2a4296a473c","reportUrl":"https://Nat754.github.io/StroyremAutomation/290//#testresult/e9d0b2a4296a473c","status":"passed","time":{"start":1714179902104,"stop":1714179911721,"duration":9617}},{"uid":"d10db23d5f0b2937","reportUrl":"https://Nat754.github.io/StroyremAutomation/289//#testresult/d10db23d5f0b2937","status":"passed","time":{"start":1714093566259,"stop":1714093575706,"duration":9447}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"ca3485e686811c9a.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}