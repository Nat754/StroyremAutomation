{"uid":"f5dd0db7bf2ef248","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke","historyId":"5ec2250188f66239d7a557e2f16d23d1","time":{"start":1715821702927,"stop":1715821707334,"duration":4407},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55656fad1eca <unknown>\n#1 0x55656f7bb45c <unknown>\n#2 0x55656f7c0b69 <unknown>\n#3 0x55656f7c2915 <unknown>\n#4 0x55656f7c299c <unknown>\n#5 0x55656f80e24c <unknown>\n#6 0x55656f80c176 <unknown>\n#7 0x55656f809b57 <unknown>\n#8 0x55656f80897c <unknown>\n#9 0x55656f7fc0ff <unknown>\n#10 0x55656f82a4b2 <unknown>\n#11 0x55656f7fba79 <unknown>\n#12 0x55656f82a67e <unknown>\n#13 0x55656f8492cc <unknown>\n#14 0x55656f82a253 <unknown>\n#15 0x55656f7fa1c7 <unknown>\n#16 0x55656f7fab3e <unknown>\n#17 0x55656fa9830b <unknown>\n#18 0x55656fa9c3b7 <unknown>\n#19 0x55656fa84e3e <unknown>\n#20 0x55656fa9ce82 <unknown>\n#21 0x55656fa697df <unknown>\n#22 0x55656fac11b8 <unknown>\n#23 0x55656fac138b <unknown>\n#24 0x55656fad0ffc <unknown>\n#25 0x7f51f6e63134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9239473ad0>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9239cc4fd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238dc8dd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55656fac138b \\\\u003Cunknown>\\\\n#24 0x55656fad0ffc \\\\u003Cunknown>\\\\n#25 0x7f51f6e63134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=125.0.6422.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55656fad1eca <unknown>\nE       #1 0x55656f7bb45c <unknown>\nE       #2 0x55656f7c0b69 <unknown>\nE       #3 0x55656f7c2915 <unknown>\nE       #4 0x55656f7c299c <unknown>\nE       #5 0x55656f80e24c <unknown>\nE       #6 0x55656f80c176 <unknown>\nE       #7 0x55656f809b57 <unknown>\nE       #8 0x55656f80897c <unknown>\nE       #9 0x55656f7fc0ff <unknown>\nE       #10 0x55656f82a4b2 <unknown>\nE       #11 0x55656f7fba79 <unknown>\nE       #12 0x55656f82a67e <unknown>\nE       #13 0x55656f8492cc <unknown>\nE       #14 0x55656f82a253 <unknown>\nE       #15 0x55656f7fa1c7 <unknown>\nE       #16 0x55656f7fab3e <unknown>\nE       #17 0x55656fa9830b <unknown>\nE       #18 0x55656fa9c3b7 <unknown>\nE       #19 0x55656fa84e3e <unknown>\nE       #20 0x55656fa9ce82 <unknown>\nE       #21 0x55656fa697df <unknown>\nE       #22 0x55656fac11b8 <unknown>\nE       #23 0x55656fac138b <unknown>\nE       #24 0x55656fad0ffc <unknown>\nE       #25 0x7f51f6e63134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715820760269,"stop":1715820760337,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1715820760337,"stop":1715820760337,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715821691704,"stop":1715821692388,"duration":684},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1715821692388,"stop":1715821702927,"duration":10539},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1715821692388,"stop":1715821692388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55656fad1eca <unknown>\n#1 0x55656f7bb45c <unknown>\n#2 0x55656f7c0b69 <unknown>\n#3 0x55656f7c2915 <unknown>\n#4 0x55656f7c299c <unknown>\n#5 0x55656f80e24c <unknown>\n#6 0x55656f80c176 <unknown>\n#7 0x55656f809b57 <unknown>\n#8 0x55656f80897c <unknown>\n#9 0x55656f7fc0ff <unknown>\n#10 0x55656f82a4b2 <unknown>\n#11 0x55656f7fba79 <unknown>\n#12 0x55656f82a67e <unknown>\n#13 0x55656f8492cc <unknown>\n#14 0x55656f82a253 <unknown>\n#15 0x55656f7fa1c7 <unknown>\n#16 0x55656f7fab3e <unknown>\n#17 0x55656fa9830b <unknown>\n#18 0x55656fa9c3b7 <unknown>\n#19 0x55656fa84e3e <unknown>\n#20 0x55656fa9ce82 <unknown>\n#21 0x55656fa697df <unknown>\n#22 0x55656fac11b8 <unknown>\n#23 0x55656fac138b <unknown>\n#24 0x55656fad0ffc <unknown>\n#25 0x7f51f6e63134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9239473ad0>\nlink = 'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9239cc4fd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_3500_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_3500_4999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9238dc8dd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55656fac138b \\\\u003Cunknown>\\\\n#24 0x55656fad0ffc \\\\u003Cunknown>\\\\n#25 0x7f51f6e63134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=125.0.6422.60); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55656fad1eca <unknown>\nE       #1 0x55656f7bb45c <unknown>\nE       #2 0x55656f7c0b69 <unknown>\nE       #3 0x55656f7c2915 <unknown>\nE       #4 0x55656f7c299c <unknown>\nE       #5 0x55656f80e24c <unknown>\nE       #6 0x55656f80c176 <unknown>\nE       #7 0x55656f809b57 <unknown>\nE       #8 0x55656f80897c <unknown>\nE       #9 0x55656f7fc0ff <unknown>\nE       #10 0x55656f82a4b2 <unknown>\nE       #11 0x55656f7fba79 <unknown>\nE       #12 0x55656f82a67e <unknown>\nE       #13 0x55656f8492cc <unknown>\nE       #14 0x55656f82a253 <unknown>\nE       #15 0x55656f7fa1c7 <unknown>\nE       #16 0x55656f7fab3e <unknown>\nE       #17 0x55656fa9830b <unknown>\nE       #18 0x55656fa9c3b7 <unknown>\nE       #19 0x55656fa84e3e <unknown>\nE       #20 0x55656fa9ce82 <unknown>\nE       #21 0x55656fa697df <unknown>\nE       #22 0x55656fac11b8 <unknown>\nE       #23 0x55656fac138b <unknown>\nE       #24 0x55656fad0ffc <unknown>\nE       #25 0x7f51f6e63134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1715821702928,"stop":1715821702957,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1715821703021,"stop":1715821703053,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1715821704093,"stop":1715821704134,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1715821707174,"stop":1715821707224,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"c664be38a36e9627","name":"Screenshot","source":"c664be38a36e9627.png","type":"image/png","size":55412},{"uid":"892c3593595be5ac","name":"HTML source","source":"892c3593595be5ac.html","type":"text/html","size":586197}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1715821707475,"stop":1715821707475,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1715821707476,"stop":1715821707550,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"4edfc54fdd20"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":106,"broken":6,"skipped":0,"passed":177,"unknown":0,"total":289},"items":[{"uid":"d2e069c0698e0004","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/d2e069c0698e0004","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715735108672,"stop":1715735119629,"duration":10957}},{"uid":"ca067ed2011dfb76","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/ca067ed2011dfb76","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715648689756,"stop":1715648699412,"duration":9656}},{"uid":"f9142293af9a112d","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/f9142293af9a112d","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715562549510,"stop":1715562558967,"duration":9457}},{"uid":"2976003a7686fa4e","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/2976003a7686fa4e","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715476028088,"stop":1715476036475,"duration":8387}},{"uid":"dee3686cbf5899fb","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/dee3686cbf5899fb","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715389322895,"stop":1715389331298,"duration":8403}},{"uid":"81df4bbad5ae0ab1","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/81df4bbad5ae0ab1","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715303212161,"stop":1715303221504,"duration":9343}},{"uid":"bf0929efc5d6d647","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/bf0929efc5d6d647","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715216562894,"stop":1715216571164,"duration":8270}},{"uid":"f858bdd865f97122","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/f858bdd865f97122","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715129819778,"stop":1715129829183,"duration":9405}},{"uid":"fd1dfc4b43694ccb","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/fd1dfc4b43694ccb","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1715043744368,"stop":1715043752614,"duration":8246}},{"uid":"4e73280702aabb8e","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/4e73280702aabb8e","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714957402429,"stop":1714957410669,"duration":8240}},{"uid":"5cdd20ceeba0168","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/5cdd20ceeba0168","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714871140120,"stop":1714871148486,"duration":8366}},{"uid":"75c26041e48a5481","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/75c26041e48a5481","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714784533544,"stop":1714784542160,"duration":8616}},{"uid":"d1ddab101cd60274","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/d1ddab101cd60274","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714698378210,"stop":1714698386579,"duration":8369}},{"uid":"d3ba64d8b8e6a1f0","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/d3ba64d8b8e6a1f0","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714611680617,"stop":1714611688796,"duration":8179}},{"uid":"2482ae37189aac9e","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/2482ae37189aac9e","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714525541985,"stop":1714525550064,"duration":8079}},{"uid":"d8f05415eae6ae22","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/d8f05415eae6ae22","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714438904549,"stop":1714438912898,"duration":8349}},{"uid":"19e26da7159a22","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/19e26da7159a22","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714352594760,"stop":1714352602973,"duration":8213}},{"uid":"47129bb00dabcffe","reportUrl":"https://Nat754.github.io/StroyremAutomation/291//#testresult/47129bb00dabcffe","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714266515266,"stop":1714266524356,"duration":9090}},{"uid":"40aabbf3e281d9e6","reportUrl":"https://Nat754.github.io/StroyremAutomation/290//#testresult/40aabbf3e281d9e6","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714179858785,"stop":1714179868297,"duration":9512}},{"uid":"819ee121a37de03","reportUrl":"https://Nat754.github.io/StroyremAutomation/289//#testresult/819ee121a37de03","status":"failed","statusDetails":"AssertionError: ОР: Скидка = 66.61, ФР: скидка = 66.62\nassert 66.62 == 66.61\n +  where 66.61 = round((4441.0 * 0.015), 2)","time":{"start":1714093522473,"stop":1714093531960,"duration":9487}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"f5dd0db7bf2ef248.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}