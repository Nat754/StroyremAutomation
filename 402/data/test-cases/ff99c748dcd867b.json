{"uid":"ff99c748dcd867b","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"8519a10778cf28e105209a17627cfb4a","time":{"start":1723856826059,"stop":1723856828368,"duration":2309},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55e5cb8616ca <unknown>\n#1 0x55e5cb532600 <unknown>\n#2 0x55e5cb5888e6 <unknown>\n#3 0x55e5cb5867f6 <unknown>\n#4 0x55e5cb584277 <unknown>\n#5 0x55e5cb58311c <unknown>\n#6 0x55e5cb576be6 <unknown>\n#7 0x55e5cb5a48a2 <unknown>\n#8 0x55e5cb576599 <unknown>\n#9 0x55e5cb5a4a6e <unknown>\n#10 0x55e5cb5c304a <unknown>\n#11 0x55e5cb5a4643 <unknown>\n#12 0x55e5cb574d31 <unknown>\n#13 0x55e5cb57579e <unknown>\n#14 0x55e5cb82925b <unknown>\n#15 0x55e5cb82d1f2 <unknown>\n#16 0x55e5cb816615 <unknown>\n#17 0x55e5cb82dd82 <unknown>\n#18 0x55e5cb7fb25f <unknown>\n#19 0x55e5cb850e68 <unknown>\n#20 0x55e5cb851040 <unknown>\n#21 0x55e5cb86049c <unknown>\n#22 0x7fd7a7bba134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f00bbd56390>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f00bb768d50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f00bbd2a410>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e5cb851040 \\\\u003Cunknown>\\\\n#21 0x55e5cb86049c \\\\u003Cunknown>\\\\n#22 0x7fd7a7bba134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55e5cb8616ca <unknown>\nE       #1 0x55e5cb532600 <unknown>\nE       #2 0x55e5cb5888e6 <unknown>\nE       #3 0x55e5cb5867f6 <unknown>\nE       #4 0x55e5cb584277 <unknown>\nE       #5 0x55e5cb58311c <unknown>\nE       #6 0x55e5cb576be6 <unknown>\nE       #7 0x55e5cb5a48a2 <unknown>\nE       #8 0x55e5cb576599 <unknown>\nE       #9 0x55e5cb5a4a6e <unknown>\nE       #10 0x55e5cb5c304a <unknown>\nE       #11 0x55e5cb5a4643 <unknown>\nE       #12 0x55e5cb574d31 <unknown>\nE       #13 0x55e5cb57579e <unknown>\nE       #14 0x55e5cb82925b <unknown>\nE       #15 0x55e5cb82d1f2 <unknown>\nE       #16 0x55e5cb816615 <unknown>\nE       #17 0x55e5cb82dd82 <unknown>\nE       #18 0x55e5cb7fb25f <unknown>\nE       #19 0x55e5cb850e68 <unknown>\nE       #20 0x55e5cb851040 <unknown>\nE       #21 0x55e5cb86049c <unknown>\nE       #22 0x7fd7a7bba134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1723856130341,"stop":1723856130410,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1723856130410,"stop":1723856130410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1723856817129,"stop":1723856817821,"duration":692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1723856817821,"stop":1723856817821,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1723856817822,"stop":1723856826058,"duration":8236},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55e5cb8616ca <unknown>\n#1 0x55e5cb532600 <unknown>\n#2 0x55e5cb5888e6 <unknown>\n#3 0x55e5cb5867f6 <unknown>\n#4 0x55e5cb584277 <unknown>\n#5 0x55e5cb58311c <unknown>\n#6 0x55e5cb576be6 <unknown>\n#7 0x55e5cb5a48a2 <unknown>\n#8 0x55e5cb576599 <unknown>\n#9 0x55e5cb5a4a6e <unknown>\n#10 0x55e5cb5c304a <unknown>\n#11 0x55e5cb5a4643 <unknown>\n#12 0x55e5cb574d31 <unknown>\n#13 0x55e5cb57579e <unknown>\n#14 0x55e5cb82925b <unknown>\n#15 0x55e5cb82d1f2 <unknown>\n#16 0x55e5cb816615 <unknown>\n#17 0x55e5cb82dd82 <unknown>\n#18 0x55e5cb7fb25f <unknown>\n#19 0x55e5cb850e68 <unknown>\n#20 0x55e5cb851040 <unknown>\n#21 0x55e5cb86049c <unknown>\n#22 0x7fd7a7bba134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f00bbd56390>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f00bb768d50>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f00bbd2a410>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e5cb851040 \\\\u003Cunknown>\\\\n#21 0x55e5cb86049c \\\\u003Cunknown>\\\\n#22 0x7fd7a7bba134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.119)\nE       Stacktrace:\nE       #0 0x55e5cb8616ca <unknown>\nE       #1 0x55e5cb532600 <unknown>\nE       #2 0x55e5cb5888e6 <unknown>\nE       #3 0x55e5cb5867f6 <unknown>\nE       #4 0x55e5cb584277 <unknown>\nE       #5 0x55e5cb58311c <unknown>\nE       #6 0x55e5cb576be6 <unknown>\nE       #7 0x55e5cb5a48a2 <unknown>\nE       #8 0x55e5cb576599 <unknown>\nE       #9 0x55e5cb5a4a6e <unknown>\nE       #10 0x55e5cb5c304a <unknown>\nE       #11 0x55e5cb5a4643 <unknown>\nE       #12 0x55e5cb574d31 <unknown>\nE       #13 0x55e5cb57579e <unknown>\nE       #14 0x55e5cb82925b <unknown>\nE       #15 0x55e5cb82d1f2 <unknown>\nE       #16 0x55e5cb816615 <unknown>\nE       #17 0x55e5cb82dd82 <unknown>\nE       #18 0x55e5cb7fb25f <unknown>\nE       #19 0x55e5cb850e68 <unknown>\nE       #20 0x55e5cb851040 <unknown>\nE       #21 0x55e5cb86049c <unknown>\nE       #22 0x7fd7a7bba134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1723856826059,"stop":1723856826097,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1723856826175,"stop":1723856826207,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1723856827251,"stop":1723856827292,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8f9ffeae1c82d9a0","name":"Screenshot","source":"8f9ffeae1c82d9a0.png","type":"image/png","size":48413},{"uid":"5705bc8de16a6517","name":"HTML source","source":"5705bc8de16a6517.html","type":"text/html","size":624889}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1723856828508,"stop":1723856828508,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1723856828508,"stop":1723856828585,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"360cb3f99fed"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":58,"unknown":0,"total":80},"items":[{"uid":"9d44296a85702e0","reportUrl":"https://Nat754.github.io/StroyremAutomation/401//#testresult/9d44296a85702e0","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.119)\nStacktrace:\n#0 0x55fe50a306ca <unknown>\n#1 0x55fe50701600 <unknown>\n#2 0x55fe507578e6 <unknown>\n#3 0x55fe507557f6 <unknown>\n#4 0x55fe50753277 <unknown>\n#5 0x55fe5075211c <unknown>\n#6 0x55fe50745be6 <unknown>\n#7 0x55fe507738a2 <unknown>\n#8 0x55fe50745599 <unknown>\n#9 0x55fe50773a6e <unknown>\n#10 0x55fe5079204a <unknown>\n#11 0x55fe50773643 <unknown>\n#12 0x55fe50743d31 <unknown>\n#13 0x55fe5074479e <unknown>\n#14 0x55fe509f825b <unknown>\n#15 0x55fe509fc1f2 <unknown>\n#16 0x55fe509e5615 <unknown>\n#17 0x55fe509fcd82 <unknown>\n#18 0x55fe509ca25f <unknown>\n#19 0x55fe50a1fe68 <unknown>\n#20 0x55fe50a20040 <unknown>\n#21 0x55fe50a2f49c <unknown>\n#22 0x7f1e13f02134 <unknown>","time":{"start":1723770549237,"stop":1723770551533,"duration":2296}},{"uid":"7ff95dd8cc36be6c","reportUrl":"https://Nat754.github.io/StroyremAutomation/400//#testresult/7ff95dd8cc36be6c","status":"passed","time":{"start":1723684041800,"stop":1723684053923,"duration":12123}},{"uid":"6854b4a876ca9251","reportUrl":"https://Nat754.github.io/StroyremAutomation/399//#testresult/6854b4a876ca9251","status":"passed","time":{"start":1723597748659,"stop":1723597760255,"duration":11596}},{"uid":"df2ce21eb81c19db","reportUrl":"https://Nat754.github.io/StroyremAutomation/398//#testresult/df2ce21eb81c19db","status":"passed","time":{"start":1723511566845,"stop":1723511578148,"duration":11303}},{"uid":"2735fecafd97b660","reportUrl":"https://Nat754.github.io/StroyremAutomation/397//#testresult/2735fecafd97b660","status":"passed","time":{"start":1723425091214,"stop":1723425101259,"duration":10045}},{"uid":"dad004ffadf681b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/396//#testresult/dad004ffadf681b1","status":"passed","time":{"start":1723339000491,"stop":1723339011205,"duration":10714}},{"uid":"d514555f97a098e6","reportUrl":"https://Nat754.github.io/StroyremAutomation/395//#testresult/d514555f97a098e6","status":"passed","time":{"start":1723252101356,"stop":1723252112379,"duration":11023}},{"uid":"7b554a2dcac7c64c","reportUrl":"https://Nat754.github.io/StroyremAutomation/394//#testresult/7b554a2dcac7c64c","status":"passed","time":{"start":1723165757449,"stop":1723165768930,"duration":11481}},{"uid":"36f727e73d6bc261","reportUrl":"https://Nat754.github.io/StroyremAutomation/393//#testresult/36f727e73d6bc261","status":"passed","time":{"start":1723079339174,"stop":1723079350773,"duration":11599}},{"uid":"342e4e2fed7fe562","reportUrl":"https://Nat754.github.io/StroyremAutomation/392//#testresult/342e4e2fed7fe562","status":"passed","time":{"start":1722993022598,"stop":1722993034452,"duration":11854}},{"uid":"2141330c3058722b","reportUrl":"https://Nat754.github.io/StroyremAutomation/391//#testresult/2141330c3058722b","status":"passed","time":{"start":1722906504939,"stop":1722906515266,"duration":10327}},{"uid":"eef30a90f1563afe","reportUrl":"https://Nat754.github.io/StroyremAutomation/390//#testresult/eef30a90f1563afe","status":"passed","time":{"start":1722820206734,"stop":1722820219019,"duration":12285}},{"uid":"dd0f1aa97e3f0139","reportUrl":"https://Nat754.github.io/StroyremAutomation/389//#testresult/dd0f1aa97e3f0139","status":"passed","time":{"start":1722734121484,"stop":1722734132225,"duration":10741}},{"uid":"b84ad2b838fdb058","reportUrl":"https://Nat754.github.io/StroyremAutomation/388//#testresult/b84ad2b838fdb058","status":"passed","time":{"start":1722647424845,"stop":1722647437028,"duration":12183}},{"uid":"c9f285662d88afcf","reportUrl":"https://Nat754.github.io/StroyremAutomation/387//#testresult/c9f285662d88afcf","status":"passed","time":{"start":1722560863328,"stop":1722560873843,"duration":10515}},{"uid":"1808b5fa17200336","reportUrl":"https://Nat754.github.io/StroyremAutomation/386//#testresult/1808b5fa17200336","status":"passed","time":{"start":1722474807029,"stop":1722474817432,"duration":10403}},{"uid":"d73636d57819336f","reportUrl":"https://Nat754.github.io/StroyremAutomation/385//#testresult/d73636d57819336f","status":"passed","time":{"start":1722387434066,"stop":1722387443612,"duration":9546}},{"uid":"9cd5c63e262fe443","reportUrl":"https://Nat754.github.io/StroyremAutomation/384//#testresult/9cd5c63e262fe443","status":"passed","time":{"start":1722301655734,"stop":1722301665829,"duration":10095}},{"uid":"ae4fc10e9724695b","reportUrl":"https://Nat754.github.io/StroyremAutomation/383//#testresult/ae4fc10e9724695b","status":"passed","time":{"start":1722215349687,"stop":1722215366661,"duration":16974}},{"uid":"eecb9541866aa61c","reportUrl":"https://Nat754.github.io/StroyremAutomation/382//#testresult/eecb9541866aa61c","status":"passed","time":{"start":1722129167699,"stop":1722129178125,"duration":10426}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"ff99c748dcd867b.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}