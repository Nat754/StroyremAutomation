{"uid":"e4c6ecff15bca898","name":"007_positive_catalog_first_link_smoke","fullName":"tests.catalog.test_catalog_page.TestCatalogPage#test_007_positive_catalog_first_link_smoke","historyId":"d0c67580db740592432b08ab75a259c2","time":{"start":1697071724394,"stop":1697071741166,"duration":16772},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7f68af4e3f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf20fd7ba5ad2a396c2af99c3390b1fa\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7f68b027ad50>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cf20fd7ba5ad2a396c2af99c3390b1fa\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f68af154b80>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1697071513255,"stop":1697071513341,"duration":86},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1697071513341,"stop":1697071513341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1697071712962,"stop":1697071713810,"duration":848},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1697071713811,"stop":1697071713811,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"catalog_page_open","time":{"start":1697071713811,"stop":1697071724394,"duration":10583},"status":"passed","steps":[{"name":"Проверяем что элемент 'Каталог товаров' виден в хедере","time":{"start":1697071724277,"stop":1697071724332,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.catalog.test_catalog_page.TestCatalogPage object at 0x7f68af4e3f90>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"cf20fd7ba5ad2a396c2af99c3390b1fa\")>\nlink = 'https://test2.stroyrem-nn.ru/'\ncatalog_page_open = <pages.catalog_page.CatalogPage object at 0x7f68b027ad50>\n\n    @allure.title(\"007_positive_catalog_first_link_smoke\")\n    @pytest.mark.parametrize('link', [MAIN_PAGE_PROD_URL, MAIN_PAGE_STAGE_URL])\n    @pytest.mark.smoke_test\n    def test_007_positive_catalog_first_link_smoke(self, driver, link, catalog_page_open):\n>       catalog_page_open.get_link_drywall_systems().click()\n\ntests/catalog/test_catalog_page.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/catalog_page.py:98: in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\nbase/seleniumbase.py:34: in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"cf20fd7ba5ad2a396c2af99c3390b1fa\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f68af154b80>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"Проверяем что ссылка 'Гипсокартонные системы' видна на странице","time":{"start":1697071724395,"stop":1697071741165,"duration":16770},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/catalog_page.py\", line 98, in get_link_drywall_systems\n    return self.element_is_visible(self._drywall_systems)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 34, in element_is_visible\n    return self.__wait.until(EC.visibility_of_element_located(locator))\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"7efee838a145fb32","name":"Screenshot","source":"7efee838a145fb32.png","type":"image/png","size":14018},{"uid":"a1fdd3b95d417cf9","name":"HTML source","source":"a1fdd3b95d417cf9.html","type":"text/html","size":384627}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1697071741339,"stop":1697071741339,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1697071741339,"stop":1697071741408,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Catalog Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.catalog"},{"name":"suite","value":"test_catalog_page"},{"name":"subSuite","value":"TestCatalogPage"},{"name":"host","value":"f1c257c16a6b"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.test_catalog_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":18,"skipped":0,"passed":79,"unknown":0,"total":97},"items":[{"uid":"629c9f04d6ae9959","reportUrl":"https://Nat754.github.io/StroyremAutomation/91//#testresult/629c9f04d6ae9959","status":"passed","time":{"start":1696985442280,"stop":1696985447329,"duration":5049}},{"uid":"809ea920a10a5ba7","reportUrl":"https://Nat754.github.io/StroyremAutomation/90//#testresult/809ea920a10a5ba7","status":"passed","time":{"start":1696899038171,"stop":1696899043710,"duration":5539}},{"uid":"5fcafbda0ce0c8a7","reportUrl":"https://Nat754.github.io/StroyremAutomation/89//#testresult/5fcafbda0ce0c8a7","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1696812655826,"stop":1696812671130,"duration":15304}},{"uid":"54dd98542936b9e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/88//#testresult/54dd98542936b9e1","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1696726546139,"stop":1696726562877,"duration":16738}},{"uid":"220ed6fb3b379c32","reportUrl":"https://Nat754.github.io/StroyremAutomation/87//#testresult/220ed6fb3b379c32","status":"passed","time":{"start":1696639789882,"stop":1696639795118,"duration":5236}},{"uid":"e541bedffe3c6e19","reportUrl":"https://Nat754.github.io/StroyremAutomation/86//#testresult/e541bedffe3c6e19","status":"passed","time":{"start":1696553437121,"stop":1696553442154,"duration":5033}},{"uid":"5afc20db91f55fef","reportUrl":"https://Nat754.github.io/StroyremAutomation/85//#testresult/5afc20db91f55fef","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1696467128486,"stop":1696467145206,"duration":16720}},{"uid":"fe2dcc79a9724b15","reportUrl":"https://Nat754.github.io/StroyremAutomation/84//#testresult/fe2dcc79a9724b15","status":"passed","time":{"start":1696380688758,"stop":1696380693909,"duration":5151}},{"uid":"c2dbbea2872ba911","reportUrl":"https://Nat754.github.io/StroyremAutomation/83//#testresult/c2dbbea2872ba911","status":"passed","time":{"start":1696294272257,"stop":1696294276900,"duration":4643}},{"uid":"a99b24007cf3ea7c","reportUrl":"https://Nat754.github.io/StroyremAutomation/82//#testresult/a99b24007cf3ea7c","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1696281935274,"stop":1696281952056,"duration":16782}},{"uid":"3bbe8988fa549a4e","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/3bbe8988fa549a4e","status":"passed","time":{"start":1696258072544,"stop":1696258079092,"duration":6548}},{"uid":"1c4c307b71bff53e","reportUrl":"https://Nat754.github.io/StroyremAutomation/81//#testresult/1c4c307b71bff53e","status":"passed","time":{"start":1696208234516,"stop":1696208239194,"duration":4678}},{"uid":"f9ed914db0c70c49","reportUrl":"https://Nat754.github.io/StroyremAutomation/80//#testresult/f9ed914db0c70c49","status":"passed","time":{"start":1696122219782,"stop":1696122225060,"duration":5278}},{"uid":"c2ec165b439cfbbf","reportUrl":"https://Nat754.github.io/StroyremAutomation/79//#testresult/c2ec165b439cfbbf","status":"passed","time":{"start":1696035217008,"stop":1696035221586,"duration":4578}},{"uid":"130a75f00b260a9b","reportUrl":"https://Nat754.github.io/StroyremAutomation/78//#testresult/130a75f00b260a9b","status":"passed","time":{"start":1695948945205,"stop":1695948949630,"duration":4425}},{"uid":"4fa4b263a03ea0c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/77//#testresult/4fa4b263a03ea0c7","status":"passed","time":{"start":1695862690164,"stop":1695862696717,"duration":6553}},{"uid":"91e45cec0b1e28ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/76//#testresult/91e45cec0b1e28ea","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695776315334,"stop":1695776330937,"duration":15603}},{"uid":"67d5edcad73693ab","reportUrl":"https://Nat754.github.io/StroyremAutomation/75//#testresult/67d5edcad73693ab","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695689950547,"stop":1695689966176,"duration":15629}},{"uid":"83fd053e6bd276d5","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/83fd053e6bd276d5","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1695603529850,"stop":1695603545096,"duration":15246}},{"uid":"b95508d8ce623279","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/b95508d8ce623279","status":"passed","time":{"start":1695517071805,"stop":1695517076460,"duration":4655}}]},"tags":["smoke_test"]},"source":"e4c6ecff15bca898.json","parameterValues":["'https://test2.stroyrem-nn.ru/'"]}