{"uid":"98db81d6a4191329","name":"test_positive_delivery_green_zone_smoke[TD 009-products/shtukaturka-gipsovaya-aksolit-m50-30-kg-mashinnogo-naneseniya-166-5000-2500-4990-5480-https://sandboxtest.stroyrem-nn.ru/]","fullName":"tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation#test_positive_delivery_green_zone_smoke","historyId":"8179091af2334708b6b6862d13d35737","time":{"start":1693730629053,"stop":1693730634598,"duration":5545},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x56292ad77e23 <unknown>\n#1 0x56292aaa05f6 <unknown>\n#2 0x56292aad6c5d <unknown>\n#3 0x56292ab00012 <unknown>\n#4 0x56292aad4fb6 <unknown>\n#5 0x56292ab001de <unknown>\n#6 0x56292ab18369 <unknown>\n#7 0x56292aaffde3 <unknown>\n#8 0x56292aad3a7b <unknown>\n#9 0x56292aad481e <unknown>\n#10 0x56292ad39638 <unknown>\n#11 0x56292ad3d507 <unknown>\n#12 0x56292ad47c4c <unknown>\n#13 0x56292ad3e136 <unknown>\n#14 0x56292ad0c9cf <unknown>\n#15 0x56292ad61b98 <unknown>\n#16 0x56292ad61d68 <unknown>\n#17 0x56292ad70cb3 <unknown>\n#18 0x7f4515319044 <unknown>","statusTrace":"self = <tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation object at 0x7febf541a710>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"82f3aa2417413393d190efc85d9d72f1\")>\nurl = 'https://sandboxtest.stroyrem-nn.ru/', case_id = 'TD 009'\nlink_item = 'products/shtukaturka-gipsovaya-aksolit-m50-30-kg-mashinnogo-naneseniya'\namount = 166, weight = 5000, standard = 2500, in_time = 4990, all_time = 5480\n\n    @pytest.mark.parametrize('case_id, link_item, amount, weight, standard, in_time, all_time', [\n        (\"TD 001\", uroven_3000, 1, 30, 0, 1590, 2190),\n        (\"TD 002\", bundeks_25, 1, 30, 400, 1590, 2190),\n        (\"TD 003\", aksolit_30, 8, 300, 400, 1590, 2190),\n        (\"TD 004\", aksolit_30, 13, 400, 450, 1590, 2190),\n        (\"TD 005\", aksolit_30, 16, 500, 600, 1590, 2190),\n        (\"TD 006\", aksolit_30, 25, 1700, 990, 1990, 2480),\n        (\"TD 007\", aksolit_30, 66, 2000, 1300, 2490, 2980),\n        (\"TD 008\", aksolit_30, 149, 4500, 2300, 3980, 4490),\n        (\"TD 009\", aksolit_30, 166, 5000, 2500, 4990, 5480),\n        pytest.param(\n            \"TD 010\", aksolit_30, 206, 6200, 2900, 5570, 6120,\n            marks=pytest.mark.xfail(reson=\"Цена доставки 3600 7960 8980\")\n        ),\n        (\"TD 011\", aksolit_30, 299, 9000, 3600, 7960, 8980),\n        (\"TD 012\", aksolit_30, 333, 10000, 4450, 11990, 12500),\n        pytest.param(\n            \"TD 013\", aksolit_30, 366, 11000, 4800, 12450, 13480,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        ),\n        pytest.param(\n            \"TD 014\", aksolit_30, 666, 20000, 5400, 15600, 17490,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        )\n    ])\n    @pytest.mark.smoke\n    def test_positive_delivery_green_zone_smoke(\n            self, driver, url, case_id, link_item, amount, weight, standard, in_time, all_time\n    ):\n    \n        driver.get(f'{url}{link_item}')\n        item_page = ItemPage(driver)\n>       item_page.add_item_to_cart(amount).click_on_cart()\n\ntests/delivery/test_delivery_calculation.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:42: in add_item_to_cart\n    amount_field.clear()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:117: in clear\n    self._execute(Command.CLEAR_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7febf51b8110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#16 0x56292ad61d68 \\\\u003Cunknown>\\\\n#17 0x56292ad70cb3 \\\\u003Cunknown>\\\\n#18 0x7f4515319044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x56292ad77e23 <unknown>\nE       #1 0x56292aaa05f6 <unknown>\nE       #2 0x56292aad6c5d <unknown>\nE       #3 0x56292ab00012 <unknown>\nE       #4 0x56292aad4fb6 <unknown>\nE       #5 0x56292ab001de <unknown>\nE       #6 0x56292ab18369 <unknown>\nE       #7 0x56292aaffde3 <unknown>\nE       #8 0x56292aad3a7b <unknown>\nE       #9 0x56292aad481e <unknown>\nE       #10 0x56292ad39638 <unknown>\nE       #11 0x56292ad3d507 <unknown>\nE       #12 0x56292ad47c4c <unknown>\nE       #13 0x56292ad3e136 <unknown>\nE       #14 0x56292ad0c9cf <unknown>\nE       #15 0x56292ad61b98 <unknown>\nE       #16 0x56292ad61d68 <unknown>\nE       #17 0x56292ad70cb3 <unknown>\nE       #18 0x7f4515319044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693729976917,"stop":1693729977016,"duration":99},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693729977016,"stop":1693729977016,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1693730628236,"stop":1693730629051,"duration":815},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1693730629051,"stop":1693730629051,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x56292ad77e23 <unknown>\n#1 0x56292aaa05f6 <unknown>\n#2 0x56292aad6c5d <unknown>\n#3 0x56292ab00012 <unknown>\n#4 0x56292aad4fb6 <unknown>\n#5 0x56292ab001de <unknown>\n#6 0x56292ab18369 <unknown>\n#7 0x56292aaffde3 <unknown>\n#8 0x56292aad3a7b <unknown>\n#9 0x56292aad481e <unknown>\n#10 0x56292ad39638 <unknown>\n#11 0x56292ad3d507 <unknown>\n#12 0x56292ad47c4c <unknown>\n#13 0x56292ad3e136 <unknown>\n#14 0x56292ad0c9cf <unknown>\n#15 0x56292ad61b98 <unknown>\n#16 0x56292ad61d68 <unknown>\n#17 0x56292ad70cb3 <unknown>\n#18 0x7f4515319044 <unknown>","statusTrace":"self = <tests.delivery.test_delivery_calculation.TestDeliveryPageCalculation object at 0x7febf541a710>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"82f3aa2417413393d190efc85d9d72f1\")>\nurl = 'https://sandboxtest.stroyrem-nn.ru/', case_id = 'TD 009'\nlink_item = 'products/shtukaturka-gipsovaya-aksolit-m50-30-kg-mashinnogo-naneseniya'\namount = 166, weight = 5000, standard = 2500, in_time = 4990, all_time = 5480\n\n    @pytest.mark.parametrize('case_id, link_item, amount, weight, standard, in_time, all_time', [\n        (\"TD 001\", uroven_3000, 1, 30, 0, 1590, 2190),\n        (\"TD 002\", bundeks_25, 1, 30, 400, 1590, 2190),\n        (\"TD 003\", aksolit_30, 8, 300, 400, 1590, 2190),\n        (\"TD 004\", aksolit_30, 13, 400, 450, 1590, 2190),\n        (\"TD 005\", aksolit_30, 16, 500, 600, 1590, 2190),\n        (\"TD 006\", aksolit_30, 25, 1700, 990, 1990, 2480),\n        (\"TD 007\", aksolit_30, 66, 2000, 1300, 2490, 2980),\n        (\"TD 008\", aksolit_30, 149, 4500, 2300, 3980, 4490),\n        (\"TD 009\", aksolit_30, 166, 5000, 2500, 4990, 5480),\n        pytest.param(\n            \"TD 010\", aksolit_30, 206, 6200, 2900, 5570, 6120,\n            marks=pytest.mark.xfail(reson=\"Цена доставки 3600 7960 8980\")\n        ),\n        (\"TD 011\", aksolit_30, 299, 9000, 3600, 7960, 8980),\n        (\"TD 012\", aksolit_30, 333, 10000, 4450, 11990, 12500),\n        pytest.param(\n            \"TD 013\", aksolit_30, 366, 11000, 4800, 12450, 13480,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        ),\n        pytest.param(\n            \"TD 014\", aksolit_30, 666, 20000, 5400, 15600, 17490,\n            marks=pytest.mark.xfail(reason=\"Цена стандартной доставки 4450\")\n        )\n    ])\n    @pytest.mark.smoke\n    def test_positive_delivery_green_zone_smoke(\n            self, driver, url, case_id, link_item, amount, weight, standard, in_time, all_time\n    ):\n    \n        driver.get(f'{url}{link_item}')\n        item_page = ItemPage(driver)\n>       item_page.add_item_to_cart(amount).click_on_cart()\n\ntests/delivery/test_delivery_calculation.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/item_page.py:42: in add_item_to_cart\n    amount_field.clear()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:117: in clear\n    self._execute(Command.CLEAR_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7febf51b8110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#16 0x56292ad61d68 \\\\u003Cunknown>\\\\n#17 0x56292ad70cb3 \\\\u003Cunknown>\\\\n#18 0x7f4515319044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x56292ad77e23 <unknown>\nE       #1 0x56292aaa05f6 <unknown>\nE       #2 0x56292aad6c5d <unknown>\nE       #3 0x56292ab00012 <unknown>\nE       #4 0x56292aad4fb6 <unknown>\nE       #5 0x56292ab001de <unknown>\nE       #6 0x56292ab18369 <unknown>\nE       #7 0x56292aaffde3 <unknown>\nE       #8 0x56292aad3a7b <unknown>\nE       #9 0x56292aad481e <unknown>\nE       #10 0x56292ad39638 <unknown>\nE       #11 0x56292ad3d507 <unknown>\nE       #12 0x56292ad47c4c <unknown>\nE       #13 0x56292ad3e136 <unknown>\nE       #14 0x56292ad0c9cf <unknown>\nE       #15 0x56292ad61b98 <unknown>\nE       #16 0x56292ad61d68 <unknown>\nE       #17 0x56292ad70cb3 <unknown>\nE       #18 0x7f4515319044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Добавляем товар в корзину в количестве 166","time":{"start":1693730634474,"stop":1693730634597,"duration":123},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x56292ad77e23 <unknown>\n#1 0x56292aaa05f6 <unknown>\n#2 0x56292aad6c5d <unknown>\n#3 0x56292ab00012 <unknown>\n#4 0x56292aad4fb6 <unknown>\n#5 0x56292ab001de <unknown>\n#6 0x56292ab18369 <unknown>\n#7 0x56292aaffde3 <unknown>\n#8 0x56292aad3a7b <unknown>\n#9 0x56292aad481e <unknown>\n#10 0x56292ad39638 <unknown>\n#11 0x56292ad3d507 <unknown>\n#12 0x56292ad47c4c <unknown>\n#13 0x56292ad3e136 <unknown>\n#14 0x56292ad0c9cf <unknown>\n#15 0x56292ad61b98 <unknown>\n#16 0x56292ad61d68 <unknown>\n#17 0x56292ad70cb3 <unknown>\n#18 0x7f4515319044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/item_page.py\", line 42, in add_item_to_cart\n    amount_field.clear()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 117, in clear\n    self._execute(Command.CLEAR_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"amount","value":"166"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"9ed04c30dccb04fa","name":"Screenshot","source":"9ed04c30dccb04fa.png","type":"image/png","size":214974},{"uid":"f58913fb1135fa59","name":"HTML source","source":"f58913fb1135fa59.html","type":"text/html","size":321582}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1693730634862,"stop":1693730634862,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1693730634862,"stop":1693730634925,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Delivery Page - calculation"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"tests.delivery"},{"name":"suite","value":"test_delivery_calculation"},{"name":"subSuite","value":"TestDeliveryPageCalculation"},{"name":"host","value":"9090e7ce6d1b"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.delivery.test_delivery_calculation"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"all_time","value":"5480"},{"name":"amount","value":"166"},{"name":"case_id","value":"'TD 009'"},{"name":"in_time","value":"4990"},{"name":"link_item","value":"'products/shtukaturka-gipsovaya-aksolit-m50-30-kg-mashinnogo-naneseniya'"},{"name":"standard","value":"2500"},{"name":"url","value":"'https://sandboxtest.stroyrem-nn.ru/'"},{"name":"weight","value":"5000"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":0,"unknown":0,"total":5},"items":[{"uid":"481da2527477d70a","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/481da2527477d70a","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x559bd8e7ee23 <unknown>\n#1 0x559bd8ba75f6 <unknown>\n#2 0x559bd8bddc5d <unknown>\n#3 0x559bd8c07012 <unknown>\n#4 0x559bd8bdbfb6 <unknown>\n#5 0x559bd8c071de <unknown>\n#6 0x559bd8c1f369 <unknown>\n#7 0x559bd8c06de3 <unknown>\n#8 0x559bd8bdaa7b <unknown>\n#9 0x559bd8bdb81e <unknown>\n#10 0x559bd8e40638 <unknown>\n#11 0x559bd8e44507 <unknown>\n#12 0x559bd8e4ec4c <unknown>\n#13 0x559bd8e45136 <unknown>\n#14 0x559bd8e139cf <unknown>\n#15 0x559bd8e68b98 <unknown>\n#16 0x559bd8e68d68 <unknown>\n#17 0x559bd8e77cb3 <unknown>\n#18 0x7f69f536c044 <unknown>","time":{"start":1693702925004,"stop":1693702931357,"duration":6353}},{"uid":"9c90fcab951f17b9","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/9c90fcab951f17b9","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55c446ae5e23 <unknown>\n#1 0x55c44680e7a7 <unknown>\n#2 0x55c446806829 <unknown>\n#3 0x55c4467f62c2 <unknown>\n#4 0x55c4467f79fb <unknown>\n#5 0x55c4467f669d <unknown>\n#6 0x55c4467f565c <unknown>\n#7 0x55c4467f55ce <unknown>\n#8 0x55c4467f428a <unknown>\n#9 0x55c4467f46da <unknown>\n#10 0x55c446810630 <unknown>\n#11 0x55c446886b15 <unknown>\n#12 0x55c44686e012 <unknown>\n#13 0x55c446886369 <unknown>\n#14 0x55c44686dde3 <unknown>\n#15 0x55c446841a7b <unknown>\n#16 0x55c44684281e <unknown>\n#17 0x55c446aa7638 <unknown>\n#18 0x55c446aab507 <unknown>\n#19 0x55c446ab5c4c <unknown>\n#20 0x55c446aac136 <unknown>\n#21 0x55c446a7a9cf <unknown>\n#22 0x55c446acfb98 <unknown>\n#23 0x55c446acfd68 <unknown>\n#24 0x55c446adecb3 <unknown>\n#25 0x7f0498624044 <unknown>","time":{"start":1693616198075,"stop":1693616198496,"duration":421}},{"uid":"9692426f5b7b26cb","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/9692426f5b7b26cb","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x561970610e23 <unknown>\n#1 0x5619703397a7 <unknown>\n#2 0x561970331829 <unknown>\n#3 0x5619703212c2 <unknown>\n#4 0x5619703229fb <unknown>\n#5 0x56197032169d <unknown>\n#6 0x56197032065c <unknown>\n#7 0x5619703205ce <unknown>\n#8 0x56197031f28a <unknown>\n#9 0x56197031f6da <unknown>\n#10 0x56197033b630 <unknown>\n#11 0x5619703b1b15 <unknown>\n#12 0x561970399012 <unknown>\n#13 0x5619703b1369 <unknown>\n#14 0x561970398de3 <unknown>\n#15 0x56197036ca7b <unknown>\n#16 0x56197036d81e <unknown>\n#17 0x5619705d2638 <unknown>\n#18 0x5619705d6507 <unknown>\n#19 0x5619705e0c4c <unknown>\n#20 0x5619705d7136 <unknown>\n#21 0x5619705a59cf <unknown>\n#22 0x5619705fab98 <unknown>\n#23 0x5619705fad68 <unknown>\n#24 0x561970609cb3 <unknown>\n#25 0x7fb8d483e044 <unknown>","time":{"start":1693530120287,"stop":1693530120522,"duration":235}},{"uid":"6542e1938d5fbb1","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/6542e1938d5fbb1","status":"broken","statusDetails":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//a[@class='add-to-cart yellow-btn'])[1]\"}\n  (Session info: headless chrome=116.0.5845.96); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n#0 0x563f22a80e23 <unknown>\n#1 0x563f227a97a7 <unknown>\n#2 0x563f227e81d3 <unknown>\n#3 0x563f227e82c1 <unknown>\n#4 0x563f22823a04 <unknown>\n#5 0x563f2280903d <unknown>\n#6 0x563f22821369 <unknown>\n#7 0x563f22808de3 <unknown>\n#8 0x563f227dca7b <unknown>\n#9 0x563f227dd81e <unknown>\n#10 0x563f22a42638 <unknown>\n#11 0x563f22a46507 <unknown>\n#12 0x563f22a50c4c <unknown>\n#13 0x563f22a47136 <unknown>\n#14 0x563f22a159cf <unknown>\n#15 0x563f22a6ab98 <unknown>\n#16 0x563f22a6ad68 <unknown>\n#17 0x563f22a79cb3 <unknown>\n#18 0x7fefeae0f044 <unknown>","time":{"start":1693476168262,"stop":1693476168904,"duration":642}}]},"tags":["smoke"]},"source":"98db81d6a4191329.json","parameterValues":["5480","166","'TD 009'","4990","'products/shtukaturka-gipsovaya-aksolit-m50-30-kg-mashinnogo-naneseniya'","2500","'https://sandboxtest.stroyrem-nn.ru/'","5000"]}