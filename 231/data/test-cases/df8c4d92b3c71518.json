{"uid":"df8c4d92b3c71518","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"56dc95032881057b0b8ffab5dc914f14","time":{"start":1709082128570,"stop":1709082130798,"duration":2228},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=122.0.6261.94)\nStacktrace:\n#0 0x55c541affe93 <unknown>\n#1 0x55c5417f7ce6 <unknown>\n#2 0x55c541849a73 <unknown>\n#3 0x55c54184798e <unknown>\n#4 0x55c541845367 <unknown>\n#5 0x55c541844732 <unknown>\n#6 0x55c541837d27 <unknown>\n#7 0x55c541864eb2 <unknown>\n#8 0x55c5418376b8 <unknown>\n#9 0x55c54186507e <unknown>\n#10 0x55c541883899 <unknown>\n#11 0x55c541864c53 <unknown>\n#12 0x55c541835db3 <unknown>\n#13 0x55c54183677e <unknown>\n#14 0x55c541ac57cb <unknown>\n#15 0x55c541ac97e5 <unknown>\n#16 0x55c541ab30e1 <unknown>\n#17 0x55c541aca372 <unknown>\n#18 0x55c541a971bf <unknown>\n#19 0x55c541aee488 <unknown>\n#20 0x55c541aee683 <unknown>\n#21 0x55c541aff044 <unknown>\n#22 0x7fb8529f8134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fbce0e54390>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fbce15cdf10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbce0b932d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c541aee683 \\\\u003Cunknown>\\\\n#21 0x55c541aff044 \\\\u003Cunknown>\\\\n#22 0x7fb8529f8134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=122.0.6261.94)\nE       Stacktrace:\nE       #0 0x55c541affe93 <unknown>\nE       #1 0x55c5417f7ce6 <unknown>\nE       #2 0x55c541849a73 <unknown>\nE       #3 0x55c54184798e <unknown>\nE       #4 0x55c541845367 <unknown>\nE       #5 0x55c541844732 <unknown>\nE       #6 0x55c541837d27 <unknown>\nE       #7 0x55c541864eb2 <unknown>\nE       #8 0x55c5418376b8 <unknown>\nE       #9 0x55c54186507e <unknown>\nE       #10 0x55c541883899 <unknown>\nE       #11 0x55c541864c53 <unknown>\nE       #12 0x55c541835db3 <unknown>\nE       #13 0x55c54183677e <unknown>\nE       #14 0x55c541ac57cb <unknown>\nE       #15 0x55c541ac97e5 <unknown>\nE       #16 0x55c541ab30e1 <unknown>\nE       #17 0x55c541aca372 <unknown>\nE       #18 0x55c541a971bf <unknown>\nE       #19 0x55c541aee488 <unknown>\nE       #20 0x55c541aee683 <unknown>\nE       #21 0x55c541aff044 <unknown>\nE       #22 0x7fb8529f8134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1709081203305,"stop":1709081203374,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1709081203374,"stop":1709081203374,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1709082120211,"stop":1709082120989,"duration":778},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1709082120989,"stop":1709082120989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1709082120989,"stop":1709082128569,"duration":7580},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=122.0.6261.94)\nStacktrace:\n#0 0x55c541affe93 <unknown>\n#1 0x55c5417f7ce6 <unknown>\n#2 0x55c541849a73 <unknown>\n#3 0x55c54184798e <unknown>\n#4 0x55c541845367 <unknown>\n#5 0x55c541844732 <unknown>\n#6 0x55c541837d27 <unknown>\n#7 0x55c541864eb2 <unknown>\n#8 0x55c5418376b8 <unknown>\n#9 0x55c54186507e <unknown>\n#10 0x55c541883899 <unknown>\n#11 0x55c541864c53 <unknown>\n#12 0x55c541835db3 <unknown>\n#13 0x55c54183677e <unknown>\n#14 0x55c541ac57cb <unknown>\n#15 0x55c541ac97e5 <unknown>\n#16 0x55c541ab30e1 <unknown>\n#17 0x55c541aca372 <unknown>\n#18 0x55c541a971bf <unknown>\n#19 0x55c541aee488 <unknown>\n#20 0x55c541aee683 <unknown>\n#21 0x55c541aff044 <unknown>\n#22 0x7fb8529f8134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fbce0e54390>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fbce15cdf10>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fbce0b932d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c541aee683 \\\\u003Cunknown>\\\\n#21 0x55c541aff044 \\\\u003Cunknown>\\\\n#22 0x7fb8529f8134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=122.0.6261.94)\nE       Stacktrace:\nE       #0 0x55c541affe93 <unknown>\nE       #1 0x55c5417f7ce6 <unknown>\nE       #2 0x55c541849a73 <unknown>\nE       #3 0x55c54184798e <unknown>\nE       #4 0x55c541845367 <unknown>\nE       #5 0x55c541844732 <unknown>\nE       #6 0x55c541837d27 <unknown>\nE       #7 0x55c541864eb2 <unknown>\nE       #8 0x55c5418376b8 <unknown>\nE       #9 0x55c54186507e <unknown>\nE       #10 0x55c541883899 <unknown>\nE       #11 0x55c541864c53 <unknown>\nE       #12 0x55c541835db3 <unknown>\nE       #13 0x55c54183677e <unknown>\nE       #14 0x55c541ac57cb <unknown>\nE       #15 0x55c541ac97e5 <unknown>\nE       #16 0x55c541ab30e1 <unknown>\nE       #17 0x55c541aca372 <unknown>\nE       #18 0x55c541a971bf <unknown>\nE       #19 0x55c541aee488 <unknown>\nE       #20 0x55c541aee683 <unknown>\nE       #21 0x55c541aff044 <unknown>\nE       #22 0x7fb8529f8134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1709082128570,"stop":1709082128629,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1709082129687,"stop":1709082129730,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"558630f6f8339de3","name":"Screenshot","source":"558630f6f8339de3.png","type":"image/png","size":205597},{"uid":"7ab1654acf7ab277","name":"HTML source","source":"7ab1654acf7ab277.html","type":"text/html","size":821148}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1709082130997,"stop":1709082130997,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1709082130998,"stop":1709082131072,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"0ac4849f2dce"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":194,"unknown":0,"total":199},"items":[{"uid":"43d11c665d117c04","reportUrl":"https://Nat754.github.io/StroyremAutomation/230//#testresult/43d11c665d117c04","status":"passed","time":{"start":1708995835156,"stop":1708995847476,"duration":12320}},{"uid":"ab9e06180116ee77","reportUrl":"https://Nat754.github.io/StroyremAutomation/229//#testresult/ab9e06180116ee77","status":"passed","time":{"start":1708909371621,"stop":1708909383054,"duration":11433}},{"uid":"cb262847e3746ea9","reportUrl":"https://Nat754.github.io/StroyremAutomation/228//#testresult/cb262847e3746ea9","status":"passed","time":{"start":1708823235921,"stop":1708823247913,"duration":11992}},{"uid":"38892c86e5d5e842","reportUrl":"https://Nat754.github.io/StroyremAutomation/227//#testresult/38892c86e5d5e842","status":"passed","time":{"start":1708736363919,"stop":1708736375283,"duration":11364}},{"uid":"361b79e5e2f1d281","reportUrl":"https://Nat754.github.io/StroyremAutomation/226//#testresult/361b79e5e2f1d281","status":"passed","time":{"start":1708650076787,"stop":1708650087891,"duration":11104}},{"uid":"8789110356af285e","reportUrl":"https://Nat754.github.io/StroyremAutomation/225//#testresult/8789110356af285e","status":"passed","time":{"start":1708563950110,"stop":1708563962898,"duration":12788}},{"uid":"9cce8f80db75c777","reportUrl":"https://Nat754.github.io/StroyremAutomation/224//#testresult/9cce8f80db75c777","status":"passed","time":{"start":1708477561321,"stop":1708477573641,"duration":12320}},{"uid":"11e9a5fb3160a514","reportUrl":"https://Nat754.github.io/StroyremAutomation/223//#testresult/11e9a5fb3160a514","status":"passed","time":{"start":1708390919097,"stop":1708390931118,"duration":12021}},{"uid":"1f779c5f60fc4e09","reportUrl":"https://Nat754.github.io/StroyremAutomation/222//#testresult/1f779c5f60fc4e09","status":"passed","time":{"start":1708304817775,"stop":1708304829902,"duration":12127}},{"uid":"f61891e1169cdd0","reportUrl":"https://Nat754.github.io/StroyremAutomation/221//#testresult/f61891e1169cdd0","status":"passed","time":{"start":1708218333255,"stop":1708218345295,"duration":12040}},{"uid":"5b3eb202a923a984","reportUrl":"https://Nat754.github.io/StroyremAutomation/220//#testresult/5b3eb202a923a984","status":"passed","time":{"start":1708131645204,"stop":1708131656610,"duration":11406}},{"uid":"f8a750055340edac","reportUrl":"https://Nat754.github.io/StroyremAutomation/219//#testresult/f8a750055340edac","status":"passed","time":{"start":1708045538629,"stop":1708045551669,"duration":13040}},{"uid":"691c4270d82d499b","reportUrl":"https://Nat754.github.io/StroyremAutomation/218//#testresult/691c4270d82d499b","status":"passed","time":{"start":1707958963899,"stop":1707958975637,"duration":11738}},{"uid":"23743348dcda33f7","reportUrl":"https://Nat754.github.io/StroyremAutomation/217//#testresult/23743348dcda33f7","status":"passed","time":{"start":1707872802390,"stop":1707872814280,"duration":11890}},{"uid":"60304fa6b3acac59","reportUrl":"https://Nat754.github.io/StroyremAutomation/216//#testresult/60304fa6b3acac59","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=121.0.6167.85)\nStacktrace:\n#0 0x5636ef218d93 <unknown>\n#1 0x5636eeefc337 <unknown>\n#2 0x5636eef4ee2e <unknown>\n#3 0x5636eef4cbd0 <unknown>\n#4 0x5636eef4a44a <unknown>\n#5 0x5636eef49226 <unknown>\n#6 0x5636eef3c6b7 <unknown>\n#7 0x5636eef6a442 <unknown>\n#8 0x5636eef3c028 <unknown>\n#9 0x5636eef6a60e <unknown>\n#10 0x5636eef8912d <unknown>\n#11 0x5636eef6a1e3 <unknown>\n#12 0x5636eef3a135 <unknown>\n#13 0x5636eef3b13e <unknown>\n#14 0x5636ef1dce4b <unknown>\n#15 0x5636ef1e0dfa <unknown>\n#16 0x5636ef1c96d5 <unknown>\n#17 0x5636ef1e1a6f <unknown>\n#18 0x5636ef1ad69f <unknown>\n#19 0x5636ef206098 <unknown>\n#20 0x5636ef206262 <unknown>\n#21 0x5636ef217f34 <unknown>\n#22 0x7f9ab6c88134 <unknown>","time":{"start":1707786496801,"stop":1707786499059,"duration":2258}},{"uid":"e5fa283ea56a2eb5","reportUrl":"https://Nat754.github.io/StroyremAutomation/215//#testresult/e5fa283ea56a2eb5","status":"passed","time":{"start":1707699781692,"stop":1707699793005,"duration":11313}},{"uid":"36559674c7071cf6","reportUrl":"https://Nat754.github.io/StroyremAutomation/214//#testresult/36559674c7071cf6","status":"passed","time":{"start":1707613683789,"stop":1707613695530,"duration":11741}},{"uid":"d546fc2f97c5b180","reportUrl":"https://Nat754.github.io/StroyremAutomation/213//#testresult/d546fc2f97c5b180","status":"passed","time":{"start":1707527014286,"stop":1707527026020,"duration":11734}},{"uid":"50f50b0737150203","reportUrl":"https://Nat754.github.io/StroyremAutomation/212//#testresult/50f50b0737150203","status":"passed","time":{"start":1707440526867,"stop":1707440538658,"duration":11791}},{"uid":"d69f43e998a34d78","reportUrl":"https://Nat754.github.io/StroyremAutomation/211//#testresult/d69f43e998a34d78","status":"passed","time":{"start":1707354145084,"stop":1707354156896,"duration":11812}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"df8c4d92b3c71518.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}