{"uid":"8fcd0304e5c9bcb2","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"56dc95032881057b0b8ffab5dc914f14","time":{"start":1717550055753,"stop":1717550058038,"duration":2285},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x562894855e3a <unknown>\n#1 0x56289453f45c <unknown>\n#2 0x562894592336 <unknown>\n#3 0x562894590176 <unknown>\n#4 0x56289458db57 <unknown>\n#5 0x56289458c97c <unknown>\n#6 0x5628945800ff <unknown>\n#7 0x5628945ae4b2 <unknown>\n#8 0x56289457fa79 <unknown>\n#9 0x5628945ae67e <unknown>\n#10 0x5628945cd2cc <unknown>\n#11 0x5628945ae253 <unknown>\n#12 0x56289457e1c7 <unknown>\n#13 0x56289457eb3e <unknown>\n#14 0x56289481c27b <unknown>\n#15 0x562894820327 <unknown>\n#16 0x562894808dae <unknown>\n#17 0x562894820df2 <unknown>\n#18 0x5628947ed74f <unknown>\n#19 0x562894845128 <unknown>\n#20 0x5628948452fb <unknown>\n#21 0x562894854f6c <unknown>\n#22 0x7faeea129134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fca3de14250>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fca3c7b9010>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fca3d796250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5628948452fb \\\\u003Cunknown>\\\\n#21 0x562894854f6c \\\\u003Cunknown>\\\\n#22 0x7faeea129134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x562894855e3a <unknown>\nE       #1 0x56289453f45c <unknown>\nE       #2 0x562894592336 <unknown>\nE       #3 0x562894590176 <unknown>\nE       #4 0x56289458db57 <unknown>\nE       #5 0x56289458c97c <unknown>\nE       #6 0x5628945800ff <unknown>\nE       #7 0x5628945ae4b2 <unknown>\nE       #8 0x56289457fa79 <unknown>\nE       #9 0x5628945ae67e <unknown>\nE       #10 0x5628945cd2cc <unknown>\nE       #11 0x5628945ae253 <unknown>\nE       #12 0x56289457e1c7 <unknown>\nE       #13 0x56289457eb3e <unknown>\nE       #14 0x56289481c27b <unknown>\nE       #15 0x562894820327 <unknown>\nE       #16 0x562894808dae <unknown>\nE       #17 0x562894820df2 <unknown>\nE       #18 0x5628947ed74f <unknown>\nE       #19 0x562894845128 <unknown>\nE       #20 0x5628948452fb <unknown>\nE       #21 0x562894854f6c <unknown>\nE       #22 0x7faeea129134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717548811298,"stop":1717548811367,"duration":69},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1717548811367,"stop":1717548811367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1717550042128,"stop":1717550042822,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1717550042822,"stop":1717550042823,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1717550042823,"stop":1717550055753,"duration":12930},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x562894855e3a <unknown>\n#1 0x56289453f45c <unknown>\n#2 0x562894592336 <unknown>\n#3 0x562894590176 <unknown>\n#4 0x56289458db57 <unknown>\n#5 0x56289458c97c <unknown>\n#6 0x5628945800ff <unknown>\n#7 0x5628945ae4b2 <unknown>\n#8 0x56289457fa79 <unknown>\n#9 0x5628945ae67e <unknown>\n#10 0x5628945cd2cc <unknown>\n#11 0x5628945ae253 <unknown>\n#12 0x56289457e1c7 <unknown>\n#13 0x56289457eb3e <unknown>\n#14 0x56289481c27b <unknown>\n#15 0x562894820327 <unknown>\n#16 0x562894808dae <unknown>\n#17 0x562894820df2 <unknown>\n#18 0x5628947ed74f <unknown>\n#19 0x562894845128 <unknown>\n#20 0x5628948452fb <unknown>\n#21 0x562894854f6c <unknown>\n#22 0x7faeea129134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fca3de14250>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fca3c7b9010>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fca3d796250>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5628948452fb \\\\u003Cunknown>\\\\n#21 0x562894854f6c \\\\u003Cunknown>\\\\n#22 0x7faeea129134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x562894855e3a <unknown>\nE       #1 0x56289453f45c <unknown>\nE       #2 0x562894592336 <unknown>\nE       #3 0x562894590176 <unknown>\nE       #4 0x56289458db57 <unknown>\nE       #5 0x56289458c97c <unknown>\nE       #6 0x5628945800ff <unknown>\nE       #7 0x5628945ae4b2 <unknown>\nE       #8 0x56289457fa79 <unknown>\nE       #9 0x5628945ae67e <unknown>\nE       #10 0x5628945cd2cc <unknown>\nE       #11 0x5628945ae253 <unknown>\nE       #12 0x56289457e1c7 <unknown>\nE       #13 0x56289457eb3e <unknown>\nE       #14 0x56289481c27b <unknown>\nE       #15 0x562894820327 <unknown>\nE       #16 0x562894808dae <unknown>\nE       #17 0x562894820df2 <unknown>\nE       #18 0x5628947ed74f <unknown>\nE       #19 0x562894845128 <unknown>\nE       #20 0x5628948452fb <unknown>\nE       #21 0x562894854f6c <unknown>\nE       #22 0x7faeea129134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1717550055753,"stop":1717550055814,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1717550056882,"stop":1717550056936,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"c4e12b9284008249","name":"Screenshot","source":"c4e12b9284008249.png","type":"image/png","size":197289},{"uid":"89d13dbcf61bf846","name":"HTML source","source":"89d13dbcf61bf846.html","type":"text/html","size":864460}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1717550058232,"stop":1717550058232,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1717550058232,"stop":1717550058311,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"0acca70e2922"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":5,"unknown":0,"total":7},"items":[{"uid":"b8c544597eb41697","reportUrl":"https://Nat754.github.io/StroyremAutomation/328//#testresult/b8c544597eb41697","status":"passed","time":{"start":1717463435346,"stop":1717463447664,"duration":12318}},{"uid":"9ad668221eddd2e8","reportUrl":"https://Nat754.github.io/StroyremAutomation/327//#testresult/9ad668221eddd2e8","status":"passed","time":{"start":1717377275914,"stop":1717377288495,"duration":12581}},{"uid":"aeed51d407576304","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/aeed51d407576304","status":"passed","time":{"start":1717291004890,"stop":1717291017272,"duration":12382}},{"uid":"8cfd9f45d9cf5d64","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/8cfd9f45d9cf5d64","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x55ae463f5e3a <unknown>\n#1 0x55ae460df45c <unknown>\n#2 0x55ae46132336 <unknown>\n#3 0x55ae46130176 <unknown>\n#4 0x55ae4612db57 <unknown>\n#5 0x55ae4612c97c <unknown>\n#6 0x55ae461200ff <unknown>\n#7 0x55ae4614e4b2 <unknown>\n#8 0x55ae4611fa79 <unknown>\n#9 0x55ae4614e67e <unknown>\n#10 0x55ae4616d2cc <unknown>\n#11 0x55ae4614e253 <unknown>\n#12 0x55ae4611e1c7 <unknown>\n#13 0x55ae4611eb3e <unknown>\n#14 0x55ae463bc27b <unknown>\n#15 0x55ae463c0327 <unknown>\n#16 0x55ae463a8dae <unknown>\n#17 0x55ae463c0df2 <unknown>\n#18 0x55ae4638d74f <unknown>\n#19 0x55ae463e5128 <unknown>\n#20 0x55ae463e52fb <unknown>\n#21 0x55ae463f4f6c <unknown>\n#22 0x7f72cb5f4134 <unknown>","time":{"start":1717204341077,"stop":1717204343334,"duration":2257}},{"uid":"49f731d7780a0a9c","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/49f731d7780a0a9c","status":"passed","time":{"start":1717118034548,"stop":1717118047792,"duration":13244}},{"uid":"8d477b6147c61527","reportUrl":"https://Nat754.github.io/StroyremAutomation/323//#testresult/8d477b6147c61527","status":"passed","time":{"start":1717031353700,"stop":1717031368958,"duration":15258}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"8fcd0304e5c9bcb2.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}