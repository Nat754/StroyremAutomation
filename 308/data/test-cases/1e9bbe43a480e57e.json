{"uid":"1e9bbe43a480e57e","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"efd25b243308c430f9522a855290012b","time":{"start":1715734997934,"stop":1715735000216,"duration":2282},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=124.0.6367.207)\nStacktrace:\n#0 0x563bcbd16dc3 <unknown>\n#1 0x563bcba054e7 <unknown>\n#2 0x563bcba56fb3 <unknown>\n#3 0x563bcba54eb6 <unknown>\n#4 0x563bcba52887 <unknown>\n#5 0x563bcba51c54 <unknown>\n#6 0x563bcba45209 <unknown>\n#7 0x563bcba72452 <unknown>\n#8 0x563bcba44b98 <unknown>\n#9 0x563bcba7261e <unknown>\n#10 0x563bcba90c29 <unknown>\n#11 0x563bcba721f3 <unknown>\n#12 0x563bcba4328a <unknown>\n#13 0x563bcba43c5e <unknown>\n#14 0x563bcbcdb0eb <unknown>\n#15 0x563bcbcdf03b <unknown>\n#16 0x563bcbcc7201 <unknown>\n#17 0x563bcbcdfba2 <unknown>\n#18 0x563bcbcac0bf <unknown>\n#19 0x563bcbd05f18 <unknown>\n#20 0x563bcbd060f0 <unknown>\n#21 0x563bcbd15f14 <unknown>\n#22 0x7f1d8949f134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9c85a9ee10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9c850a3150>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9c85ac84d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563bcbd060f0 \\\\u003Cunknown>\\\\n#21 0x563bcbd15f14 \\\\u003Cunknown>\\\\n#22 0x7f1d8949f134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=124.0.6367.207)\nE       Stacktrace:\nE       #0 0x563bcbd16dc3 <unknown>\nE       #1 0x563bcba054e7 <unknown>\nE       #2 0x563bcba56fb3 <unknown>\nE       #3 0x563bcba54eb6 <unknown>\nE       #4 0x563bcba52887 <unknown>\nE       #5 0x563bcba51c54 <unknown>\nE       #6 0x563bcba45209 <unknown>\nE       #7 0x563bcba72452 <unknown>\nE       #8 0x563bcba44b98 <unknown>\nE       #9 0x563bcba7261e <unknown>\nE       #10 0x563bcba90c29 <unknown>\nE       #11 0x563bcba721f3 <unknown>\nE       #12 0x563bcba4328a <unknown>\nE       #13 0x563bcba43c5e <unknown>\nE       #14 0x563bcbcdb0eb <unknown>\nE       #15 0x563bcbcdf03b <unknown>\nE       #16 0x563bcbcc7201 <unknown>\nE       #17 0x563bcbcdfba2 <unknown>\nE       #18 0x563bcbcac0bf <unknown>\nE       #19 0x563bcbd05f18 <unknown>\nE       #20 0x563bcbd060f0 <unknown>\nE       #21 0x563bcbd15f14 <unknown>\nE       #22 0x7f1d8949f134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715734313590,"stop":1715734313660,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1715734313660,"stop":1715734313660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715734989593,"stop":1715734990280,"duration":687},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1715734990281,"stop":1715734997934,"duration":7653},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1715734990281,"stop":1715734990281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=124.0.6367.207)\nStacktrace:\n#0 0x563bcbd16dc3 <unknown>\n#1 0x563bcba054e7 <unknown>\n#2 0x563bcba56fb3 <unknown>\n#3 0x563bcba54eb6 <unknown>\n#4 0x563bcba52887 <unknown>\n#5 0x563bcba51c54 <unknown>\n#6 0x563bcba45209 <unknown>\n#7 0x563bcba72452 <unknown>\n#8 0x563bcba44b98 <unknown>\n#9 0x563bcba7261e <unknown>\n#10 0x563bcba90c29 <unknown>\n#11 0x563bcba721f3 <unknown>\n#12 0x563bcba4328a <unknown>\n#13 0x563bcba43c5e <unknown>\n#14 0x563bcbcdb0eb <unknown>\n#15 0x563bcbcdf03b <unknown>\n#16 0x563bcbcc7201 <unknown>\n#17 0x563bcbcdfba2 <unknown>\n#18 0x563bcbcac0bf <unknown>\n#19 0x563bcbd05f18 <unknown>\n#20 0x563bcbd060f0 <unknown>\n#21 0x563bcbd15f14 <unknown>\n#22 0x7f1d8949f134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f9c85a9ee10>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f9c850a3150>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f9c85ac84d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563bcbd060f0 \\\\u003Cunknown>\\\\n#21 0x563bcbd15f14 \\\\u003Cunknown>\\\\n#22 0x7f1d8949f134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=124.0.6367.207)\nE       Stacktrace:\nE       #0 0x563bcbd16dc3 <unknown>\nE       #1 0x563bcba054e7 <unknown>\nE       #2 0x563bcba56fb3 <unknown>\nE       #3 0x563bcba54eb6 <unknown>\nE       #4 0x563bcba52887 <unknown>\nE       #5 0x563bcba51c54 <unknown>\nE       #6 0x563bcba45209 <unknown>\nE       #7 0x563bcba72452 <unknown>\nE       #8 0x563bcba44b98 <unknown>\nE       #9 0x563bcba7261e <unknown>\nE       #10 0x563bcba90c29 <unknown>\nE       #11 0x563bcba721f3 <unknown>\nE       #12 0x563bcba4328a <unknown>\nE       #13 0x563bcba43c5e <unknown>\nE       #14 0x563bcbcdb0eb <unknown>\nE       #15 0x563bcbcdf03b <unknown>\nE       #16 0x563bcbcc7201 <unknown>\nE       #17 0x563bcbcdfba2 <unknown>\nE       #18 0x563bcbcac0bf <unknown>\nE       #19 0x563bcbd05f18 <unknown>\nE       #20 0x563bcbd060f0 <unknown>\nE       #21 0x563bcbd15f14 <unknown>\nE       #22 0x7f1d8949f134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1715734997935,"stop":1715734997965,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1715734998023,"stop":1715734998057,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1715734999090,"stop":1715734999129,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"715def3a6feff8c6","name":"Screenshot","source":"715def3a6feff8c6.png","type":"image/png","size":64145},{"uid":"4d32277e857483be","name":"HTML source","source":"4d32277e857483be.html","type":"text/html","size":953311}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1715735000414,"stop":1715735000414,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1715735000415,"stop":1715735000485,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"9218f5a8ee68"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":234,"unknown":0,"total":239},"items":[{"uid":"611d6f31ebdc8462","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/611d6f31ebdc8462","status":"passed","time":{"start":1715648575131,"stop":1715648585627,"duration":10496}},{"uid":"dfa442cfd936a58e","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/dfa442cfd936a58e","status":"passed","time":{"start":1715562411738,"stop":1715562421751,"duration":10013}},{"uid":"eaa7947dc7188a2b","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/eaa7947dc7188a2b","status":"passed","time":{"start":1715475921172,"stop":1715475929563,"duration":8391}},{"uid":"fe4bbf04354004c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/fe4bbf04354004c7","status":"passed","time":{"start":1715389216826,"stop":1715389225249,"duration":8423}},{"uid":"43fb56ee04d1d57","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/43fb56ee04d1d57","status":"passed","time":{"start":1715303079802,"stop":1715303089178,"duration":9376}},{"uid":"496a5ab2684b9e6d","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/496a5ab2684b9e6d","status":"passed","time":{"start":1715216457695,"stop":1715216466174,"duration":8479}},{"uid":"414a16a0ed401797","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/414a16a0ed401797","status":"passed","time":{"start":1715129686543,"stop":1715129695773,"duration":9230}},{"uid":"7e21aaa2a6360178","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/7e21aaa2a6360178","status":"passed","time":{"start":1715043638207,"stop":1715043646784,"duration":8577}},{"uid":"e273307d660e6a79","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/e273307d660e6a79","status":"passed","time":{"start":1714957296179,"stop":1714957304320,"duration":8141}},{"uid":"3baa28d5cbc7b2df","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/3baa28d5cbc7b2df","status":"passed","time":{"start":1714871033720,"stop":1714871042207,"duration":8487}},{"uid":"442a7cf6b91d9312","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/442a7cf6b91d9312","status":"passed","time":{"start":1714784425663,"stop":1714784434134,"duration":8471}},{"uid":"36ebc84e267995d6","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/36ebc84e267995d6","status":"passed","time":{"start":1714698264718,"stop":1714698273447,"duration":8729}},{"uid":"81aec26980cb675f","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/81aec26980cb675f","status":"passed","time":{"start":1714611573653,"stop":1714611582144,"duration":8491}},{"uid":"1e6de2a5e3ed0120","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/1e6de2a5e3ed0120","status":"passed","time":{"start":1714525436943,"stop":1714525445247,"duration":8304}},{"uid":"35936730922910a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/35936730922910a1","status":"passed","time":{"start":1714438797809,"stop":1714438806345,"duration":8536}},{"uid":"ad9c14937ba17c06","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/ad9c14937ba17c06","status":"passed","time":{"start":1714352489654,"stop":1714352497879,"duration":8225}},{"uid":"d11acede4c9b970","reportUrl":"https://Nat754.github.io/StroyremAutomation/291//#testresult/d11acede4c9b970","status":"passed","time":{"start":1714266389361,"stop":1714266398642,"duration":9281}},{"uid":"d1aa699b765894fa","reportUrl":"https://Nat754.github.io/StroyremAutomation/290//#testresult/d1aa699b765894fa","status":"passed","time":{"start":1714179725500,"stop":1714179734954,"duration":9454}},{"uid":"d9066047b5f36b44","reportUrl":"https://Nat754.github.io/StroyremAutomation/289//#testresult/d9066047b5f36b44","status":"passed","time":{"start":1714093385903,"stop":1714093395495,"duration":9592}},{"uid":"73ec648c2d88b392","reportUrl":"https://Nat754.github.io/StroyremAutomation/288//#testresult/73ec648c2d88b392","status":"passed","time":{"start":1714008718846,"stop":1714008728451,"duration":9605}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"1e9bbe43a480e57e.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}