{"uid":"1cf1c402a5bed595","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"dad3617134a119815037f972e0359b9c","time":{"start":1718673141866,"stop":1718673144123,"duration":2257},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.61)\nStacktrace:\n#0 0x5561891c66aa <unknown>\n#1 0x556188ea90dc <unknown>\n#2 0x556188efc6c6 <unknown>\n#3 0x556188efa516 <unknown>\n#4 0x556188ef7ef7 <unknown>\n#5 0x556188ef6d2c <unknown>\n#6 0x556188eea40f <unknown>\n#7 0x556188f18872 <unknown>\n#8 0x556188ee9d89 <unknown>\n#9 0x556188f18a3e <unknown>\n#10 0x556188f375c3 <unknown>\n#11 0x556188f18613 <unknown>\n#12 0x556188ee84f7 <unknown>\n#13 0x556188ee8e4e <unknown>\n#14 0x55618918c87b <unknown>\n#15 0x556189190921 <unknown>\n#16 0x55618917836e <unknown>\n#17 0x556189191482 <unknown>\n#18 0x55618915cccf <unknown>\n#19 0x5561891b60a8 <unknown>\n#20 0x5561891b6280 <unknown>\n#21 0x5561891c57dc <unknown>\n#22 0x7f2e15c5e134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff68b2d88d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff68af14e90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff68af15bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561891b6280 \\\\u003Cunknown>\\\\n#21 0x5561891c57dc \\\\u003Cunknown>\\\\n#22 0x7f2e15c5e134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.61)\nE       Stacktrace:\nE       #0 0x5561891c66aa <unknown>\nE       #1 0x556188ea90dc <unknown>\nE       #2 0x556188efc6c6 <unknown>\nE       #3 0x556188efa516 <unknown>\nE       #4 0x556188ef7ef7 <unknown>\nE       #5 0x556188ef6d2c <unknown>\nE       #6 0x556188eea40f <unknown>\nE       #7 0x556188f18872 <unknown>\nE       #8 0x556188ee9d89 <unknown>\nE       #9 0x556188f18a3e <unknown>\nE       #10 0x556188f375c3 <unknown>\nE       #11 0x556188f18613 <unknown>\nE       #12 0x556188ee84f7 <unknown>\nE       #13 0x556188ee8e4e <unknown>\nE       #14 0x55618918c87b <unknown>\nE       #15 0x556189190921 <unknown>\nE       #16 0x55618917836e <unknown>\nE       #17 0x556189191482 <unknown>\nE       #18 0x55618915cccf <unknown>\nE       #19 0x5561891b60a8 <unknown>\nE       #20 0x5561891b6280 <unknown>\nE       #21 0x5561891c57dc <unknown>\nE       #22 0x7f2e15c5e134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718672092154,"stop":1718672092222,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1718672092222,"stop":1718672092222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1718673128043,"stop":1718673128731,"duration":688},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1718673128731,"stop":1718673128731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1718673128732,"stop":1718673141866,"duration":13134},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.61)\nStacktrace:\n#0 0x5561891c66aa <unknown>\n#1 0x556188ea90dc <unknown>\n#2 0x556188efc6c6 <unknown>\n#3 0x556188efa516 <unknown>\n#4 0x556188ef7ef7 <unknown>\n#5 0x556188ef6d2c <unknown>\n#6 0x556188eea40f <unknown>\n#7 0x556188f18872 <unknown>\n#8 0x556188ee9d89 <unknown>\n#9 0x556188f18a3e <unknown>\n#10 0x556188f375c3 <unknown>\n#11 0x556188f18613 <unknown>\n#12 0x556188ee84f7 <unknown>\n#13 0x556188ee8e4e <unknown>\n#14 0x55618918c87b <unknown>\n#15 0x556189190921 <unknown>\n#16 0x55618917836e <unknown>\n#17 0x556189191482 <unknown>\n#18 0x55618915cccf <unknown>\n#19 0x5561891b60a8 <unknown>\n#20 0x5561891b6280 <unknown>\n#21 0x5561891c57dc <unknown>\n#22 0x7f2e15c5e134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ff68b2d88d0>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ff68af14e90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ff68af15bd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5561891b6280 \\\\u003Cunknown>\\\\n#21 0x5561891c57dc \\\\u003Cunknown>\\\\n#22 0x7f2e15c5e134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.61)\nE       Stacktrace:\nE       #0 0x5561891c66aa <unknown>\nE       #1 0x556188ea90dc <unknown>\nE       #2 0x556188efc6c6 <unknown>\nE       #3 0x556188efa516 <unknown>\nE       #4 0x556188ef7ef7 <unknown>\nE       #5 0x556188ef6d2c <unknown>\nE       #6 0x556188eea40f <unknown>\nE       #7 0x556188f18872 <unknown>\nE       #8 0x556188ee9d89 <unknown>\nE       #9 0x556188f18a3e <unknown>\nE       #10 0x556188f375c3 <unknown>\nE       #11 0x556188f18613 <unknown>\nE       #12 0x556188ee84f7 <unknown>\nE       #13 0x556188ee8e4e <unknown>\nE       #14 0x55618918c87b <unknown>\nE       #15 0x556189190921 <unknown>\nE       #16 0x55618917836e <unknown>\nE       #17 0x556189191482 <unknown>\nE       #18 0x55618915cccf <unknown>\nE       #19 0x5561891b60a8 <unknown>\nE       #20 0x5561891b6280 <unknown>\nE       #21 0x5561891c57dc <unknown>\nE       #22 0x7f2e15c5e134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1718673141866,"stop":1718673141917,"duration":51},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1718673142960,"stop":1718673143000,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"9b363a1505004822","name":"Screenshot","source":"9b363a1505004822.png","type":"image/png","size":181179},{"uid":"a0f07a9e3b18a5ec","name":"HTML source","source":"a0f07a9e3b18a5ec.html","type":"text/html","size":845908}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1718673144326,"stop":1718673144326,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1718673144327,"stop":1718673144408,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"d77854d73517"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":18,"unknown":0,"total":20},"items":[{"uid":"6ae4f7f5c96b33","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/6ae4f7f5c96b33","status":"passed","time":{"start":1718587018493,"stop":1718587030691,"duration":12198}},{"uid":"943c4cbc36af251d","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/943c4cbc36af251d","status":"passed","time":{"start":1718500718278,"stop":1718500730142,"duration":11864}},{"uid":"22ea829dbf9570c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/339//#testresult/22ea829dbf9570c7","status":"passed","time":{"start":1718414095215,"stop":1718414107199,"duration":11984}},{"uid":"3a2f0fb33e9510a8","reportUrl":"https://Nat754.github.io/StroyremAutomation/338//#testresult/3a2f0fb33e9510a8","status":"passed","time":{"start":1718327591571,"stop":1718327603353,"duration":11782}},{"uid":"82eb9fb6a69ddbfb","reportUrl":"https://Nat754.github.io/StroyremAutomation/337//#testresult/82eb9fb6a69ddbfb","status":"passed","time":{"start":1718241192012,"stop":1718241203951,"duration":11939}},{"uid":"15995beba87933a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/336//#testresult/15995beba87933a5","status":"passed","time":{"start":1718154912664,"stop":1718154925087,"duration":12423}},{"uid":"900ab91647e93f3a","reportUrl":"https://Nat754.github.io/StroyremAutomation/335//#testresult/900ab91647e93f3a","status":"passed","time":{"start":1718068262906,"stop":1718068276273,"duration":13367}},{"uid":"fa8bcf2d3934e7ae","reportUrl":"https://Nat754.github.io/StroyremAutomation/334//#testresult/fa8bcf2d3934e7ae","status":"passed","time":{"start":1717982167335,"stop":1717982179392,"duration":12057}},{"uid":"b27718f4676df6ac","reportUrl":"https://Nat754.github.io/StroyremAutomation/333//#testresult/b27718f4676df6ac","status":"passed","time":{"start":1717895728409,"stop":1717895739433,"duration":11024}},{"uid":"768a8f993cd181ca","reportUrl":"https://Nat754.github.io/StroyremAutomation/332//#testresult/768a8f993cd181ca","status":"passed","time":{"start":1717809255162,"stop":1717809267894,"duration":12732}},{"uid":"221eaa225f320fc3","reportUrl":"https://Nat754.github.io/StroyremAutomation/331//#testresult/221eaa225f320fc3","status":"passed","time":{"start":1717722775617,"stop":1717722786742,"duration":11125}},{"uid":"a040392989ae2496","reportUrl":"https://Nat754.github.io/StroyremAutomation/330//#testresult/a040392989ae2496","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x5607e429de3a <unknown>\n#1 0x5607e3f8745c <unknown>\n#2 0x5607e3fda336 <unknown>\n#3 0x5607e3fd8176 <unknown>\n#4 0x5607e3fd5b57 <unknown>\n#5 0x5607e3fd497c <unknown>\n#6 0x5607e3fc80ff <unknown>\n#7 0x5607e3ff64b2 <unknown>\n#8 0x5607e3fc7a79 <unknown>\n#9 0x5607e3ff667e <unknown>\n#10 0x5607e40152cc <unknown>\n#11 0x5607e3ff6253 <unknown>\n#12 0x5607e3fc61c7 <unknown>\n#13 0x5607e3fc6b3e <unknown>\n#14 0x5607e426427b <unknown>\n#15 0x5607e4268327 <unknown>\n#16 0x5607e4250dae <unknown>\n#17 0x5607e4268df2 <unknown>\n#18 0x5607e423574f <unknown>\n#19 0x5607e428d128 <unknown>\n#20 0x5607e428d2fb <unknown>\n#21 0x5607e429cf6c <unknown>\n#22 0x7fd92e3ba134 <unknown>","time":{"start":1717636276257,"stop":1717636278489,"duration":2232}},{"uid":"71e7cae8f04c9edc","reportUrl":"https://Nat754.github.io/StroyremAutomation/329//#testresult/71e7cae8f04c9edc","status":"passed","time":{"start":1717550077382,"stop":1717550089751,"duration":12369}},{"uid":"30b6b51a5535d1b3","reportUrl":"https://Nat754.github.io/StroyremAutomation/328//#testresult/30b6b51a5535d1b3","status":"passed","time":{"start":1717463459035,"stop":1717463470797,"duration":11762}},{"uid":"c15e53976acbbf65","reportUrl":"https://Nat754.github.io/StroyremAutomation/327//#testresult/c15e53976acbbf65","status":"passed","time":{"start":1717377304188,"stop":1717377316065,"duration":11877}},{"uid":"f53b2de77a48c04a","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/f53b2de77a48c04a","status":"passed","time":{"start":1717291033320,"stop":1717291045258,"duration":11938}},{"uid":"c42f23fa8f4df2b6","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/c42f23fa8f4df2b6","status":"passed","time":{"start":1717204355901,"stop":1717204367269,"duration":11368}},{"uid":"56620c2bd1ad9979","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/56620c2bd1ad9979","status":"passed","time":{"start":1717118065807,"stop":1717118077964,"duration":12157}},{"uid":"9a441da8026304d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/323//#testresult/9a441da8026304d2","status":"passed","time":{"start":1717031380308,"stop":1717031391222,"duration":10914}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"1cf1c402a5bed595.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}