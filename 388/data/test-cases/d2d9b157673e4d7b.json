{"uid":"d2d9b157673e4d7b","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"7f4f129a3704d352785ddaeba828a7cd","time":{"start":1722647409832,"stop":1722647412080,"duration":2248},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55adf171271a <unknown>\n#1 0x55adf13e3640 <unknown>\n#2 0x55adf1439926 <unknown>\n#3 0x55adf1437836 <unknown>\n#4 0x55adf14352b7 <unknown>\n#5 0x55adf143415c <unknown>\n#6 0x55adf1427c26 <unknown>\n#7 0x55adf14558e2 <unknown>\n#8 0x55adf14275d9 <unknown>\n#9 0x55adf1455aae <unknown>\n#10 0x55adf147408a <unknown>\n#11 0x55adf1455683 <unknown>\n#12 0x55adf1425d71 <unknown>\n#13 0x55adf14267de <unknown>\n#14 0x55adf16da2ab <unknown>\n#15 0x55adf16de242 <unknown>\n#16 0x55adf16c7665 <unknown>\n#17 0x55adf16dedd2 <unknown>\n#18 0x55adf16ac2af <unknown>\n#19 0x55adf1701eb8 <unknown>\n#20 0x55adf1702090 <unknown>\n#21 0x55adf17114ec <unknown>\n#22 0x7f770a0d2134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fcd3a972c10>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fcd3b0201d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcd3b021010>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55adf1702090 \\\\u003Cunknown>\\\\n#21 0x55adf17114ec \\\\u003Cunknown>\\\\n#22 0x7f770a0d2134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55adf171271a <unknown>\nE       #1 0x55adf13e3640 <unknown>\nE       #2 0x55adf1439926 <unknown>\nE       #3 0x55adf1437836 <unknown>\nE       #4 0x55adf14352b7 <unknown>\nE       #5 0x55adf143415c <unknown>\nE       #6 0x55adf1427c26 <unknown>\nE       #7 0x55adf14558e2 <unknown>\nE       #8 0x55adf14275d9 <unknown>\nE       #9 0x55adf1455aae <unknown>\nE       #10 0x55adf147408a <unknown>\nE       #11 0x55adf1455683 <unknown>\nE       #12 0x55adf1425d71 <unknown>\nE       #13 0x55adf14267de <unknown>\nE       #14 0x55adf16da2ab <unknown>\nE       #15 0x55adf16de242 <unknown>\nE       #16 0x55adf16c7665 <unknown>\nE       #17 0x55adf16dedd2 <unknown>\nE       #18 0x55adf16ac2af <unknown>\nE       #19 0x55adf1701eb8 <unknown>\nE       #20 0x55adf1702090 <unknown>\nE       #21 0x55adf17114ec <unknown>\nE       #22 0x7f770a0d2134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1722646551153,"stop":1722646551221,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1722646551222,"stop":1722646551222,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1722647395372,"stop":1722647396062,"duration":690},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1722647396062,"stop":1722647396062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1722647396062,"stop":1722647409832,"duration":13770},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.88)\nStacktrace:\n#0 0x55adf171271a <unknown>\n#1 0x55adf13e3640 <unknown>\n#2 0x55adf1439926 <unknown>\n#3 0x55adf1437836 <unknown>\n#4 0x55adf14352b7 <unknown>\n#5 0x55adf143415c <unknown>\n#6 0x55adf1427c26 <unknown>\n#7 0x55adf14558e2 <unknown>\n#8 0x55adf14275d9 <unknown>\n#9 0x55adf1455aae <unknown>\n#10 0x55adf147408a <unknown>\n#11 0x55adf1455683 <unknown>\n#12 0x55adf1425d71 <unknown>\n#13 0x55adf14267de <unknown>\n#14 0x55adf16da2ab <unknown>\n#15 0x55adf16de242 <unknown>\n#16 0x55adf16c7665 <unknown>\n#17 0x55adf16dedd2 <unknown>\n#18 0x55adf16ac2af <unknown>\n#19 0x55adf1701eb8 <unknown>\n#20 0x55adf1702090 <unknown>\n#21 0x55adf17114ec <unknown>\n#22 0x7f770a0d2134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fcd3a972c10>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fcd3b0201d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fcd3b021010>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55adf1702090 \\\\u003Cunknown>\\\\n#21 0x55adf17114ec \\\\u003Cunknown>\\\\n#22 0x7f770a0d2134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.88)\nE       Stacktrace:\nE       #0 0x55adf171271a <unknown>\nE       #1 0x55adf13e3640 <unknown>\nE       #2 0x55adf1439926 <unknown>\nE       #3 0x55adf1437836 <unknown>\nE       #4 0x55adf14352b7 <unknown>\nE       #5 0x55adf143415c <unknown>\nE       #6 0x55adf1427c26 <unknown>\nE       #7 0x55adf14558e2 <unknown>\nE       #8 0x55adf14275d9 <unknown>\nE       #9 0x55adf1455aae <unknown>\nE       #10 0x55adf147408a <unknown>\nE       #11 0x55adf1455683 <unknown>\nE       #12 0x55adf1425d71 <unknown>\nE       #13 0x55adf14267de <unknown>\nE       #14 0x55adf16da2ab <unknown>\nE       #15 0x55adf16de242 <unknown>\nE       #16 0x55adf16c7665 <unknown>\nE       #17 0x55adf16dedd2 <unknown>\nE       #18 0x55adf16ac2af <unknown>\nE       #19 0x55adf1701eb8 <unknown>\nE       #20 0x55adf1702090 <unknown>\nE       #21 0x55adf17114ec <unknown>\nE       #22 0x7f770a0d2134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1722647409832,"stop":1722647409866,"duration":34},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1722647409928,"stop":1722647409953,"duration":25},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1722647410990,"stop":1722647411029,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"e9320ff18dd60893","name":"Screenshot","source":"e9320ff18dd60893.png","type":"image/png","size":48778},{"uid":"9c5989e9cbe75e88","name":"HTML source","source":"9c5989e9cbe75e88.html","type":"text/html","size":932174}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1722647412281,"stop":1722647412281,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1722647412281,"stop":1722647412358,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"96f6ad634d4d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":64,"unknown":0,"total":66},"items":[{"uid":"e7866c70aa44ec1b","reportUrl":"https://Nat754.github.io/StroyremAutomation/387//#testresult/e7866c70aa44ec1b","status":"passed","time":{"start":1722560846859,"stop":1722560855011,"duration":8152}},{"uid":"c517c3cccef84f6a","reportUrl":"https://Nat754.github.io/StroyremAutomation/386//#testresult/c517c3cccef84f6a","status":"passed","time":{"start":1722474788980,"stop":1722474797835,"duration":8855}},{"uid":"fb33edfb0fd53d20","reportUrl":"https://Nat754.github.io/StroyremAutomation/385//#testresult/fb33edfb0fd53d20","status":"passed","time":{"start":1722387417354,"stop":1722387425759,"duration":8405}},{"uid":"9c900ce8271028ca","reportUrl":"https://Nat754.github.io/StroyremAutomation/384//#testresult/9c900ce8271028ca","status":"passed","time":{"start":1722301637920,"stop":1722301646423,"duration":8503}},{"uid":"c627cfac7b387023","reportUrl":"https://Nat754.github.io/StroyremAutomation/383//#testresult/c627cfac7b387023","status":"passed","time":{"start":1722215332059,"stop":1722215340603,"duration":8544}},{"uid":"7955b9eab83dc2d6","reportUrl":"https://Nat754.github.io/StroyremAutomation/382//#testresult/7955b9eab83dc2d6","status":"passed","time":{"start":1722129150773,"stop":1722129159094,"duration":8321}},{"uid":"c8b36ab5e5a906a","reportUrl":"https://Nat754.github.io/StroyremAutomation/381//#testresult/c8b36ab5e5a906a","status":"passed","time":{"start":1722042407468,"stop":1722042415672,"duration":8204}},{"uid":"31225450a47f9943","reportUrl":"https://Nat754.github.io/StroyremAutomation/380//#testresult/31225450a47f9943","status":"passed","time":{"start":1721956008865,"stop":1721956017234,"duration":8369}},{"uid":"96b48cbdf32ef54f","reportUrl":"https://Nat754.github.io/StroyremAutomation/379//#testresult/96b48cbdf32ef54f","status":"passed","time":{"start":1721869807094,"stop":1721869816793,"duration":9699}},{"uid":"a820acf9b6fdf16c","reportUrl":"https://Nat754.github.io/StroyremAutomation/378//#testresult/a820acf9b6fdf16c","status":"passed","time":{"start":1721783452492,"stop":1721783461671,"duration":9179}},{"uid":"f5f689561787ff4e","reportUrl":"https://Nat754.github.io/StroyremAutomation/377//#testresult/f5f689561787ff4e","status":"passed","time":{"start":1721697015458,"stop":1721697024891,"duration":9433}},{"uid":"ac5581cff09f6b72","reportUrl":"https://Nat754.github.io/StroyremAutomation/376//#testresult/ac5581cff09f6b72","status":"passed","time":{"start":1721610745114,"stop":1721610754894,"duration":9780}},{"uid":"67f44d4b468e4ef0","reportUrl":"https://Nat754.github.io/StroyremAutomation/375//#testresult/67f44d4b468e4ef0","status":"passed","time":{"start":1721524308778,"stop":1721524317112,"duration":8334}},{"uid":"a3f5b253b83429ee","reportUrl":"https://Nat754.github.io/StroyremAutomation/374//#testresult/a3f5b253b83429ee","status":"passed","time":{"start":1721437738267,"stop":1721437748212,"duration":9945}},{"uid":"d0c77ce6258062c1","reportUrl":"https://Nat754.github.io/StroyremAutomation/373//#testresult/d0c77ce6258062c1","status":"passed","time":{"start":1721351407255,"stop":1721351417604,"duration":10349}},{"uid":"eb4eca4eb0e06579","reportUrl":"https://Nat754.github.io/StroyremAutomation/372//#testresult/eb4eca4eb0e06579","status":"passed","time":{"start":1721264963634,"stop":1721264973660,"duration":10026}},{"uid":"ddced8030cd67091","reportUrl":"https://Nat754.github.io/StroyremAutomation/371//#testresult/ddced8030cd67091","status":"passed","time":{"start":1721178470490,"stop":1721178479198,"duration":8708}},{"uid":"9dbdc8ec863cebc","reportUrl":"https://Nat754.github.io/StroyremAutomation/370//#testresult/9dbdc8ec863cebc","status":"passed","time":{"start":1721092243552,"stop":1721092252308,"duration":8756}},{"uid":"3973b3eebc7e6d5f","reportUrl":"https://Nat754.github.io/StroyremAutomation/369//#testresult/3973b3eebc7e6d5f","status":"passed","time":{"start":1721005958905,"stop":1721005968397,"duration":9492}},{"uid":"275b643fe26af50c","reportUrl":"https://Nat754.github.io/StroyremAutomation/368//#testresult/275b643fe26af50c","status":"passed","time":{"start":1720919534160,"stop":1720919543207,"duration":9047}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"d2d9b157673e4d7b.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}