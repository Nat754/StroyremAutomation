{"uid":"c8c5c6db463ede14","name":"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke","historyId":"6c6513eb0cdbeb8cfcb6aa8a59b40c6b","time":{"start":1695690717773,"stop":1695690720114,"duration":2341},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x56521f6016b3 <unknown>\n#1 0x56521f2d71e7 <unknown>\n#2 0x56521f32465d <unknown>\n#3 0x56521f3229fd <unknown>\n#4 0x56521f3207b8 <unknown>\n#5 0x56521f31f827 <unknown>\n#6 0x56521f3144f9 <unknown>\n#7 0x56521f3400c2 <unknown>\n#8 0x56521f313f16 <unknown>\n#9 0x56521f34028e <unknown>\n#10 0x56521f359322 <unknown>\n#11 0x56521f33fe93 <unknown>\n#12 0x56521f312934 <unknown>\n#13 0x56521f31371e <unknown>\n#14 0x56521f5c6cb8 <unknown>\n#15 0x56521f5cabf0 <unknown>\n#16 0x56521f5d519c <unknown>\n#17 0x56521f5cb808 <unknown>\n#18 0x56521f59827f <unknown>\n#19 0x56521f5efe88 <unknown>\n#20 0x56521f5f0059 <unknown>\n#21 0x56521f600843 <unknown>\n#22 0x7f4e8b17c044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f742f100c50>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f742e68be10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742f5dc1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56521f5f0059 \\\\u003Cunknown>\\\\n#21 0x56521f600843 \\\\u003Cunknown>\\\\n#22 0x7f4e8b17c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x56521f6016b3 <unknown>\nE       #1 0x56521f2d71e7 <unknown>\nE       #2 0x56521f32465d <unknown>\nE       #3 0x56521f3229fd <unknown>\nE       #4 0x56521f3207b8 <unknown>\nE       #5 0x56521f31f827 <unknown>\nE       #6 0x56521f3144f9 <unknown>\nE       #7 0x56521f3400c2 <unknown>\nE       #8 0x56521f313f16 <unknown>\nE       #9 0x56521f34028e <unknown>\nE       #10 0x56521f359322 <unknown>\nE       #11 0x56521f33fe93 <unknown>\nE       #12 0x56521f312934 <unknown>\nE       #13 0x56521f31371e <unknown>\nE       #14 0x56521f5c6cb8 <unknown>\nE       #15 0x56521f5cabf0 <unknown>\nE       #16 0x56521f5d519c <unknown>\nE       #17 0x56521f5cb808 <unknown>\nE       #18 0x56521f59827f <unknown>\nE       #19 0x56521f5efe88 <unknown>\nE       #20 0x56521f5f0059 <unknown>\nE       #21 0x56521f600843 <unknown>\nE       #22 0x7f4e8b17c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695689287890,"stop":1695689287973,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1695689287973,"stop":1695689287973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695690704627,"stop":1695690705453,"duration":826},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1695690705453,"stop":1695690705453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1695690705453,"stop":1695690717772,"duration":12319},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x56521f6016b3 <unknown>\n#1 0x56521f2d71e7 <unknown>\n#2 0x56521f32465d <unknown>\n#3 0x56521f3229fd <unknown>\n#4 0x56521f3207b8 <unknown>\n#5 0x56521f31f827 <unknown>\n#6 0x56521f3144f9 <unknown>\n#7 0x56521f3400c2 <unknown>\n#8 0x56521f313f16 <unknown>\n#9 0x56521f34028e <unknown>\n#10 0x56521f359322 <unknown>\n#11 0x56521f33fe93 <unknown>\n#12 0x56521f312934 <unknown>\n#13 0x56521f31371e <unknown>\n#14 0x56521f5c6cb8 <unknown>\n#15 0x56521f5cabf0 <unknown>\n#16 0x56521f5d519c <unknown>\n#17 0x56521f5cb808 <unknown>\n#18 0x56521f59827f <unknown>\n#19 0x56521f5efe88 <unknown>\n#20 0x56521f5f0059 <unknown>\n#21 0x56521f600843 <unknown>\n#22 0x7f4e8b17c044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f742f100c50>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f742e68be10>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_3500_to_4999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(3500)\n        product_page_open.get_field_price_last().send_keys(4999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:300: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742f5dc1d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56521f5f0059 \\\\u003Cunknown>\\\\n#21 0x56521f600843 \\\\u003Cunknown>\\\\n#22 0x7f4e8b17c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x56521f6016b3 <unknown>\nE       #1 0x56521f2d71e7 <unknown>\nE       #2 0x56521f32465d <unknown>\nE       #3 0x56521f3229fd <unknown>\nE       #4 0x56521f3207b8 <unknown>\nE       #5 0x56521f31f827 <unknown>\nE       #6 0x56521f3144f9 <unknown>\nE       #7 0x56521f3400c2 <unknown>\nE       #8 0x56521f313f16 <unknown>\nE       #9 0x56521f34028e <unknown>\nE       #10 0x56521f359322 <unknown>\nE       #11 0x56521f33fe93 <unknown>\nE       #12 0x56521f312934 <unknown>\nE       #13 0x56521f31371e <unknown>\nE       #14 0x56521f5c6cb8 <unknown>\nE       #15 0x56521f5cabf0 <unknown>\nE       #16 0x56521f5d519c <unknown>\nE       #17 0x56521f5cb808 <unknown>\nE       #18 0x56521f59827f <unknown>\nE       #19 0x56521f5efe88 <unknown>\nE       #20 0x56521f5f0059 <unknown>\nE       #21 0x56521f600843 <unknown>\nE       #22 0x7f4e8b17c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1695690717773,"stop":1695690717847,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1695690717918,"stop":1695690717951,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1695690719006,"stop":1695690719067,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"1ed2f064c4b47383","name":"Screenshot","source":"1ed2f064c4b47383.png","type":"image/png","size":79209},{"uid":"5a35d9d8c63a9c90","name":"HTML source","source":"5a35d9d8c63a9c90.html","type":"text/html","size":643979}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1695690720324,"stop":1695690720392,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1695690720324,"stop":1695690720324,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"a710f57ebf7d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":37,"unknown":0,"total":58},"items":[{"uid":"e557381d9370e858","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/e557381d9370e858","status":"passed","time":{"start":1695604265769,"stop":1695604276433,"duration":10664}},{"uid":"59db7436e3c1d93f","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/59db7436e3c1d93f","status":"passed","time":{"start":1695517629941,"stop":1695517639402,"duration":9461}},{"uid":"aafd0a739c26e728","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/aafd0a739c26e728","status":"passed","time":{"start":1695431337200,"stop":1695431348437,"duration":11237}},{"uid":"9ebbcd7e25305bbb","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/9ebbcd7e25305bbb","status":"passed","time":{"start":1695406635043,"stop":1695406646108,"duration":11065}},{"uid":"1d2362a1a48756f5","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/1d2362a1a48756f5","status":"passed","time":{"start":1695344717081,"stop":1695344726610,"duration":9529}},{"uid":"3a061778c848efd8","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/3a061778c848efd8","status":"passed","time":{"start":1695258301071,"stop":1695258310557,"duration":9486}},{"uid":"c0a0f3ae6e4028d8","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/c0a0f3ae6e4028d8","status":"passed","time":{"start":1695172416810,"stop":1695172427614,"duration":10804}},{"uid":"a42c798b7f96f9e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/a42c798b7f96f9e1","status":"passed","time":{"start":1695085678533,"stop":1695085688448,"duration":9915}},{"uid":"4d0ec0ed8c4cf843","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/4d0ec0ed8c4cf843","status":"passed","time":{"start":1695064265840,"stop":1695064276181,"duration":10341}},{"uid":"7f8c4ce359fbde03","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/7f8c4ce359fbde03","status":"passed","time":{"start":1695060882704,"stop":1695060892258,"duration":9554}},{"uid":"36374f17ecd9e83e","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/36374f17ecd9e83e","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x557036fbc6c3 <unknown>\n#1 0x557036c921e7 <unknown>\n#2 0x557036cd9566 <unknown>\n#3 0x557036cd9651 <unknown>\n#4 0x557036d16a74 <unknown>\n#5 0x557036cfb0ed <unknown>\n#6 0x557036d14322 <unknown>\n#7 0x557036cfae93 <unknown>\n#8 0x557036ccd934 <unknown>\n#9 0x557036cce71e <unknown>\n#10 0x557036f81cc8 <unknown>\n#11 0x557036f85c00 <unknown>\n#12 0x557036f901ac <unknown>\n#13 0x557036f86818 <unknown>\n#14 0x557036f5328f <unknown>\n#15 0x557036faae98 <unknown>\n#16 0x557036fab069 <unknown>\n#17 0x557036fbb853 <unknown>\n#18 0x7fc18f06d044 <unknown>","time":{"start":1694998921897,"stop":1694998937072,"duration":15175}},{"uid":"dc64994a47215e6a","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/dc64994a47215e6a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55d5cf6446c3 <unknown>\n#1 0x55d5cf31a1e7 <unknown>\n#2 0x55d5cf361566 <unknown>\n#3 0x55d5cf361651 <unknown>\n#4 0x55d5cf39ea74 <unknown>\n#5 0x55d5cf3830ed <unknown>\n#6 0x55d5cf39c322 <unknown>\n#7 0x55d5cf382e93 <unknown>\n#8 0x55d5cf355934 <unknown>\n#9 0x55d5cf35671e <unknown>\n#10 0x55d5cf609cc8 <unknown>\n#11 0x55d5cf60dc00 <unknown>\n#12 0x55d5cf6181ac <unknown>\n#13 0x55d5cf60e818 <unknown>\n#14 0x55d5cf5db28f <unknown>\n#15 0x55d5cf632e98 <unknown>\n#16 0x55d5cf633069 <unknown>\n#17 0x55d5cf643853 <unknown>\n#18 0x7f6cd492e044 <unknown>","time":{"start":1694929916723,"stop":1694929931897,"duration":15174}},{"uid":"368499e02d5db23a","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/368499e02d5db23a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5590fc9bb6c3 <unknown>\n#1 0x5590fc6911e7 <unknown>\n#2 0x5590fc6d8566 <unknown>\n#3 0x5590fc6d8651 <unknown>\n#4 0x5590fc715a74 <unknown>\n#5 0x5590fc6fa0ed <unknown>\n#6 0x5590fc713322 <unknown>\n#7 0x5590fc6f9e93 <unknown>\n#8 0x5590fc6cc934 <unknown>\n#9 0x5590fc6cd71e <unknown>\n#10 0x5590fc980cc8 <unknown>\n#11 0x5590fc984c00 <unknown>\n#12 0x5590fc98f1ac <unknown>\n#13 0x5590fc985818 <unknown>\n#14 0x5590fc95228f <unknown>\n#15 0x5590fc9a9e98 <unknown>\n#16 0x5590fc9aa069 <unknown>\n#17 0x5590fc9ba853 <unknown>\n#18 0x7fce836f6044 <unknown>","time":{"start":1694912805016,"stop":1694912820100,"duration":15084}},{"uid":"8ff1963a2ae75d76","reportUrl":"https://Nat754.github.io/StroyremAutomation/64//#testresult/8ff1963a2ae75d76","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e23a1726c3 <unknown>\n#1 0x55e239e481e7 <unknown>\n#2 0x55e239e8f566 <unknown>\n#3 0x55e239e8f651 <unknown>\n#4 0x55e239ecca74 <unknown>\n#5 0x55e239eb10ed <unknown>\n#6 0x55e239eca322 <unknown>\n#7 0x55e239eb0e93 <unknown>\n#8 0x55e239e83934 <unknown>\n#9 0x55e239e8471e <unknown>\n#10 0x55e23a137cc8 <unknown>\n#11 0x55e23a13bc00 <unknown>\n#12 0x55e23a1461ac <unknown>\n#13 0x55e23a13c818 <unknown>\n#14 0x55e23a10928f <unknown>\n#15 0x55e23a160e98 <unknown>\n#16 0x55e23a161069 <unknown>\n#17 0x55e23a171853 <unknown>\n#18 0x7f7564862044 <unknown>","time":{"start":1694826112268,"stop":1694826127390,"duration":15122}},{"uid":"956675fc21fefd7","reportUrl":"https://Nat754.github.io/StroyremAutomation/63//#testresult/956675fc21fefd7","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x564423b2e693 <unknown>\n#1 0x5644238041e7 <unknown>\n#2 0x56442384b566 <unknown>\n#3 0x56442384b651 <unknown>\n#4 0x564423888a74 <unknown>\n#5 0x56442386d0ed <unknown>\n#6 0x564423886322 <unknown>\n#7 0x56442386ce93 <unknown>\n#8 0x56442383f934 <unknown>\n#9 0x56442384071e <unknown>\n#10 0x564423af3c98 <unknown>\n#11 0x564423af7bd0 <unknown>\n#12 0x564423b0217c <unknown>\n#13 0x564423af87e8 <unknown>\n#14 0x564423ac525f <unknown>\n#15 0x564423b1ce68 <unknown>\n#16 0x564423b1d039 <unknown>\n#17 0x564423b2d823 <unknown>\n#18 0x7f0033b63044 <unknown>","time":{"start":1694739852170,"stop":1694739867184,"duration":15014}},{"uid":"b727603959194b7a","reportUrl":"https://Nat754.github.io/StroyremAutomation/62//#testresult/b727603959194b7a","status":"passed","time":{"start":1694653333823,"stop":1694653343288,"duration":9465}},{"uid":"db03b6d8bedda625","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/db03b6d8bedda625","status":"passed","time":{"start":1694638312736,"stop":1694638322066,"duration":9330}},{"uid":"48bbf3db0dc232ab","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/48bbf3db0dc232ab","status":"passed","time":{"start":1694581223665,"stop":1694581234213,"duration":10548}},{"uid":"e1c8acea6427c01e","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/e1c8acea6427c01e","status":"passed","time":{"start":1694567023531,"stop":1694567033182,"duration":9651}},{"uid":"926f97939474ca7a","reportUrl":"https://Nat754.github.io/StroyremAutomation/60//#testresult/926f97939474ca7a","status":"passed","time":{"start":1694505210039,"stop":1694505220722,"duration":10683}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"c8c5c6db463ede14.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}