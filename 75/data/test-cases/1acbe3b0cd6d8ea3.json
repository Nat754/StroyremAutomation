{"uid":"1acbe3b0cd6d8ea3","name":"Авторизация с помощью аккаунта vk.ru","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_authorization_first_time_using_VK_smoke","historyId":"90d9b31fa09a95d56f8a1b9e397956da","time":{"start":1695690844113,"stop":1695690844113,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x5573d55316b3 <unknown>\n#1 0x5573d52071e7 <unknown>\n#2 0x5573d51ff2f3 <unknown>\n#3 0x5573d51efd17 <unknown>\n#4 0x5573d51f1191 <unknown>\n#5 0x5573d51f0053 <unknown>\n#6 0x5573d51ef06c <unknown>\n#7 0x5573d51eefde <unknown>\n#8 0x5573d51edbe4 <unknown>\n#9 0x5573d51ee06a <unknown>\n#10 0x5573d52098ce <unknown>\n#11 0x5573d5289ad5 <unknown>\n#12 0x5573d52700c2 <unknown>\n#13 0x5573d5289322 <unknown>\n#14 0x5573d526fe93 <unknown>\n#15 0x5573d5242934 <unknown>\n#16 0x5573d524371e <unknown>\n#17 0x5573d54f6cb8 <unknown>\n#18 0x5573d54fabf0 <unknown>\n#19 0x5573d550519c <unknown>\n#20 0x5573d54fb808 <unknown>\n#21 0x5573d54c827f <unknown>\n#22 0x5573d551fe88 <unknown>\n#23 0x5573d5520059 <unknown>\n#24 0x5573d5530843 <unknown>\n#25 0x7f0dc1a6d044 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"984e8225435fff6727e053be11274dbf\")>\n\n    @pytest.fixture(scope='function')\n    def sign_in_page(driver):\n        sign_in_page = SignInPage(driver)\n>       driver.get(MAIN_PAGE_PROD_URL)\n\ntests/test_sign_in/conftest.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in get\n    self.execute(Command.GET, {\"url\": url})\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742e6a8750>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x5573d5520059 \\\\u003Cunknown>\\\\n#24 0x5573d5530843 \\\\u003Cunknown>\\\\n#25 0x7f0dc1a6d044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x5573d55316b3 <unknown>\nE       #1 0x5573d52071e7 <unknown>\nE       #2 0x5573d51ff2f3 <unknown>\nE       #3 0x5573d51efd17 <unknown>\nE       #4 0x5573d51f1191 <unknown>\nE       #5 0x5573d51f0053 <unknown>\nE       #6 0x5573d51ef06c <unknown>\nE       #7 0x5573d51eefde <unknown>\nE       #8 0x5573d51edbe4 <unknown>\nE       #9 0x5573d51ee06a <unknown>\nE       #10 0x5573d52098ce <unknown>\nE       #11 0x5573d5289ad5 <unknown>\nE       #12 0x5573d52700c2 <unknown>\nE       #13 0x5573d5289322 <unknown>\nE       #14 0x5573d526fe93 <unknown>\nE       #15 0x5573d5242934 <unknown>\nE       #16 0x5573d524371e <unknown>\nE       #17 0x5573d54f6cb8 <unknown>\nE       #18 0x5573d54fabf0 <unknown>\nE       #19 0x5573d550519c <unknown>\nE       #20 0x5573d54fb808 <unknown>\nE       #21 0x5573d54c827f <unknown>\nE       #22 0x5573d551fe88 <unknown>\nE       #23 0x5573d5520059 <unknown>\nE       #24 0x5573d5530843 <unknown>\nE       #25 0x7f0dc1a6d044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695689287890,"stop":1695689287973,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1695689287973,"stop":1695689287973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695690844114,"stop":1695690844947,"duration":833},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1695690844947,"stop":1695690844947,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"sign_in_page","time":{"start":1695690844947,"stop":1695690845154,"duration":207},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x5573d55316b3 <unknown>\n#1 0x5573d52071e7 <unknown>\n#2 0x5573d51ff2f3 <unknown>\n#3 0x5573d51efd17 <unknown>\n#4 0x5573d51f1191 <unknown>\n#5 0x5573d51f0053 <unknown>\n#6 0x5573d51ef06c <unknown>\n#7 0x5573d51eefde <unknown>\n#8 0x5573d51edbe4 <unknown>\n#9 0x5573d51ee06a <unknown>\n#10 0x5573d52098ce <unknown>\n#11 0x5573d5289ad5 <unknown>\n#12 0x5573d52700c2 <unknown>\n#13 0x5573d5289322 <unknown>\n#14 0x5573d526fe93 <unknown>\n#15 0x5573d5242934 <unknown>\n#16 0x5573d524371e <unknown>\n#17 0x5573d54f6cb8 <unknown>\n#18 0x5573d54fabf0 <unknown>\n#19 0x5573d550519c <unknown>\n#20 0x5573d54fb808 <unknown>\n#21 0x5573d54c827f <unknown>\n#22 0x5573d551fe88 <unknown>\n#23 0x5573d5520059 <unknown>\n#24 0x5573d5530843 <unknown>\n#25 0x7f0dc1a6d044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/tests/test_sign_in/conftest.py\", line 10, in sign_in_page\n    driver.get(MAIN_PAGE_PROD_URL)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"driver::0","time":{"start":1695690845179,"stop":1695690845235,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1695690845179,"stop":1695690845179,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"a710f57ebf7d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":4,"broken":2,"skipped":8,"passed":63,"unknown":0,"total":77},"items":[{"uid":"d16604b351a8eca1","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/d16604b351a8eca1","status":"passed","time":{"start":1695604536469,"stop":1695604555298,"duration":18829}},{"uid":"6f52f45692722291","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/6f52f45692722291","status":"passed","time":{"start":1695517844013,"stop":1695517860833,"duration":16820}},{"uid":"e4f0a17ff7364713","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/e4f0a17ff7364713","status":"passed","time":{"start":1695431609958,"stop":1695431629045,"duration":19087}},{"uid":"9cb98bae428feb51","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/9cb98bae428feb51","status":"passed","time":{"start":1695406911737,"stop":1695406931675,"duration":19938}},{"uid":"7e326694f28a2269","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/7e326694f28a2269","status":"passed","time":{"start":1695344935216,"stop":1695344952433,"duration":17217}},{"uid":"e9cf4fc7cc260d94","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/e9cf4fc7cc260d94","status":"passed","time":{"start":1695258519308,"stop":1695258536667,"duration":17359}},{"uid":"cd268fe8ab3e8e1a","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/cd268fe8ab3e8e1a","status":"passed","time":{"start":1695172693452,"stop":1695172712180,"duration":18728}},{"uid":"8d011e5a00f2a5a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/8d011e5a00f2a5a0","status":"passed","time":{"start":1695085924139,"stop":1695085942548,"duration":18409}},{"uid":"6d8bc84fbd997616","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/6d8bc84fbd997616","status":"passed","time":{"start":1695064519147,"stop":1695064538017,"duration":18870}},{"uid":"d37510200986f022","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/d37510200986f022","status":"passed","time":{"start":1695061102165,"stop":1695061118297,"duration":16132}},{"uid":"2f95ac047e047a9","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/2f95ac047e047a9","status":"passed","time":{"start":1694999129522,"stop":1694999147114,"duration":17592}},{"uid":"6f14477b8f31826c","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/6f14477b8f31826c","status":"passed","time":{"start":1694930151155,"stop":1694930169012,"duration":17857}},{"uid":"a8786c888c05e355","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/a8786c888c05e355","status":"passed","time":{"start":1694913033272,"stop":1694913052090,"duration":18818}},{"uid":"e4e0f4619ad86161","reportUrl":"https://Nat754.github.io/StroyremAutomation/64//#testresult/e4e0f4619ad86161","status":"passed","time":{"start":1694826342234,"stop":1694826361887,"duration":19653}},{"uid":"400a6d56b2ed7c86","reportUrl":"https://Nat754.github.io/StroyremAutomation/63//#testresult/400a6d56b2ed7c86","status":"passed","time":{"start":1694740082821,"stop":1694740100870,"duration":18049}},{"uid":"4d4211d22b4e8289","reportUrl":"https://Nat754.github.io/StroyremAutomation/62//#testresult/4d4211d22b4e8289","status":"passed","time":{"start":1694653540580,"stop":1694653557533,"duration":16953}},{"uid":"1b4026d2f0923ac5","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/1b4026d2f0923ac5","status":"passed","time":{"start":1694638518259,"stop":1694638534826,"duration":16567}},{"uid":"d0a69f58f5dbe71f","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/d0a69f58f5dbe71f","status":"passed","time":{"start":1694581481390,"stop":1694581499485,"duration":18095}},{"uid":"7f205098a5ac98c0","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/7f205098a5ac98c0","status":"passed","time":{"start":1694567229588,"stop":1694567247004,"duration":17416}},{"uid":"59bd31f27e73d990","reportUrl":"https://Nat754.github.io/StroyremAutomation/60//#testresult/59bd31f27e73d990","status":"passed","time":{"start":1694505486555,"stop":1694505505801,"duration":19246}}]},"tags":["smoke_test"]},"source":"1acbe3b0cd6d8ea3.json","parameterValues":[]}