{"uid":"d2c61f19290e8ce","name":"Проверка открытия тултипа с кнопками 'Войти' и 'Регистрация' и открытия окна авторизации","fullName":"tests.test_sign_in.test_sign_in_page.TestSignInPage#test_positive_Open_authorization_form_smoke","historyId":"9eda0eab1dca4bd3b76e706f78065412","time":{"start":1695690839198,"stop":1695690839198,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55a546f9d6b3 <unknown>\n#1 0x55a546c731e7 <unknown>\n#2 0x55a546c6b2f3 <unknown>\n#3 0x55a546c5bd17 <unknown>\n#4 0x55a546c5d191 <unknown>\n#5 0x55a546c5c053 <unknown>\n#6 0x55a546c5b06c <unknown>\n#7 0x55a546c5afde <unknown>\n#8 0x55a546c59be4 <unknown>\n#9 0x55a546c5a06a <unknown>\n#10 0x55a546c758ce <unknown>\n#11 0x55a546cf5ad5 <unknown>\n#12 0x55a546cdc0c2 <unknown>\n#13 0x55a546cf5322 <unknown>\n#14 0x55a546cdbe93 <unknown>\n#15 0x55a546cae934 <unknown>\n#16 0x55a546caf71e <unknown>\n#17 0x55a546f62cb8 <unknown>\n#18 0x55a546f66bf0 <unknown>\n#19 0x55a546f7119c <unknown>\n#20 0x55a546f67808 <unknown>\n#21 0x55a546f3427f <unknown>\n#22 0x55a546f8be88 <unknown>\n#23 0x55a546f8c059 <unknown>\n#24 0x55a546f9c843 <unknown>\n#25 0x7f3a29d35044 <unknown>","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0c9743f86557c4de2648c3e4a37deb88\")>\n\n    @pytest.fixture(scope='function')\n    def sign_in_page(driver):\n        sign_in_page = SignInPage(driver)\n>       driver.get(MAIN_PAGE_PROD_URL)\n\ntests/test_sign_in/conftest.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:354: in get\n    self.execute(Command.GET, {\"url\": url})\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742e6b2f90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_REFUSED\\\\n  ...\\\\n#23 0x55a546f8c059 \\\\u003Cunknown>\\\\n#24 0x55a546f9c843 \\\\u003Cunknown>\\\\n#25 0x7f3a29d35044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x55a546f9d6b3 <unknown>\nE       #1 0x55a546c731e7 <unknown>\nE       #2 0x55a546c6b2f3 <unknown>\nE       #3 0x55a546c5bd17 <unknown>\nE       #4 0x55a546c5d191 <unknown>\nE       #5 0x55a546c5c053 <unknown>\nE       #6 0x55a546c5b06c <unknown>\nE       #7 0x55a546c5afde <unknown>\nE       #8 0x55a546c59be4 <unknown>\nE       #9 0x55a546c5a06a <unknown>\nE       #10 0x55a546c758ce <unknown>\nE       #11 0x55a546cf5ad5 <unknown>\nE       #12 0x55a546cdc0c2 <unknown>\nE       #13 0x55a546cf5322 <unknown>\nE       #14 0x55a546cdbe93 <unknown>\nE       #15 0x55a546cae934 <unknown>\nE       #16 0x55a546caf71e <unknown>\nE       #17 0x55a546f62cb8 <unknown>\nE       #18 0x55a546f66bf0 <unknown>\nE       #19 0x55a546f7119c <unknown>\nE       #20 0x55a546f67808 <unknown>\nE       #21 0x55a546f3427f <unknown>\nE       #22 0x55a546f8be88 <unknown>\nE       #23 0x55a546f8c059 <unknown>\nE       #24 0x55a546f9c843 <unknown>\nE       #25 0x7f3a29d35044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695689287890,"stop":1695689287973,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1695689287973,"stop":1695689287973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695690839199,"stop":1695690840036,"duration":837},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1695690840036,"stop":1695690840036,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"sign_in_page","time":{"start":1695690840036,"stop":1695690840396,"duration":360},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55a546f9d6b3 <unknown>\n#1 0x55a546c731e7 <unknown>\n#2 0x55a546c6b2f3 <unknown>\n#3 0x55a546c5bd17 <unknown>\n#4 0x55a546c5d191 <unknown>\n#5 0x55a546c5c053 <unknown>\n#6 0x55a546c5b06c <unknown>\n#7 0x55a546c5afde <unknown>\n#8 0x55a546c59be4 <unknown>\n#9 0x55a546c5a06a <unknown>\n#10 0x55a546c758ce <unknown>\n#11 0x55a546cf5ad5 <unknown>\n#12 0x55a546cdc0c2 <unknown>\n#13 0x55a546cf5322 <unknown>\n#14 0x55a546cdbe93 <unknown>\n#15 0x55a546cae934 <unknown>\n#16 0x55a546caf71e <unknown>\n#17 0x55a546f62cb8 <unknown>\n#18 0x55a546f66bf0 <unknown>\n#19 0x55a546f7119c <unknown>\n#20 0x55a546f67808 <unknown>\n#21 0x55a546f3427f <unknown>\n#22 0x55a546f8be88 <unknown>\n#23 0x55a546f8c059 <unknown>\n#24 0x55a546f9c843 <unknown>\n#25 0x7f3a29d35044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/pluggy/_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 1123, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/tests/test_sign_in/conftest.py\", line 10, in sign_in_page\n    driver.get(MAIN_PAGE_PROD_URL)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"afterStages":[{"name":"setup::0","time":{"start":1695690840421,"stop":1695690840421,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1695690840421,"stop":1695690840477,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Sign In Page"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_sign_in"},{"name":"suite","value":"test_sign_in_page"},{"name":"subSuite","value":"TestSignInPage"},{"name":"host","value":"a710f57ebf7d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_sign_in.test_sign_in_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":76,"unknown":0,"total":77},"items":[{"uid":"f78c7e3582073e","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/f78c7e3582073e","status":"passed","time":{"start":1695604446032,"stop":1695604446275,"duration":243}},{"uid":"b479d35d24b63727","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/b479d35d24b63727","status":"passed","time":{"start":1695517769838,"stop":1695517770058,"duration":220}},{"uid":"7486c7d8cbe40d1e","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/7486c7d8cbe40d1e","status":"passed","time":{"start":1695431520418,"stop":1695431520693,"duration":275}},{"uid":"b8fc4d225a890d5d","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/b8fc4d225a890d5d","status":"passed","time":{"start":1695406819290,"stop":1695406819606,"duration":316}},{"uid":"a86f42392f91118","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/a86f42392f91118","status":"passed","time":{"start":1695344861348,"stop":1695344861553,"duration":205}},{"uid":"867bf69484ef54f9","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/867bf69484ef54f9","status":"passed","time":{"start":1695258446014,"stop":1695258446248,"duration":234}},{"uid":"ab60668ccff6d5d9","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/ab60668ccff6d5d9","status":"passed","time":{"start":1695172602141,"stop":1695172602410,"duration":269}},{"uid":"c29b5715e21a80a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/c29b5715e21a80a0","status":"passed","time":{"start":1695085842565,"stop":1695085842835,"duration":270}},{"uid":"628a103547351c6f","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/628a103547351c6f","status":"passed","time":{"start":1695064435823,"stop":1695064436174,"duration":351}},{"uid":"2fa01cdc8154b33c","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/2fa01cdc8154b33c","status":"passed","time":{"start":1695061027683,"stop":1695061027896,"duration":213}},{"uid":"6789dfa75668372f","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/6789dfa75668372f","status":"passed","time":{"start":1694999055278,"stop":1694999055487,"duration":209}},{"uid":"4d18ff5f86f3f29","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/4d18ff5f86f3f29","status":"passed","time":{"start":1694930064358,"stop":1694930064564,"duration":206}},{"uid":"69fd0c8896950b70","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/69fd0c8896950b70","status":"passed","time":{"start":1694912949875,"stop":1694912950200,"duration":325}},{"uid":"b917d59902940695","reportUrl":"https://Nat754.github.io/StroyremAutomation/64//#testresult/b917d59902940695","status":"passed","time":{"start":1694826258416,"stop":1694826258737,"duration":321}},{"uid":"8f8160a81a628ecc","reportUrl":"https://Nat754.github.io/StroyremAutomation/63//#testresult/8f8160a81a628ecc","status":"passed","time":{"start":1694739998706,"stop":1694739999091,"duration":385}},{"uid":"f1d61cfbb2c7e3c1","reportUrl":"https://Nat754.github.io/StroyremAutomation/62//#testresult/f1d61cfbb2c7e3c1","status":"passed","time":{"start":1694653465851,"stop":1694653466085,"duration":234}},{"uid":"857508d594695907","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/857508d594695907","status":"passed","time":{"start":1694638444592,"stop":1694638444806,"duration":214}},{"uid":"53b7e40b210a94d5","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/53b7e40b210a94d5","status":"passed","time":{"start":1694581390536,"stop":1694581390833,"duration":297}},{"uid":"222148e5841a80a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/222148e5841a80a5","status":"passed","time":{"start":1694567154440,"stop":1694567154739,"duration":299}},{"uid":"6802f4f2eb8e63db","reportUrl":"https://Nat754.github.io/StroyremAutomation/60//#testresult/6802f4f2eb8e63db","status":"passed","time":{"start":1694505386525,"stop":1694505386825,"duration":300}}]},"tags":["smoke_test"]},"source":"d2c61f19290e8ce.json","parameterValues":[]}