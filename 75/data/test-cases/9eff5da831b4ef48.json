{"uid":"9eff5da831b4ef48","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"dc4e879f02824a08e341b1bdc96aa5ba","time":{"start":1695690826961,"stop":1695690829283,"duration":2322},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55be857b76b3 <unknown>\n#1 0x55be8548d1e7 <unknown>\n#2 0x55be854da65d <unknown>\n#3 0x55be854d89fd <unknown>\n#4 0x55be854d67b8 <unknown>\n#5 0x55be854d5827 <unknown>\n#6 0x55be854ca4f9 <unknown>\n#7 0x55be854f60c2 <unknown>\n#8 0x55be854c9f16 <unknown>\n#9 0x55be854f628e <unknown>\n#10 0x55be8550f322 <unknown>\n#11 0x55be854f5e93 <unknown>\n#12 0x55be854c8934 <unknown>\n#13 0x55be854c971e <unknown>\n#14 0x55be8577ccb8 <unknown>\n#15 0x55be85780bf0 <unknown>\n#16 0x55be8578b19c <unknown>\n#17 0x55be85781808 <unknown>\n#18 0x55be8574e27f <unknown>\n#19 0x55be857a5e88 <unknown>\n#20 0x55be857a6059 <unknown>\n#21 0x55be857b6843 <unknown>\n#22 0x7f8c0af81044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f742f101c90>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f742e6917d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742e690c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55be857a6059 \\\\u003Cunknown>\\\\n#21 0x55be857b6843 \\\\u003Cunknown>\\\\n#22 0x7f8c0af81044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x55be857b76b3 <unknown>\nE       #1 0x55be8548d1e7 <unknown>\nE       #2 0x55be854da65d <unknown>\nE       #3 0x55be854d89fd <unknown>\nE       #4 0x55be854d67b8 <unknown>\nE       #5 0x55be854d5827 <unknown>\nE       #6 0x55be854ca4f9 <unknown>\nE       #7 0x55be854f60c2 <unknown>\nE       #8 0x55be854c9f16 <unknown>\nE       #9 0x55be854f628e <unknown>\nE       #10 0x55be8550f322 <unknown>\nE       #11 0x55be854f5e93 <unknown>\nE       #12 0x55be854c8934 <unknown>\nE       #13 0x55be854c971e <unknown>\nE       #14 0x55be8577ccb8 <unknown>\nE       #15 0x55be85780bf0 <unknown>\nE       #16 0x55be8578b19c <unknown>\nE       #17 0x55be85781808 <unknown>\nE       #18 0x55be8574e27f <unknown>\nE       #19 0x55be857a5e88 <unknown>\nE       #20 0x55be857a6059 <unknown>\nE       #21 0x55be857b6843 <unknown>\nE       #22 0x7f8c0af81044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1695689287890,"stop":1695689287973,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1695689287973,"stop":1695689287973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1695690813612,"stop":1695690814456,"duration":844},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1695690814457,"stop":1695690826961,"duration":12504},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1695690814457,"stop":1695690814457,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=117.0.5938.92)\nStacktrace:\n#0 0x55be857b76b3 <unknown>\n#1 0x55be8548d1e7 <unknown>\n#2 0x55be854da65d <unknown>\n#3 0x55be854d89fd <unknown>\n#4 0x55be854d67b8 <unknown>\n#5 0x55be854d5827 <unknown>\n#6 0x55be854ca4f9 <unknown>\n#7 0x55be854f60c2 <unknown>\n#8 0x55be854c9f16 <unknown>\n#9 0x55be854f628e <unknown>\n#10 0x55be8550f322 <unknown>\n#11 0x55be854f5e93 <unknown>\n#12 0x55be854c8934 <unknown>\n#13 0x55be854c971e <unknown>\n#14 0x55be8577ccb8 <unknown>\n#15 0x55be85780bf0 <unknown>\n#16 0x55be8578b19c <unknown>\n#17 0x55be85781808 <unknown>\n#18 0x55be8574e27f <unknown>\n#19 0x55be857a5e88 <unknown>\n#20 0x55be857a6059 <unknown>\n#21 0x55be857b6843 <unknown>\n#22 0x7f8c0af81044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f742f101c90>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f742e6917d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:367: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f742e690c10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55be857a6059 \\\\u003Cunknown>\\\\n#21 0x55be857b6843 \\\\u003Cunknown>\\\\n#22 0x7f8c0af81044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=117.0.5938.92)\nE       Stacktrace:\nE       #0 0x55be857b76b3 <unknown>\nE       #1 0x55be8548d1e7 <unknown>\nE       #2 0x55be854da65d <unknown>\nE       #3 0x55be854d89fd <unknown>\nE       #4 0x55be854d67b8 <unknown>\nE       #5 0x55be854d5827 <unknown>\nE       #6 0x55be854ca4f9 <unknown>\nE       #7 0x55be854f60c2 <unknown>\nE       #8 0x55be854c9f16 <unknown>\nE       #9 0x55be854f628e <unknown>\nE       #10 0x55be8550f322 <unknown>\nE       #11 0x55be854f5e93 <unknown>\nE       #12 0x55be854c8934 <unknown>\nE       #13 0x55be854c971e <unknown>\nE       #14 0x55be8577ccb8 <unknown>\nE       #15 0x55be85780bf0 <unknown>\nE       #16 0x55be8578b19c <unknown>\nE       #17 0x55be85781808 <unknown>\nE       #18 0x55be8574e27f <unknown>\nE       #19 0x55be857a5e88 <unknown>\nE       #20 0x55be857a6059 <unknown>\nE       #21 0x55be857b6843 <unknown>\nE       #22 0x7f8c0af81044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1695690826961,"stop":1695690827008,"duration":47},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1695690827081,"stop":1695690827119,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1695690828173,"stop":1695690828238,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"a37db24f8d8b2d6","name":"Screenshot","source":"a37db24f8d8b2d6.png","type":"image/png","size":79209},{"uid":"4aba96d65fa31c82","name":"HTML source","source":"4aba96d65fa31c82.html","type":"text/html","size":643982}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1695690829490,"stop":1695690829490,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1695690829491,"stop":1695690829559,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"a710f57ebf7d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":21,"skipped":0,"passed":37,"unknown":0,"total":58},"items":[{"uid":"3ff301f8a71b5d4b","reportUrl":"https://Nat754.github.io/StroyremAutomation/74//#testresult/3ff301f8a71b5d4b","status":"passed","time":{"start":1695604412309,"stop":1695604423004,"duration":10695}},{"uid":"88b2f2c1181c4d83","reportUrl":"https://Nat754.github.io/StroyremAutomation/73//#testresult/88b2f2c1181c4d83","status":"passed","time":{"start":1695517743583,"stop":1695517753072,"duration":9489}},{"uid":"b4740b23f32a7d79","reportUrl":"https://Nat754.github.io/StroyremAutomation/72//#testresult/b4740b23f32a7d79","status":"passed","time":{"start":1695431486168,"stop":1695431496870,"duration":10702}},{"uid":"1c37b180804bb33d","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/1c37b180804bb33d","status":"passed","time":{"start":1695406784035,"stop":1695406795977,"duration":11942}},{"uid":"a5bb1754a2a9a73e","reportUrl":"https://Nat754.github.io/StroyremAutomation/71//#testresult/a5bb1754a2a9a73e","status":"passed","time":{"start":1695344835553,"stop":1695344845112,"duration":9559}},{"uid":"3482a4d216d23958","reportUrl":"https://Nat754.github.io/StroyremAutomation/70//#testresult/3482a4d216d23958","status":"passed","time":{"start":1695258419750,"stop":1695258429185,"duration":9435}},{"uid":"6ebac603644a6554","reportUrl":"https://Nat754.github.io/StroyremAutomation/69//#testresult/6ebac603644a6554","status":"passed","time":{"start":1695172567952,"stop":1695172578764,"duration":10812}},{"uid":"aa1049b4cc5a1c97","reportUrl":"https://Nat754.github.io/StroyremAutomation/68//#testresult/aa1049b4cc5a1c97","status":"passed","time":{"start":1695085812866,"stop":1695085823262,"duration":10396}},{"uid":"1cc132cd8a3f0e92","reportUrl":"https://Nat754.github.io/StroyremAutomation/67//#testresult/1cc132cd8a3f0e92","status":"passed","time":{"start":1695064403260,"stop":1695064414537,"duration":11277}},{"uid":"12c2700b59b2621d","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/12c2700b59b2621d","status":"passed","time":{"start":1695061001323,"stop":1695061010768,"duration":9445}},{"uid":"6d6371c2b100c243","reportUrl":"https://Nat754.github.io/StroyremAutomation/66//#testresult/6d6371c2b100c243","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55b923add6c3 <unknown>\n#1 0x55b9237b31e7 <unknown>\n#2 0x55b9237fa566 <unknown>\n#3 0x55b9237fa651 <unknown>\n#4 0x55b923837a74 <unknown>\n#5 0x55b92381c0ed <unknown>\n#6 0x55b923835322 <unknown>\n#7 0x55b92381be93 <unknown>\n#8 0x55b9237ee934 <unknown>\n#9 0x55b9237ef71e <unknown>\n#10 0x55b923aa2cc8 <unknown>\n#11 0x55b923aa6c00 <unknown>\n#12 0x55b923ab11ac <unknown>\n#13 0x55b923aa7818 <unknown>\n#14 0x55b923a7428f <unknown>\n#15 0x55b923acbe98 <unknown>\n#16 0x55b923acc069 <unknown>\n#17 0x55b923adc853 <unknown>\n#18 0x7f42d1154044 <unknown>","time":{"start":1694999023473,"stop":1694999038646,"duration":15173}},{"uid":"a8ef573b50176ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/a8ef573b50176ea","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5618c962a6c3 <unknown>\n#1 0x5618c93001e7 <unknown>\n#2 0x5618c9347566 <unknown>\n#3 0x5618c9347651 <unknown>\n#4 0x5618c9384a74 <unknown>\n#5 0x5618c93690ed <unknown>\n#6 0x5618c9382322 <unknown>\n#7 0x5618c9368e93 <unknown>\n#8 0x5618c933b934 <unknown>\n#9 0x5618c933c71e <unknown>\n#10 0x5618c95efcc8 <unknown>\n#11 0x5618c95f3c00 <unknown>\n#12 0x5618c95fe1ac <unknown>\n#13 0x5618c95f4818 <unknown>\n#14 0x5618c95c128f <unknown>\n#15 0x5618c9618e98 <unknown>\n#16 0x5618c9619069 <unknown>\n#17 0x5618c9629853 <unknown>\n#18 0x7f3aaf353044 <unknown>","time":{"start":1694930027858,"stop":1694930043025,"duration":15167}},{"uid":"d8ed50556ad31b38","reportUrl":"https://Nat754.github.io/StroyremAutomation/65//#testresult/d8ed50556ad31b38","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x555763b366c3 <unknown>\n#1 0x55576380c1e7 <unknown>\n#2 0x555763853566 <unknown>\n#3 0x555763853651 <unknown>\n#4 0x555763890a74 <unknown>\n#5 0x5557638750ed <unknown>\n#6 0x55576388e322 <unknown>\n#7 0x555763874e93 <unknown>\n#8 0x555763847934 <unknown>\n#9 0x55576384871e <unknown>\n#10 0x555763afbcc8 <unknown>\n#11 0x555763affc00 <unknown>\n#12 0x555763b0a1ac <unknown>\n#13 0x555763b00818 <unknown>\n#14 0x555763acd28f <unknown>\n#15 0x555763b24e98 <unknown>\n#16 0x555763b25069 <unknown>\n#17 0x555763b35853 <unknown>\n#18 0x7f288d568044 <unknown>","time":{"start":1694912914823,"stop":1694912929911,"duration":15088}},{"uid":"ed1673e3c89af4b0","reportUrl":"https://Nat754.github.io/StroyremAutomation/64//#testresult/ed1673e3c89af4b0","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55edfb9186c3 <unknown>\n#1 0x55edfb5ee1e7 <unknown>\n#2 0x55edfb635566 <unknown>\n#3 0x55edfb635651 <unknown>\n#4 0x55edfb672a74 <unknown>\n#5 0x55edfb6570ed <unknown>\n#6 0x55edfb670322 <unknown>\n#7 0x55edfb656e93 <unknown>\n#8 0x55edfb629934 <unknown>\n#9 0x55edfb62a71e <unknown>\n#10 0x55edfb8ddcc8 <unknown>\n#11 0x55edfb8e1c00 <unknown>\n#12 0x55edfb8ec1ac <unknown>\n#13 0x55edfb8e2818 <unknown>\n#14 0x55edfb8af28f <unknown>\n#15 0x55edfb906e98 <unknown>\n#16 0x55edfb907069 <unknown>\n#17 0x55edfb917853 <unknown>\n#18 0x7f11bbea1044 <unknown>","time":{"start":1694826222141,"stop":1694826237242,"duration":15101}},{"uid":"6cd1b82730afb986","reportUrl":"https://Nat754.github.io/StroyremAutomation/63//#testresult/6cd1b82730afb986","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55f8afa29693 <unknown>\n#1 0x55f8af6ff1e7 <unknown>\n#2 0x55f8af746566 <unknown>\n#3 0x55f8af746651 <unknown>\n#4 0x55f8af783a74 <unknown>\n#5 0x55f8af7680ed <unknown>\n#6 0x55f8af781322 <unknown>\n#7 0x55f8af767e93 <unknown>\n#8 0x55f8af73a934 <unknown>\n#9 0x55f8af73b71e <unknown>\n#10 0x55f8af9eec98 <unknown>\n#11 0x55f8af9f2bd0 <unknown>\n#12 0x55f8af9fd17c <unknown>\n#13 0x55f8af9f37e8 <unknown>\n#14 0x55f8af9c025f <unknown>\n#15 0x55f8afa17e68 <unknown>\n#16 0x55f8afa18039 <unknown>\n#17 0x55f8afa28823 <unknown>\n#18 0x7f0ae3fa1044 <unknown>","time":{"start":1694739962043,"stop":1694739977357,"duration":15314}},{"uid":"98485868663c207c","reportUrl":"https://Nat754.github.io/StroyremAutomation/62//#testresult/98485868663c207c","status":"passed","time":{"start":1694653438309,"stop":1694653448521,"duration":10212}},{"uid":"20c3137d124a0f56","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/20c3137d124a0f56","status":"passed","time":{"start":1694638416829,"stop":1694638426391,"duration":9562}},{"uid":"7e5333d97ce2768d","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/7e5333d97ce2768d","status":"passed","time":{"start":1694581356536,"stop":1694581367177,"duration":10641}},{"uid":"8e9fc5111c244fcc","reportUrl":"https://Nat754.github.io/StroyremAutomation/61//#testresult/8e9fc5111c244fcc","status":"passed","time":{"start":1694567128212,"stop":1694567137865,"duration":9653}},{"uid":"76cba22ec9f807c2","reportUrl":"https://Nat754.github.io/StroyremAutomation/60//#testresult/76cba22ec9f807c2","status":"passed","time":{"start":1694505347579,"stop":1694505358587,"duration":11008}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"9eff5da831b4ef48.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}