{"uid":"ce797d26104d7bb8","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1718845628762,"stop":1718845631078,"duration":2316},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x55c61b9bd70a <unknown>\n#1 0x55c61b6a00dc <unknown>\n#2 0x55c61b6f36c6 <unknown>\n#3 0x55c61b6f1516 <unknown>\n#4 0x55c61b6eeef7 <unknown>\n#5 0x55c61b6edd2c <unknown>\n#6 0x55c61b6e140f <unknown>\n#7 0x55c61b70f872 <unknown>\n#8 0x55c61b6e0d89 <unknown>\n#9 0x55c61b70fa3e <unknown>\n#10 0x55c61b72e5c3 <unknown>\n#11 0x55c61b70f613 <unknown>\n#12 0x55c61b6df4f7 <unknown>\n#13 0x55c61b6dfe4e <unknown>\n#14 0x55c61b9838db <unknown>\n#15 0x55c61b987981 <unknown>\n#16 0x55c61b96f3ce <unknown>\n#17 0x55c61b9884e2 <unknown>\n#18 0x55c61b953d2f <unknown>\n#19 0x55c61b9ad108 <unknown>\n#20 0x55c61b9ad2e0 <unknown>\n#21 0x55c61b9bc83c <unknown>\n#22 0x7fd1be788134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd14ff18a10>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd14ef65850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd14ffbc810>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c61b9ad2e0 \\\\u003Cunknown>\\\\n#21 0x55c61b9bc83c \\\\u003Cunknown>\\\\n#22 0x7fd1be788134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.62)\nE       Stacktrace:\nE       #0 0x55c61b9bd70a <unknown>\nE       #1 0x55c61b6a00dc <unknown>\nE       #2 0x55c61b6f36c6 <unknown>\nE       #3 0x55c61b6f1516 <unknown>\nE       #4 0x55c61b6eeef7 <unknown>\nE       #5 0x55c61b6edd2c <unknown>\nE       #6 0x55c61b6e140f <unknown>\nE       #7 0x55c61b70f872 <unknown>\nE       #8 0x55c61b6e0d89 <unknown>\nE       #9 0x55c61b70fa3e <unknown>\nE       #10 0x55c61b72e5c3 <unknown>\nE       #11 0x55c61b70f613 <unknown>\nE       #12 0x55c61b6df4f7 <unknown>\nE       #13 0x55c61b6dfe4e <unknown>\nE       #14 0x55c61b9838db <unknown>\nE       #15 0x55c61b987981 <unknown>\nE       #16 0x55c61b96f3ce <unknown>\nE       #17 0x55c61b9884e2 <unknown>\nE       #18 0x55c61b953d2f <unknown>\nE       #19 0x55c61b9ad108 <unknown>\nE       #20 0x55c61b9ad2e0 <unknown>\nE       #21 0x55c61b9bc83c <unknown>\nE       #22 0x7fd1be788134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718844808126,"stop":1718844808205,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1718844808205,"stop":1718844808205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1718845618755,"stop":1718845619447,"duration":692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1718845619447,"stop":1718845619447,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1718845619447,"stop":1718845628762,"duration":9315},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x55c61b9bd70a <unknown>\n#1 0x55c61b6a00dc <unknown>\n#2 0x55c61b6f36c6 <unknown>\n#3 0x55c61b6f1516 <unknown>\n#4 0x55c61b6eeef7 <unknown>\n#5 0x55c61b6edd2c <unknown>\n#6 0x55c61b6e140f <unknown>\n#7 0x55c61b70f872 <unknown>\n#8 0x55c61b6e0d89 <unknown>\n#9 0x55c61b70fa3e <unknown>\n#10 0x55c61b72e5c3 <unknown>\n#11 0x55c61b70f613 <unknown>\n#12 0x55c61b6df4f7 <unknown>\n#13 0x55c61b6dfe4e <unknown>\n#14 0x55c61b9838db <unknown>\n#15 0x55c61b987981 <unknown>\n#16 0x55c61b96f3ce <unknown>\n#17 0x55c61b9884e2 <unknown>\n#18 0x55c61b953d2f <unknown>\n#19 0x55c61b9ad108 <unknown>\n#20 0x55c61b9ad2e0 <unknown>\n#21 0x55c61b9bc83c <unknown>\n#22 0x7fd1be788134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd14ff18a10>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd14ef65850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd14ffbc810>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55c61b9ad2e0 \\\\u003Cunknown>\\\\n#21 0x55c61b9bc83c \\\\u003Cunknown>\\\\n#22 0x7fd1be788134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.62)\nE       Stacktrace:\nE       #0 0x55c61b9bd70a <unknown>\nE       #1 0x55c61b6a00dc <unknown>\nE       #2 0x55c61b6f36c6 <unknown>\nE       #3 0x55c61b6f1516 <unknown>\nE       #4 0x55c61b6eeef7 <unknown>\nE       #5 0x55c61b6edd2c <unknown>\nE       #6 0x55c61b6e140f <unknown>\nE       #7 0x55c61b70f872 <unknown>\nE       #8 0x55c61b6e0d89 <unknown>\nE       #9 0x55c61b70fa3e <unknown>\nE       #10 0x55c61b72e5c3 <unknown>\nE       #11 0x55c61b70f613 <unknown>\nE       #12 0x55c61b6df4f7 <unknown>\nE       #13 0x55c61b6dfe4e <unknown>\nE       #14 0x55c61b9838db <unknown>\nE       #15 0x55c61b987981 <unknown>\nE       #16 0x55c61b96f3ce <unknown>\nE       #17 0x55c61b9884e2 <unknown>\nE       #18 0x55c61b953d2f <unknown>\nE       #19 0x55c61b9ad108 <unknown>\nE       #20 0x55c61b9ad2e0 <unknown>\nE       #21 0x55c61b9bc83c <unknown>\nE       #22 0x7fd1be788134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1718845628762,"stop":1718845628790,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1718845628868,"stop":1718845628901,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1718845629939,"stop":1718845629980,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"2b9ebf545b4a0583","name":"Screenshot","source":"2b9ebf545b4a0583.png","type":"image/png","size":117393},{"uid":"6e827858ce50adff","name":"HTML source","source":"6e827858ce50adff.html","type":"text/html","size":928266}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1718845631265,"stop":1718845631265,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1718845631265,"stop":1718845631339,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"6f6806cf1d05"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":5,"skipped":0,"passed":17,"unknown":0,"total":22},"items":[{"uid":"9a99a3dea71033c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/9a99a3dea71033c4","status":"passed","time":{"start":1718759558017,"stop":1718759568795,"duration":10778}},{"uid":"2bfbfa46d59b0869","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/2bfbfa46d59b0869","status":"passed","time":{"start":1718672984872,"stop":1718672994597,"duration":9725}},{"uid":"cb74320f3d91a6e3","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/cb74320f3d91a6e3","status":"passed","time":{"start":1718586823060,"stop":1718586833023,"duration":9963}},{"uid":"1c4302e5a4d41ab4","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/1c4302e5a4d41ab4","status":"passed","time":{"start":1718500524278,"stop":1718500533917,"duration":9639}},{"uid":"e5f9d3bb5ec3429d","reportUrl":"https://Nat754.github.io/StroyremAutomation/339//#testresult/e5f9d3bb5ec3429d","status":"passed","time":{"start":1718413900538,"stop":1718413911207,"duration":10669}},{"uid":"428586479ee6163c","reportUrl":"https://Nat754.github.io/StroyremAutomation/338//#testresult/428586479ee6163c","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.61)\nStacktrace:\n#0 0x562cb95a76aa <unknown>\n#1 0x562cb928a0dc <unknown>\n#2 0x562cb92dd6c6 <unknown>\n#3 0x562cb92db516 <unknown>\n#4 0x562cb92d8ef7 <unknown>\n#5 0x562cb92d7d2c <unknown>\n#6 0x562cb92cb40f <unknown>\n#7 0x562cb92f9872 <unknown>\n#8 0x562cb92cad89 <unknown>\n#9 0x562cb92f9a3e <unknown>\n#10 0x562cb93185c3 <unknown>\n#11 0x562cb92f9613 <unknown>\n#12 0x562cb92c94f7 <unknown>\n#13 0x562cb92c9e4e <unknown>\n#14 0x562cb956d87b <unknown>\n#15 0x562cb9571921 <unknown>\n#16 0x562cb955936e <unknown>\n#17 0x562cb9572482 <unknown>\n#18 0x562cb953dccf <unknown>\n#19 0x562cb95970a8 <unknown>\n#20 0x562cb9597280 <unknown>\n#21 0x562cb95a67dc <unknown>\n#22 0x7fcb69997134 <unknown>","time":{"start":1718327417857,"stop":1718327420164,"duration":2307}},{"uid":"6f9a5ba9e6accf65","reportUrl":"https://Nat754.github.io/StroyremAutomation/337//#testresult/6f9a5ba9e6accf65","status":"passed","time":{"start":1718240996292,"stop":1718241010016,"duration":13724}},{"uid":"73e69d34f4d0af0e","reportUrl":"https://Nat754.github.io/StroyremAutomation/336//#testresult/73e69d34f4d0af0e","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.55)\nStacktrace:\n#0 0x5652ee50c6aa <unknown>\n#1 0x5652ee1ef0dc <unknown>\n#2 0x5652ee2426c6 <unknown>\n#3 0x5652ee240516 <unknown>\n#4 0x5652ee23def7 <unknown>\n#5 0x5652ee23cd2c <unknown>\n#6 0x5652ee23040f <unknown>\n#7 0x5652ee25e872 <unknown>\n#8 0x5652ee22fd89 <unknown>\n#9 0x5652ee25ea3e <unknown>\n#10 0x5652ee27d5c3 <unknown>\n#11 0x5652ee25e613 <unknown>\n#12 0x5652ee22e4f7 <unknown>\n#13 0x5652ee22ee4e <unknown>\n#14 0x5652ee4d287b <unknown>\n#15 0x5652ee4d6921 <unknown>\n#16 0x5652ee4be36e <unknown>\n#17 0x5652ee4d7482 <unknown>\n#18 0x5652ee4a2ccf <unknown>\n#19 0x5652ee4fc0a8 <unknown>\n#20 0x5652ee4fc280 <unknown>\n#21 0x5652ee50b7dc <unknown>\n#22 0x7f81ce83a134 <unknown>","time":{"start":1718154720927,"stop":1718154723224,"duration":2297}},{"uid":"ef52d5b29348b659","reportUrl":"https://Nat754.github.io/StroyremAutomation/335//#testresult/ef52d5b29348b659","status":"passed","time":{"start":1718068118894,"stop":1718068128764,"duration":9870}},{"uid":"d7ae9669a24392b0","reportUrl":"https://Nat754.github.io/StroyremAutomation/334//#testresult/d7ae9669a24392b0","status":"passed","time":{"start":1717981973457,"stop":1717981984751,"duration":11294}},{"uid":"9e17520ab9f0e38e","reportUrl":"https://Nat754.github.io/StroyremAutomation/333//#testresult/9e17520ab9f0e38e","status":"passed","time":{"start":1717895575420,"stop":1717895587830,"duration":12410}},{"uid":"22da645b5e512bc","reportUrl":"https://Nat754.github.io/StroyremAutomation/332//#testresult/22da645b5e512bc","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x55dfe560ae3a <unknown>\n#1 0x55dfe52f445c <unknown>\n#2 0x55dfe5347336 <unknown>\n#3 0x55dfe5345176 <unknown>\n#4 0x55dfe5342b57 <unknown>\n#5 0x55dfe534197c <unknown>\n#6 0x55dfe53350ff <unknown>\n#7 0x55dfe53634b2 <unknown>\n#8 0x55dfe5334a79 <unknown>\n#9 0x55dfe536367e <unknown>\n#10 0x55dfe53822cc <unknown>\n#11 0x55dfe5363253 <unknown>\n#12 0x55dfe53331c7 <unknown>\n#13 0x55dfe5333b3e <unknown>\n#14 0x55dfe55d127b <unknown>\n#15 0x55dfe55d5327 <unknown>\n#16 0x55dfe55bddae <unknown>\n#17 0x55dfe55d5df2 <unknown>\n#18 0x55dfe55a274f <unknown>\n#19 0x55dfe55fa128 <unknown>\n#20 0x55dfe55fa2fb <unknown>\n#21 0x55dfe5609f6c <unknown>\n#22 0x7f0238e45134 <unknown>","time":{"start":1717809085572,"stop":1717809087891,"duration":2319}},{"uid":"5d388adc533f67e6","reportUrl":"https://Nat754.github.io/StroyremAutomation/331//#testresult/5d388adc533f67e6","status":"passed","time":{"start":1717722588235,"stop":1717722597745,"duration":9510}},{"uid":"5f30da677400f0cd","reportUrl":"https://Nat754.github.io/StroyremAutomation/330//#testresult/5f30da677400f0cd","status":"passed","time":{"start":1717636122610,"stop":1717636132653,"duration":10043}},{"uid":"54dc6a509bd9f538","reportUrl":"https://Nat754.github.io/StroyremAutomation/329//#testresult/54dc6a509bd9f538","status":"passed","time":{"start":1717549905726,"stop":1717549916670,"duration":10944}},{"uid":"273b0f48deeb27ca","reportUrl":"https://Nat754.github.io/StroyremAutomation/328//#testresult/273b0f48deeb27ca","status":"passed","time":{"start":1717463291064,"stop":1717463302203,"duration":11139}},{"uid":"e07d0ffe78565fe7","reportUrl":"https://Nat754.github.io/StroyremAutomation/327//#testresult/e07d0ffe78565fe7","status":"passed","time":{"start":1717377106647,"stop":1717377118306,"duration":11659}},{"uid":"e3b749703bcd7cae","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/e3b749703bcd7cae","status":"passed","time":{"start":1717290837990,"stop":1717290848351,"duration":10361}},{"uid":"22108a28ca4dd349","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/22108a28ca4dd349","status":"passed","time":{"start":1717204190687,"stop":1717204200475,"duration":9788}},{"uid":"19c288fb405b1b71","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/19c288fb405b1b71","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x5605b4110e3a <unknown>\n#1 0x5605b3dfa45c <unknown>\n#2 0x5605b3e4d336 <unknown>\n#3 0x5605b3e4b176 <unknown>\n#4 0x5605b3e48b57 <unknown>\n#5 0x5605b3e4797c <unknown>\n#6 0x5605b3e3b0ff <unknown>\n#7 0x5605b3e694b2 <unknown>\n#8 0x5605b3e3aa79 <unknown>\n#9 0x5605b3e6967e <unknown>\n#10 0x5605b3e882cc <unknown>\n#11 0x5605b3e69253 <unknown>\n#12 0x5605b3e391c7 <unknown>\n#13 0x5605b3e39b3e <unknown>\n#14 0x5605b40d727b <unknown>\n#15 0x5605b40db327 <unknown>\n#16 0x5605b40c3dae <unknown>\n#17 0x5605b40dbdf2 <unknown>\n#18 0x5605b40a874f <unknown>\n#19 0x5605b4100128 <unknown>\n#20 0x5605b41002fb <unknown>\n#21 0x5605b410ff6c <unknown>\n#22 0x7f6115504134 <unknown>","time":{"start":1717117874920,"stop":1717117877223,"duration":2303}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"ce797d26104d7bb8.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}