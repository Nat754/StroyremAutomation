{"uid":"836eade62fb3a35b","name":"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","historyId":"f1cd0408694619a248c788cf181ce9dc","time":{"start":1718845883048,"stop":1718845885367,"duration":2319},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x5633f4c4a70a <unknown>\n#1 0x5633f492d0dc <unknown>\n#2 0x5633f49806c6 <unknown>\n#3 0x5633f497e516 <unknown>\n#4 0x5633f497bef7 <unknown>\n#5 0x5633f497ad2c <unknown>\n#6 0x5633f496e40f <unknown>\n#7 0x5633f499c872 <unknown>\n#8 0x5633f496dd89 <unknown>\n#9 0x5633f499ca3e <unknown>\n#10 0x5633f49bb5c3 <unknown>\n#11 0x5633f499c613 <unknown>\n#12 0x5633f496c4f7 <unknown>\n#13 0x5633f496ce4e <unknown>\n#14 0x5633f4c108db <unknown>\n#15 0x5633f4c14981 <unknown>\n#16 0x5633f4bfc3ce <unknown>\n#17 0x5633f4c154e2 <unknown>\n#18 0x5633f4be0d2f <unknown>\n#19 0x5633f4c3a108 <unknown>\n#20 0x5633f4c3a2e0 <unknown>\n#21 0x5633f4c4983c <unknown>\n#22 0x7f91ec003134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd14ffd9750>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd1509b3590>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd1509f80d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5633f4c3a2e0 \\\\u003Cunknown>\\\\n#21 0x5633f4c4983c \\\\u003Cunknown>\\\\n#22 0x7f91ec003134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.62)\nE       Stacktrace:\nE       #0 0x5633f4c4a70a <unknown>\nE       #1 0x5633f492d0dc <unknown>\nE       #2 0x5633f49806c6 <unknown>\nE       #3 0x5633f497e516 <unknown>\nE       #4 0x5633f497bef7 <unknown>\nE       #5 0x5633f497ad2c <unknown>\nE       #6 0x5633f496e40f <unknown>\nE       #7 0x5633f499c872 <unknown>\nE       #8 0x5633f496dd89 <unknown>\nE       #9 0x5633f499ca3e <unknown>\nE       #10 0x5633f49bb5c3 <unknown>\nE       #11 0x5633f499c613 <unknown>\nE       #12 0x5633f496c4f7 <unknown>\nE       #13 0x5633f496ce4e <unknown>\nE       #14 0x5633f4c108db <unknown>\nE       #15 0x5633f4c14981 <unknown>\nE       #16 0x5633f4bfc3ce <unknown>\nE       #17 0x5633f4c154e2 <unknown>\nE       #18 0x5633f4be0d2f <unknown>\nE       #19 0x5633f4c3a108 <unknown>\nE       #20 0x5633f4c3a2e0 <unknown>\nE       #21 0x5633f4c4983c <unknown>\nE       #22 0x7f91ec003134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718844808126,"stop":1718844808205,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1718844808205,"stop":1718844808205,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1718845871266,"stop":1718845871956,"duration":690},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1718845871956,"stop":1718845871956,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1718845871956,"stop":1718845883048,"duration":11092},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x5633f4c4a70a <unknown>\n#1 0x5633f492d0dc <unknown>\n#2 0x5633f49806c6 <unknown>\n#3 0x5633f497e516 <unknown>\n#4 0x5633f497bef7 <unknown>\n#5 0x5633f497ad2c <unknown>\n#6 0x5633f496e40f <unknown>\n#7 0x5633f499c872 <unknown>\n#8 0x5633f496dd89 <unknown>\n#9 0x5633f499ca3e <unknown>\n#10 0x5633f49bb5c3 <unknown>\n#11 0x5633f499c613 <unknown>\n#12 0x5633f496c4f7 <unknown>\n#13 0x5633f496ce4e <unknown>\n#14 0x5633f4c108db <unknown>\n#15 0x5633f4c14981 <unknown>\n#16 0x5633f4bfc3ce <unknown>\n#17 0x5633f4c154e2 <unknown>\n#18 0x5633f4be0d2f <unknown>\n#19 0x5633f4c3a108 <unknown>\n#20 0x5633f4c3a2e0 <unknown>\n#21 0x5633f4c4983c <unknown>\n#22 0x7f91ec003134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fd14ffd9750>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fd1509b3590>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fd1509f80d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5633f4c3a2e0 \\\\u003Cunknown>\\\\n#21 0x5633f4c4983c \\\\u003Cunknown>\\\\n#22 0x7f91ec003134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.62)\nE       Stacktrace:\nE       #0 0x5633f4c4a70a <unknown>\nE       #1 0x5633f492d0dc <unknown>\nE       #2 0x5633f49806c6 <unknown>\nE       #3 0x5633f497e516 <unknown>\nE       #4 0x5633f497bef7 <unknown>\nE       #5 0x5633f497ad2c <unknown>\nE       #6 0x5633f496e40f <unknown>\nE       #7 0x5633f499c872 <unknown>\nE       #8 0x5633f496dd89 <unknown>\nE       #9 0x5633f499ca3e <unknown>\nE       #10 0x5633f49bb5c3 <unknown>\nE       #11 0x5633f499c613 <unknown>\nE       #12 0x5633f496c4f7 <unknown>\nE       #13 0x5633f496ce4e <unknown>\nE       #14 0x5633f4c108db <unknown>\nE       #15 0x5633f4c14981 <unknown>\nE       #16 0x5633f4bfc3ce <unknown>\nE       #17 0x5633f4c154e2 <unknown>\nE       #18 0x5633f4be0d2f <unknown>\nE       #19 0x5633f4c3a108 <unknown>\nE       #20 0x5633f4c3a2e0 <unknown>\nE       #21 0x5633f4c4983c <unknown>\nE       #22 0x7f91ec003134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1718845883048,"stop":1718845883083,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1718845883147,"stop":1718845883189,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1718845884237,"stop":1718845884275,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"e666554743881b8b","name":"Screenshot","source":"e666554743881b8b.png","type":"image/png","size":132969},{"uid":"6ccf0278b2f76630","name":"HTML source","source":"6ccf0278b2f76630.html","type":"text/html","size":916849}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1718845885554,"stop":1718845885554,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1718845885554,"stop":1718845885629,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"6f6806cf1d05"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":20,"unknown":0,"total":22},"items":[{"uid":"dd42c1b2750512be","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/dd42c1b2750512be","status":"passed","time":{"start":1718759862194,"stop":1718759871462,"duration":9268}},{"uid":"e57b99f220118dfd","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/e57b99f220118dfd","status":"passed","time":{"start":1718673227527,"stop":1718673236130,"duration":8603}},{"uid":"a23eee3bcde2e2da","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/a23eee3bcde2e2da","status":"passed","time":{"start":1718587133102,"stop":1718587143404,"duration":10302}},{"uid":"e127aa3f3323a5e8","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/e127aa3f3323a5e8","status":"passed","time":{"start":1718500834527,"stop":1718500843581,"duration":9054}},{"uid":"c355644020c6947d","reportUrl":"https://Nat754.github.io/StroyremAutomation/339//#testresult/c355644020c6947d","status":"passed","time":{"start":1718414207204,"stop":1718414216432,"duration":9228}},{"uid":"807ccfc9bdb2e45e","reportUrl":"https://Nat754.github.io/StroyremAutomation/338//#testresult/807ccfc9bdb2e45e","status":"passed","time":{"start":1718327698132,"stop":1718327708913,"duration":10781}},{"uid":"9b71eedcd5586e0d","reportUrl":"https://Nat754.github.io/StroyremAutomation/337//#testresult/9b71eedcd5586e0d","status":"passed","time":{"start":1718241298483,"stop":1718241308558,"duration":10075}},{"uid":"e6156b99c3f7ae93","reportUrl":"https://Nat754.github.io/StroyremAutomation/336//#testresult/e6156b99c3f7ae93","status":"passed","time":{"start":1718155028981,"stop":1718155039500,"duration":10519}},{"uid":"5dcc4e0948a4e435","reportUrl":"https://Nat754.github.io/StroyremAutomation/335//#testresult/5dcc4e0948a4e435","status":"passed","time":{"start":1718068357558,"stop":1718068366613,"duration":9055}},{"uid":"b8148f2a7b2013a5","reportUrl":"https://Nat754.github.io/StroyremAutomation/334//#testresult/b8148f2a7b2013a5","status":"passed","time":{"start":1717982274006,"stop":1717982283004,"duration":8998}},{"uid":"d9799088e6d9017a","reportUrl":"https://Nat754.github.io/StroyremAutomation/333//#testresult/d9799088e6d9017a","status":"passed","time":{"start":1717895814975,"stop":1717895823879,"duration":8904}},{"uid":"6797be0318727cdc","reportUrl":"https://Nat754.github.io/StroyremAutomation/332//#testresult/6797be0318727cdc","status":"passed","time":{"start":1717809368796,"stop":1717809379314,"duration":10518}},{"uid":"676568e6fd0b72d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/331//#testresult/676568e6fd0b72d2","status":"passed","time":{"start":1717722869211,"stop":1717722877259,"duration":8048}},{"uid":"3c76fc6771f7d985","reportUrl":"https://Nat754.github.io/StroyremAutomation/330//#testresult/3c76fc6771f7d985","status":"passed","time":{"start":1717636375519,"stop":1717636386686,"duration":11167}},{"uid":"4d7205f0c26040b7","reportUrl":"https://Nat754.github.io/StroyremAutomation/329//#testresult/4d7205f0c26040b7","status":"passed","time":{"start":1717550190896,"stop":1717550200069,"duration":9173}},{"uid":"fdf52e65decb5245","reportUrl":"https://Nat754.github.io/StroyremAutomation/328//#testresult/fdf52e65decb5245","status":"passed","time":{"start":1717463549210,"stop":1717463559015,"duration":9805}},{"uid":"1b2b450cbbd25f2c","reportUrl":"https://Nat754.github.io/StroyremAutomation/327//#testresult/1b2b450cbbd25f2c","status":"passed","time":{"start":1717377418599,"stop":1717377428547,"duration":9948}},{"uid":"12b5105b306fa3f6","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/12b5105b306fa3f6","status":"passed","time":{"start":1717291146728,"stop":1717291157484,"duration":10756}},{"uid":"6224b13d09414af4","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/6224b13d09414af4","status":"passed","time":{"start":1717204455776,"stop":1717204464691,"duration":8915}},{"uid":"b79c7d0a13623513","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/b79c7d0a13623513","status":"passed","time":{"start":1717118182101,"stop":1717118191822,"duration":9721}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"836eade62fb3a35b.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}