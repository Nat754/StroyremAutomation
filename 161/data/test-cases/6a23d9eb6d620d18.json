{"uid":"6a23d9eb6d620d18","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke","historyId":"60ac608ef0b195b1f9aff92ab9d21fa8","time":{"start":1703033761773,"stop":1703033764169,"duration":2396},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5627a6c04f83 <unknown>\n#1 0x5627a68bdcf7 <unknown>\n#2 0x5627a6915d92 <unknown>\n#3 0x5627a69137f4 <unknown>\n#4 0x5627a6910894 <unknown>\n#5 0x5627a690f4b9 <unknown>\n#6 0x5627a6901313 <unknown>\n#7 0x5627a69370b2 <unknown>\n#8 0x5627a6900b49 <unknown>\n#9 0x5627a69374ce <unknown>\n#10 0x5627a6956006 <unknown>\n#11 0x5627a6936e53 <unknown>\n#12 0x5627a68fedd4 <unknown>\n#13 0x5627a69001de <unknown>\n#14 0x5627a6bc9531 <unknown>\n#15 0x5627a6bcd455 <unknown>\n#16 0x5627a6bb5f55 <unknown>\n#17 0x5627a6bce0ef <unknown>\n#18 0x5627a6b9999f <unknown>\n#19 0x5627a6bf2008 <unknown>\n#20 0x5627a6bf21d7 <unknown>\n#21 0x5627a6c04124 <unknown>\n#22 0x7f6086e65044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f59c2875450>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f59c32bd890>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f59c2895110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5627a6bf21d7 \\\\u003Cunknown>\\\\n#21 0x5627a6c04124 \\\\u003Cunknown>\\\\n#22 0x7f6086e65044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5627a6c04f83 <unknown>\nE       #1 0x5627a68bdcf7 <unknown>\nE       #2 0x5627a6915d92 <unknown>\nE       #3 0x5627a69137f4 <unknown>\nE       #4 0x5627a6910894 <unknown>\nE       #5 0x5627a690f4b9 <unknown>\nE       #6 0x5627a6901313 <unknown>\nE       #7 0x5627a69370b2 <unknown>\nE       #8 0x5627a6900b49 <unknown>\nE       #9 0x5627a69374ce <unknown>\nE       #10 0x5627a6956006 <unknown>\nE       #11 0x5627a6936e53 <unknown>\nE       #12 0x5627a68fedd4 <unknown>\nE       #13 0x5627a69001de <unknown>\nE       #14 0x5627a6bc9531 <unknown>\nE       #15 0x5627a6bcd455 <unknown>\nE       #16 0x5627a6bb5f55 <unknown>\nE       #17 0x5627a6bce0ef <unknown>\nE       #18 0x5627a6b9999f <unknown>\nE       #19 0x5627a6bf2008 <unknown>\nE       #20 0x5627a6bf21d7 <unknown>\nE       #21 0x5627a6c04124 <unknown>\nE       #22 0x7f6086e65044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1703032920510,"stop":1703032920590,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1703032920590,"stop":1703032920590,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1703033751420,"stop":1703033752218,"duration":798},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1703033752218,"stop":1703033761773,"duration":9555},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1703033752218,"stop":1703033752218,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x5627a6c04f83 <unknown>\n#1 0x5627a68bdcf7 <unknown>\n#2 0x5627a6915d92 <unknown>\n#3 0x5627a69137f4 <unknown>\n#4 0x5627a6910894 <unknown>\n#5 0x5627a690f4b9 <unknown>\n#6 0x5627a6901313 <unknown>\n#7 0x5627a69370b2 <unknown>\n#8 0x5627a6900b49 <unknown>\n#9 0x5627a69374ce <unknown>\n#10 0x5627a6956006 <unknown>\n#11 0x5627a6936e53 <unknown>\n#12 0x5627a68fedd4 <unknown>\n#13 0x5627a69001de <unknown>\n#14 0x5627a6bc9531 <unknown>\n#15 0x5627a6bcd455 <unknown>\n#16 0x5627a6bb5f55 <unknown>\n#17 0x5627a6bce0ef <unknown>\n#18 0x5627a6b9999f <unknown>\n#19 0x5627a6bf2008 <unknown>\n#20 0x5627a6bf21d7 <unknown>\n#21 0x5627a6c04124 <unknown>\n#22 0x7f6086e65044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f59c2875450>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f59c32bd890>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f59c2895110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x5627a6bf21d7 \\\\u003Cunknown>\\\\n#21 0x5627a6c04124 \\\\u003Cunknown>\\\\n#22 0x7f6086e65044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x5627a6c04f83 <unknown>\nE       #1 0x5627a68bdcf7 <unknown>\nE       #2 0x5627a6915d92 <unknown>\nE       #3 0x5627a69137f4 <unknown>\nE       #4 0x5627a6910894 <unknown>\nE       #5 0x5627a690f4b9 <unknown>\nE       #6 0x5627a6901313 <unknown>\nE       #7 0x5627a69370b2 <unknown>\nE       #8 0x5627a6900b49 <unknown>\nE       #9 0x5627a69374ce <unknown>\nE       #10 0x5627a6956006 <unknown>\nE       #11 0x5627a6936e53 <unknown>\nE       #12 0x5627a68fedd4 <unknown>\nE       #13 0x5627a69001de <unknown>\nE       #14 0x5627a6bc9531 <unknown>\nE       #15 0x5627a6bcd455 <unknown>\nE       #16 0x5627a6bb5f55 <unknown>\nE       #17 0x5627a6bce0ef <unknown>\nE       #18 0x5627a6b9999f <unknown>\nE       #19 0x5627a6bf2008 <unknown>\nE       #20 0x5627a6bf21d7 <unknown>\nE       #21 0x5627a6c04124 <unknown>\nE       #22 0x7f6086e65044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1703033761773,"stop":1703033761818,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1703033761901,"stop":1703033761936,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1703033762984,"stop":1703033763039,"duration":55},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"eee889d2a7dacaad","name":"Screenshot","source":"eee889d2a7dacaad.png","type":"image/png","size":228592},{"uid":"5ee20b846e16d955","name":"HTML source","source":"5ee20b846e16d955.html","type":"text/html","size":934728}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1703033764422,"stop":1703033764505,"duration":83},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1703033764422,"stop":1703033764422,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"160a601fe805"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/elektroinstrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":3,"skipped":0,"passed":133,"unknown":0,"total":136},"items":[{"uid":"b457754a9535fbe3","reportUrl":"https://Nat754.github.io/StroyremAutomation/160//#testresult/b457754a9535fbe3","status":"passed","time":{"start":1702947888077,"stop":1702947896139,"duration":8062}},{"uid":"fb2d02d24e169cd","reportUrl":"https://Nat754.github.io/StroyremAutomation/159//#testresult/fb2d02d24e169cd","status":"passed","time":{"start":1702861549871,"stop":1702861557734,"duration":7863}},{"uid":"20e5584d2109c913","reportUrl":"https://Nat754.github.io/StroyremAutomation/158//#testresult/20e5584d2109c913","status":"passed","time":{"start":1702775386997,"stop":1702775395820,"duration":8823}},{"uid":"5a3a066d112722e9","reportUrl":"https://Nat754.github.io/StroyremAutomation/157//#testresult/5a3a066d112722e9","status":"passed","time":{"start":1702688681709,"stop":1702688690796,"duration":9087}},{"uid":"67e2b88d15305a0a","reportUrl":"https://Nat754.github.io/StroyremAutomation/156//#testresult/67e2b88d15305a0a","status":"passed","time":{"start":1702602416444,"stop":1702602425908,"duration":9464}},{"uid":"5e4973b8c9760136","reportUrl":"https://Nat754.github.io/StroyremAutomation/155//#testresult/5e4973b8c9760136","status":"passed","time":{"start":1702515778617,"stop":1702515786523,"duration":7906}},{"uid":"6e97e4abec9f5fb8","reportUrl":"https://Nat754.github.io/StroyremAutomation/154//#testresult/6e97e4abec9f5fb8","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.71)\nStacktrace:\n#0 0x557c1d4c7d33 <unknown>\n#1 0x557c1d184f87 <unknown>\n#2 0x557c1d1dd002 <unknown>\n#3 0x557c1d1daa64 <unknown>\n#4 0x557c1d1d7b04 <unknown>\n#5 0x557c1d1d6729 <unknown>\n#6 0x557c1d1c8583 <unknown>\n#7 0x557c1d1fe342 <unknown>\n#8 0x557c1d1c7db9 <unknown>\n#9 0x557c1d1fe75e <unknown>\n#10 0x557c1d21d297 <unknown>\n#11 0x557c1d1fe0e3 <unknown>\n#12 0x557c1d1c6044 <unknown>\n#13 0x557c1d1c744e <unknown>\n#14 0x557c1d48c861 <unknown>\n#15 0x557c1d490785 <unknown>\n#16 0x557c1d47a285 <unknown>\n#17 0x557c1d49141f <unknown>\n#18 0x557c1d45e20f <unknown>\n#19 0x557c1d4b5028 <unknown>\n#20 0x557c1d4b51f7 <unknown>\n#21 0x557c1d4c6ed4 <unknown>\n#22 0x7fd038236044 <unknown>","time":{"start":1702453572586,"stop":1702453574889,"duration":2303}},{"uid":"c76b0667414d8f8c","reportUrl":"https://Nat754.github.io/StroyremAutomation/133//#testresult/c76b0667414d8f8c","status":"passed","time":{"start":1700615172832,"stop":1700615180685,"duration":7853}},{"uid":"4cbd05094e043be","reportUrl":"https://Nat754.github.io/StroyremAutomation/132//#testresult/4cbd05094e043be","status":"passed","time":{"start":1700529008259,"stop":1700529017781,"duration":9522}},{"uid":"28550861beb0028e","reportUrl":"https://Nat754.github.io/StroyremAutomation/131//#testresult/28550861beb0028e","status":"passed","time":{"start":1700442392531,"stop":1700442400632,"duration":8101}},{"uid":"ed361d8ea29ec251","reportUrl":"https://Nat754.github.io/StroyremAutomation/130//#testresult/ed361d8ea29ec251","status":"passed","time":{"start":1700356083636,"stop":1700356091779,"duration":8143}},{"uid":"682bf4fa9ec14fd6","reportUrl":"https://Nat754.github.io/StroyremAutomation/129//#testresult/682bf4fa9ec14fd6","status":"passed","time":{"start":1700269402426,"stop":1700269410292,"duration":7866}},{"uid":"53f7d14815c02a71","reportUrl":"https://Nat754.github.io/StroyremAutomation/128//#testresult/53f7d14815c02a71","status":"passed","time":{"start":1700183306109,"stop":1700183314792,"duration":8683}},{"uid":"9ddefb4345385d65","reportUrl":"https://Nat754.github.io/StroyremAutomation/127//#testresult/9ddefb4345385d65","status":"passed","time":{"start":1700096785768,"stop":1700096793634,"duration":7866}},{"uid":"9e05a05109cf62f2","reportUrl":"https://Nat754.github.io/StroyremAutomation/126//#testresult/9e05a05109cf62f2","status":"passed","time":{"start":1700010479392,"stop":1700010488169,"duration":8777}},{"uid":"8e3f844752d43f92","reportUrl":"https://Nat754.github.io/StroyremAutomation/125//#testresult/8e3f844752d43f92","status":"passed","time":{"start":1699923718083,"stop":1699923726081,"duration":7998}},{"uid":"2e92311e3b8a7ff3","reportUrl":"https://Nat754.github.io/StroyremAutomation/124//#testresult/2e92311e3b8a7ff3","status":"passed","time":{"start":1699837503762,"stop":1699837512049,"duration":8287}},{"uid":"76ae5e6daefc931c","reportUrl":"https://Nat754.github.io/StroyremAutomation/123//#testresult/76ae5e6daefc931c","status":"passed","time":{"start":1699751232753,"stop":1699751241547,"duration":8794}},{"uid":"552eefe2a8a3353d","reportUrl":"https://Nat754.github.io/StroyremAutomation/122//#testresult/552eefe2a8a3353d","status":"passed","time":{"start":1699664721216,"stop":1699664730746,"duration":9530}},{"uid":"bb37d728f11e52b5","reportUrl":"https://Nat754.github.io/StroyremAutomation/121//#testresult/bb37d728f11e52b5","status":"passed","time":{"start":1699578159286,"stop":1699578167002,"duration":7716}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"6a23d9eb6d620d18.json","parameterValues":["'https://stroyrem-nn.ru/catalog/elektroinstrument'"]}