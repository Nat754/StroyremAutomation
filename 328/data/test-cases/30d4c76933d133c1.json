{"uid":"30d4c76933d133c1","name":"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke","historyId":"ee8bcd0b8fbab001b41c4ef3172c289b","time":{"start":1717463478927,"stop":1717463481177,"duration":2250},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x55f5bd68be3a <unknown>\n#1 0x55f5bd37545c <unknown>\n#2 0x55f5bd3c8336 <unknown>\n#3 0x55f5bd3c6176 <unknown>\n#4 0x55f5bd3c3b57 <unknown>\n#5 0x55f5bd3c297c <unknown>\n#6 0x55f5bd3b60ff <unknown>\n#7 0x55f5bd3e44b2 <unknown>\n#8 0x55f5bd3b5a79 <unknown>\n#9 0x55f5bd3e467e <unknown>\n#10 0x55f5bd4032cc <unknown>\n#11 0x55f5bd3e4253 <unknown>\n#12 0x55f5bd3b41c7 <unknown>\n#13 0x55f5bd3b4b3e <unknown>\n#14 0x55f5bd65227b <unknown>\n#15 0x55f5bd656327 <unknown>\n#16 0x55f5bd63edae <unknown>\n#17 0x55f5bd656df2 <unknown>\n#18 0x55f5bd62374f <unknown>\n#19 0x55f5bd67b128 <unknown>\n#20 0x55f5bd67b2fb <unknown>\n#21 0x55f5bd68af6c <unknown>\n#22 0x7fa4710f5134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f5e78250690>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f5e77b6c810>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5e76bb4910>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f5bd67b2fb \\\\u003Cunknown>\\\\n#21 0x55f5bd68af6c \\\\u003Cunknown>\\\\n#22 0x7fa4710f5134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x55f5bd68be3a <unknown>\nE       #1 0x55f5bd37545c <unknown>\nE       #2 0x55f5bd3c8336 <unknown>\nE       #3 0x55f5bd3c6176 <unknown>\nE       #4 0x55f5bd3c3b57 <unknown>\nE       #5 0x55f5bd3c297c <unknown>\nE       #6 0x55f5bd3b60ff <unknown>\nE       #7 0x55f5bd3e44b2 <unknown>\nE       #8 0x55f5bd3b5a79 <unknown>\nE       #9 0x55f5bd3e467e <unknown>\nE       #10 0x55f5bd4032cc <unknown>\nE       #11 0x55f5bd3e4253 <unknown>\nE       #12 0x55f5bd3b41c7 <unknown>\nE       #13 0x55f5bd3b4b3e <unknown>\nE       #14 0x55f5bd65227b <unknown>\nE       #15 0x55f5bd656327 <unknown>\nE       #16 0x55f5bd63edae <unknown>\nE       #17 0x55f5bd656df2 <unknown>\nE       #18 0x55f5bd62374f <unknown>\nE       #19 0x55f5bd67b128 <unknown>\nE       #20 0x55f5bd67b2fb <unknown>\nE       #21 0x55f5bd68af6c <unknown>\nE       #22 0x7fa4710f5134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717462432009,"stop":1717462432081,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1717462432081,"stop":1717462432082,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1717463470886,"stop":1717463471577,"duration":691},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1717463471577,"stop":1717463478926,"duration":7349},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1717463471577,"stop":1717463471577,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x55f5bd68be3a <unknown>\n#1 0x55f5bd37545c <unknown>\n#2 0x55f5bd3c8336 <unknown>\n#3 0x55f5bd3c6176 <unknown>\n#4 0x55f5bd3c3b57 <unknown>\n#5 0x55f5bd3c297c <unknown>\n#6 0x55f5bd3b60ff <unknown>\n#7 0x55f5bd3e44b2 <unknown>\n#8 0x55f5bd3b5a79 <unknown>\n#9 0x55f5bd3e467e <unknown>\n#10 0x55f5bd4032cc <unknown>\n#11 0x55f5bd3e4253 <unknown>\n#12 0x55f5bd3b41c7 <unknown>\n#13 0x55f5bd3b4b3e <unknown>\n#14 0x55f5bd65227b <unknown>\n#15 0x55f5bd656327 <unknown>\n#16 0x55f5bd63edae <unknown>\n#17 0x55f5bd656df2 <unknown>\n#18 0x55f5bd62374f <unknown>\n#19 0x55f5bd67b128 <unknown>\n#20 0x55f5bd67b2fb <unknown>\n#21 0x55f5bd68af6c <unknown>\n#22 0x7fa4710f5134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f5e78250690>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f5e77b6c810>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_0_to_49rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:218: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f5e76bb4910>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f5bd67b2fb \\\\u003Cunknown>\\\\n#21 0x55f5bd68af6c \\\\u003Cunknown>\\\\n#22 0x7fa4710f5134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x55f5bd68be3a <unknown>\nE       #1 0x55f5bd37545c <unknown>\nE       #2 0x55f5bd3c8336 <unknown>\nE       #3 0x55f5bd3c6176 <unknown>\nE       #4 0x55f5bd3c3b57 <unknown>\nE       #5 0x55f5bd3c297c <unknown>\nE       #6 0x55f5bd3b60ff <unknown>\nE       #7 0x55f5bd3e44b2 <unknown>\nE       #8 0x55f5bd3b5a79 <unknown>\nE       #9 0x55f5bd3e467e <unknown>\nE       #10 0x55f5bd4032cc <unknown>\nE       #11 0x55f5bd3e4253 <unknown>\nE       #12 0x55f5bd3b41c7 <unknown>\nE       #13 0x55f5bd3b4b3e <unknown>\nE       #14 0x55f5bd65227b <unknown>\nE       #15 0x55f5bd656327 <unknown>\nE       #16 0x55f5bd63edae <unknown>\nE       #17 0x55f5bd656df2 <unknown>\nE       #18 0x55f5bd62374f <unknown>\nE       #19 0x55f5bd67b128 <unknown>\nE       #20 0x55f5bd67b2fb <unknown>\nE       #21 0x55f5bd68af6c <unknown>\nE       #22 0x7fa4710f5134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1717463478927,"stop":1717463478965,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1717463479026,"stop":1717463479055,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1717463480096,"stop":1717463480139,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"b1e0729841d85bb2","name":"Screenshot","source":"b1e0729841d85bb2.png","type":"image/png","size":58777},{"uid":"df98960ac521b480","name":"HTML source","source":"df98960ac521b480.html","type":"text/html","size":951153}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1717463481421,"stop":1717463481421,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1717463481422,"stop":1717463481492,"duration":70},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"ca0d7e0a1294"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"f6ef1f30e4eb14cc","reportUrl":"https://Nat754.github.io/StroyremAutomation/327//#testresult/f6ef1f30e4eb14cc","status":"passed","time":{"start":1717377326877,"stop":1717377336328,"duration":9451}},{"uid":"9087bf9e9e55bb69","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/9087bf9e9e55bb69","status":"passed","time":{"start":1717291054949,"stop":1717291064647,"duration":9698}},{"uid":"1abbe679c5b6cd4b","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/1abbe679c5b6cd4b","status":"passed","time":{"start":1717204374795,"stop":1717204385961,"duration":11166}},{"uid":"8a854d6c99166159","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/8a854d6c99166159","status":"passed","time":{"start":1717118087770,"stop":1717118097290,"duration":9520}},{"uid":"1db53efe1ea6286f","reportUrl":"https://Nat754.github.io/StroyremAutomation/323//#testresult/1db53efe1ea6286f","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=125.0.6422.78); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55bebcee2e8a <unknown>\n#1 0x55bebcbcc45c <unknown>\n#2 0x55bebcbd1b69 <unknown>\n#3 0x55bebcbd3915 <unknown>\n#4 0x55bebcbd399c <unknown>\n#5 0x55bebcc1f24c <unknown>\n#6 0x55bebcc1d176 <unknown>\n#7 0x55bebcc1ab57 <unknown>\n#8 0x55bebcc1997c <unknown>\n#9 0x55bebcc0d0ff <unknown>\n#10 0x55bebcc3b4b2 <unknown>\n#11 0x55bebcc0ca79 <unknown>\n#12 0x55bebcc3b67e <unknown>\n#13 0x55bebcc5a2cc <unknown>\n#14 0x55bebcc3b253 <unknown>\n#15 0x55bebcc0b1c7 <unknown>\n#16 0x55bebcc0bb3e <unknown>\n#17 0x55bebcea92cb <unknown>\n#18 0x55bebcead377 <unknown>\n#19 0x55bebce95dfe <unknown>\n#20 0x55bebceade42 <unknown>\n#21 0x55bebce7a79f <unknown>\n#22 0x55bebced2178 <unknown>\n#23 0x55bebced234b <unknown>\n#24 0x55bebcee1fbc <unknown>\n#25 0x7f57abd92134 <unknown>","time":{"start":1717031398646,"stop":1717031403470,"duration":4824}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"30d4c76933d133c1.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu'"]}