{"uid":"6e7e1541de6da698","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"5a6e8826f1b547a3dd78f99266c49e5a","time":{"start":1692061053767,"stop":1692061065701,"duration":11934},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x556959fb0613 <unknown>\n#1 0x556959cdc537 <unknown>\n#2 0x556959ce0ade <unknown>\n#3 0x556959ce2619 <unknown>\n#4 0x556959d547e2 <unknown>\n#5 0x556959d3ba32 <unknown>\n#6 0x556959d53d09 <unknown>\n#7 0x556959d3b803 <unknown>\n#8 0x556959d0f68b <unknown>\n#9 0x556959d1042e <unknown>\n#10 0x556959f71c28 <unknown>\n#11 0x556959f75af7 <unknown>\n#12 0x556959f8001c <unknown>\n#13 0x556959f76723 <unknown>\n#14 0x556959f45457 <unknown>\n#15 0x556959f9a628 <unknown>\n#16 0x556959f9a7b7 <unknown>\n#17 0x556959fa9483 <unknown>\n#18 0x7fb6b0b80044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fc0fa51aed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2abdcb4e5f4bac05256a4ef86ec5a421\")>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(10000)\n        page.get_field_price_last().send_keys(14999)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n        price = (float(page.get_pc_price().text[:-2].replace(' ', '')))\n>       page.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:47: in get_add_to_cart_btn\n    return self.element_is_visible(self._add_to_cart_btn)\nbase/seleniumbase.py:39: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\nbase/seleniumbase.py:96: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:406: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc0fa562bd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x556959f9a7b7 \\\\u003Cunknown>\\\\n#17 0x556959fa9483 \\\\u003Cunknown>\\\\n#18 0x7fb6b0b80044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x556959fb0613 <unknown>\nE       #1 0x556959cdc537 <unknown>\nE       #2 0x556959ce0ade <unknown>\nE       #3 0x556959ce2619 <unknown>\nE       #4 0x556959d547e2 <unknown>\nE       #5 0x556959d3ba32 <unknown>\nE       #6 0x556959d53d09 <unknown>\nE       #7 0x556959d3b803 <unknown>\nE       #8 0x556959d0f68b <unknown>\nE       #9 0x556959d1042e <unknown>\nE       #10 0x556959f71c28 <unknown>\nE       #11 0x556959f75af7 <unknown>\nE       #12 0x556959f8001c <unknown>\nE       #13 0x556959f76723 <unknown>\nE       #14 0x556959f45457 <unknown>\nE       #15 0x556959f9a628 <unknown>\nE       #16 0x556959f9a7b7 <unknown>\nE       #17 0x556959fa9483 <unknown>\nE       #18 0x7fb6b0b80044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692060323260,"stop":1692060323341,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"clear_allure_results_folder","time":{"start":1692060323341,"stop":1692060323341,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1692061052960,"stop":1692061053766,"duration":806},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"setup","time":{"start":1692061053766,"stop":1692061053766,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x556959fb0613 <unknown>\n#1 0x556959cdc537 <unknown>\n#2 0x556959ce0ade <unknown>\n#3 0x556959ce2619 <unknown>\n#4 0x556959d547e2 <unknown>\n#5 0x556959d3ba32 <unknown>\n#6 0x556959d53d09 <unknown>\n#7 0x556959d3b803 <unknown>\n#8 0x556959d0f68b <unknown>\n#9 0x556959d1042e <unknown>\n#10 0x556959f71c28 <unknown>\n#11 0x556959f75af7 <unknown>\n#12 0x556959f8001c <unknown>\n#13 0x556959f76723 <unknown>\n#14 0x556959f45457 <unknown>\n#15 0x556959f9a628 <unknown>\n#16 0x556959f9a7b7 <unknown>\n#17 0x556959fa9483 <unknown>\n#18 0x7fb6b0b80044 <unknown>","statusTrace":"self = <test_products_on_sale_page.TestProductsOnSalePage object at 0x7fc0fa51aed0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2abdcb4e5f4bac05256a4ef86ec5a421\")>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, driver, link):\n        page = ProductsOnSale(driver)\n        driver.get(link)\n        page.get_field_price_first().send_keys(10000)\n        page.get_field_price_last().send_keys(14999)\n        page.get_in_stock_products_link().click()\n        time.sleep(1)\n        price = (float(page.get_pc_price().text[:-2].replace(' ', '')))\n>       page.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/products_on_sale_page.py:47: in get_add_to_cart_btn\n    return self.element_is_visible(self._add_to_cart_btn)\nbase/seleniumbase.py:39: in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\nbase/seleniumbase.py:96: in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:406: in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc0fa562bd0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#16 0x556959f9a7b7 \\\\u003Cunknown>\\\\n#17 0x556959fa9483 \\\\u003Cunknown>\\\\n#18 0x7fb6b0b80044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x556959fb0613 <unknown>\nE       #1 0x556959cdc537 <unknown>\nE       #2 0x556959ce0ade <unknown>\nE       #3 0x556959ce2619 <unknown>\nE       #4 0x556959d547e2 <unknown>\nE       #5 0x556959d3ba32 <unknown>\nE       #6 0x556959d53d09 <unknown>\nE       #7 0x556959d3b803 <unknown>\nE       #8 0x556959d0f68b <unknown>\nE       #9 0x556959d1042e <unknown>\nE       #10 0x556959f71c28 <unknown>\nE       #11 0x556959f75af7 <unknown>\nE       #12 0x556959f8001c <unknown>\nE       #13 0x556959f76723 <unknown>\nE       #14 0x556959f45457 <unknown>\nE       #15 0x556959f9a628 <unknown>\nE       #16 0x556959f9a7b7 <unknown>\nE       #17 0x556959fa9483 <unknown>\nE       #18 0x7fb6b0b80044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1692061063476,"stop":1692061063536,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1692061063636,"stop":1692061063676,"duration":40},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Проверяем видимость кнопки 'На складе'","time":{"start":1692061063742,"stop":1692061063798,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Проверяем видимость цены товара","time":{"start":1692061065523,"stop":1692061065607,"duration":84},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Проверяем видимость кнопки 'В корзину'","time":{"start":1692061065627,"stop":1692061065700,"duration":73},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=115.0.5790.170); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x556959fb0613 <unknown>\n#1 0x556959cdc537 <unknown>\n#2 0x556959ce0ade <unknown>\n#3 0x556959ce2619 <unknown>\n#4 0x556959d547e2 <unknown>\n#5 0x556959d3ba32 <unknown>\n#6 0x556959d53d09 <unknown>\n#7 0x556959d3b803 <unknown>\n#8 0x556959d0f68b <unknown>\n#9 0x556959d1042e <unknown>\n#10 0x556959f71c28 <unknown>\n#11 0x556959f75af7 <unknown>\n#12 0x556959f8001c <unknown>\n#13 0x556959f76723 <unknown>\n#14 0x556959f45457 <unknown>\n#15 0x556959f9a628 <unknown>\n#16 0x556959f9a7b7 <unknown>\n#17 0x556959fa9483 <unknown>\n#18 0x7fb6b0b80044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/products_on_sale_page.py\", line 47, in get_add_to_cart_btn\n    return self.element_is_visible(self._add_to_cart_btn)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/app/base/seleniumbase.py\", line 39, in element_is_visible\n    self.go_to_element(self.element_is_present(locator))\n  File \"/app/base/seleniumbase.py\", line 96, in go_to_element\n    self.driver.execute_script(\"arguments[0].scrollIntoView();\", element)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 406, in execute_script\n    return self.execute(command, {\"script\": script, \"args\": converted_args})[\"value\"]\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"attachments":[{"uid":"626fe19033b20ca9","name":"Screenshot","source":"626fe19033b20ca9.png","type":"image/png","size":96747},{"uid":"7e2d9784e69d1753","name":"HTML source","source":"7e2d9784e69d1753.html","type":"text/html","size":557543}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":5},"afterStages":[{"name":"setup::0","time":{"start":1692061065944,"stop":1692061065944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver::0","time":{"start":1692061065945,"stop":1692061066012,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"95a07308bef3"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":5,"unknown":0,"total":6},"items":[{"uid":"31e7bbd85a7007c3","reportUrl":"https://Nat754.github.io/StroyremAutomation/26//#testresult/31e7bbd85a7007c3","status":"passed","time":{"start":1691974526524,"stop":1691974541007,"duration":14483}},{"uid":"d8917ac4e3d72c41","reportUrl":"https://Nat754.github.io/StroyremAutomation/25//#testresult/d8917ac4e3d72c41","status":"passed","time":{"start":1691888184509,"stop":1691888195637,"duration":11128}},{"uid":"3c1621080b93b9fa","reportUrl":"https://Nat754.github.io/StroyremAutomation/24//#testresult/3c1621080b93b9fa","status":"passed","time":{"start":1691801535806,"stop":1691801547070,"duration":11264}},{"uid":"9a632dccb409892e","reportUrl":"https://Nat754.github.io/StroyremAutomation/23//#testresult/9a632dccb409892e","status":"passed","time":{"start":1691715204413,"stop":1691715216293,"duration":11880}},{"uid":"dc6c80e5c7985b84","reportUrl":"https://Nat754.github.io/StroyremAutomation/22//#testresult/dc6c80e5c7985b84","status":"passed","time":{"start":1691629576467,"stop":1691629597660,"duration":21193}}]},"tags":["smoke_test"]},"source":"6e7e1541de6da698.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}