{"uid":"49266622b3f4c604","name":"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke","historyId":"24bb2201ad02feae4230ec2c85755ba8","time":{"start":1715908376996,"stop":1715908379357,"duration":2361},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55e6d01eaeca <unknown>\n#1 0x55e6cfed445c <unknown>\n#2 0x55e6cff27336 <unknown>\n#3 0x55e6cff25176 <unknown>\n#4 0x55e6cff22b57 <unknown>\n#5 0x55e6cff2197c <unknown>\n#6 0x55e6cff150ff <unknown>\n#7 0x55e6cff434b2 <unknown>\n#8 0x55e6cff14a79 <unknown>\n#9 0x55e6cff4367e <unknown>\n#10 0x55e6cff622cc <unknown>\n#11 0x55e6cff43253 <unknown>\n#12 0x55e6cff131c7 <unknown>\n#13 0x55e6cff13b3e <unknown>\n#14 0x55e6d01b130b <unknown>\n#15 0x55e6d01b53b7 <unknown>\n#16 0x55e6d019de3e <unknown>\n#17 0x55e6d01b5e82 <unknown>\n#18 0x55e6d01827df <unknown>\n#19 0x55e6d01da1b8 <unknown>\n#20 0x55e6d01da38b <unknown>\n#21 0x55e6d01e9ffc <unknown>\n#22 0x7f93b2081134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fe0ef42a150>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fe0eee0d2d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe0eef019d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e6d01da38b \\\\u003Cunknown>\\\\n#21 0x55e6d01e9ffc \\\\u003Cunknown>\\\\n#22 0x7f93b2081134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55e6d01eaeca <unknown>\nE       #1 0x55e6cfed445c <unknown>\nE       #2 0x55e6cff27336 <unknown>\nE       #3 0x55e6cff25176 <unknown>\nE       #4 0x55e6cff22b57 <unknown>\nE       #5 0x55e6cff2197c <unknown>\nE       #6 0x55e6cff150ff <unknown>\nE       #7 0x55e6cff434b2 <unknown>\nE       #8 0x55e6cff14a79 <unknown>\nE       #9 0x55e6cff4367e <unknown>\nE       #10 0x55e6cff622cc <unknown>\nE       #11 0x55e6cff43253 <unknown>\nE       #12 0x55e6cff131c7 <unknown>\nE       #13 0x55e6cff13b3e <unknown>\nE       #14 0x55e6d01b130b <unknown>\nE       #15 0x55e6d01b53b7 <unknown>\nE       #16 0x55e6d019de3e <unknown>\nE       #17 0x55e6d01b5e82 <unknown>\nE       #18 0x55e6d01827df <unknown>\nE       #19 0x55e6d01da1b8 <unknown>\nE       #20 0x55e6d01da38b <unknown>\nE       #21 0x55e6d01e9ffc <unknown>\nE       #22 0x7f93b2081134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1715907120439,"stop":1715907120506,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1715907120506,"stop":1715907120506,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1715908368787,"stop":1715908369476,"duration":689},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1715908369477,"stop":1715908376995,"duration":7518},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1715908369477,"stop":1715908369477,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.60)\nStacktrace:\n#0 0x55e6d01eaeca <unknown>\n#1 0x55e6cfed445c <unknown>\n#2 0x55e6cff27336 <unknown>\n#3 0x55e6cff25176 <unknown>\n#4 0x55e6cff22b57 <unknown>\n#5 0x55e6cff2197c <unknown>\n#6 0x55e6cff150ff <unknown>\n#7 0x55e6cff434b2 <unknown>\n#8 0x55e6cff14a79 <unknown>\n#9 0x55e6cff4367e <unknown>\n#10 0x55e6cff622cc <unknown>\n#11 0x55e6cff43253 <unknown>\n#12 0x55e6cff131c7 <unknown>\n#13 0x55e6cff13b3e <unknown>\n#14 0x55e6d01b130b <unknown>\n#15 0x55e6d01b53b7 <unknown>\n#16 0x55e6d019de3e <unknown>\n#17 0x55e6d01b5e82 <unknown>\n#18 0x55e6d01827df <unknown>\n#19 0x55e6d01da1b8 <unknown>\n#20 0x55e6d01da38b <unknown>\n#21 0x55e6d01e9ffc <unknown>\n#22 0x7f93b2081134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fe0ef42a150>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fe0eee0d2d0>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_50_to_3499rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:345: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fe0eef019d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55e6d01da38b \\\\u003Cunknown>\\\\n#21 0x55e6d01e9ffc \\\\u003Cunknown>\\\\n#22 0x7f93b2081134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.60)\nE       Stacktrace:\nE       #0 0x55e6d01eaeca <unknown>\nE       #1 0x55e6cfed445c <unknown>\nE       #2 0x55e6cff27336 <unknown>\nE       #3 0x55e6cff25176 <unknown>\nE       #4 0x55e6cff22b57 <unknown>\nE       #5 0x55e6cff2197c <unknown>\nE       #6 0x55e6cff150ff <unknown>\nE       #7 0x55e6cff434b2 <unknown>\nE       #8 0x55e6cff14a79 <unknown>\nE       #9 0x55e6cff4367e <unknown>\nE       #10 0x55e6cff622cc <unknown>\nE       #11 0x55e6cff43253 <unknown>\nE       #12 0x55e6cff131c7 <unknown>\nE       #13 0x55e6cff13b3e <unknown>\nE       #14 0x55e6d01b130b <unknown>\nE       #15 0x55e6d01b53b7 <unknown>\nE       #16 0x55e6d019de3e <unknown>\nE       #17 0x55e6d01b5e82 <unknown>\nE       #18 0x55e6d01827df <unknown>\nE       #19 0x55e6d01da1b8 <unknown>\nE       #20 0x55e6d01da38b <unknown>\nE       #21 0x55e6d01e9ffc <unknown>\nE       #22 0x7f93b2081134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1715908376996,"stop":1715908377026,"duration":30},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1715908377091,"stop":1715908377126,"duration":35},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1715908378166,"stop":1715908378207,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8bad1e6de3ddeab9","name":"Screenshot","source":"8bad1e6de3ddeab9.png","type":"image/png","size":130256},{"uid":"ca1a57c8e74e3121","name":"HTML source","source":"ca1a57c8e74e3121.html","type":"text/html","size":927007}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1715908379547,"stop":1715908379621,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1715908379547,"stop":1715908379547,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"1a828b327b8a"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":272,"unknown":0,"total":274},"items":[{"uid":"bfafc7b693ef3230","reportUrl":"https://Nat754.github.io/StroyremAutomation/309//#testresult/bfafc7b693ef3230","status":"passed","time":{"start":1715822211512,"stop":1715822225445,"duration":13933}},{"uid":"45357358b8d5183","reportUrl":"https://Nat754.github.io/StroyremAutomation/308//#testresult/45357358b8d5183","status":"passed","time":{"start":1715735583974,"stop":1715735597418,"duration":13444}},{"uid":"c2f8b2de8f4de219","reportUrl":"https://Nat754.github.io/StroyremAutomation/307//#testresult/c2f8b2de8f4de219","status":"passed","time":{"start":1715649159193,"stop":1715649170820,"duration":11627}},{"uid":"1a1623c821b6581f","reportUrl":"https://Nat754.github.io/StroyremAutomation/306//#testresult/1a1623c821b6581f","status":"passed","time":{"start":1715563103395,"stop":1715563115718,"duration":12323}},{"uid":"6677912763bb79a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/305//#testresult/6677912763bb79a1","status":"passed","time":{"start":1715476466217,"stop":1715476477239,"duration":11022}},{"uid":"5db1f3ff990d1200","reportUrl":"https://Nat754.github.io/StroyremAutomation/304//#testresult/5db1f3ff990d1200","status":"passed","time":{"start":1715389761819,"stop":1715389772567,"duration":10748}},{"uid":"5cbc30c544c2e7c","reportUrl":"https://Nat754.github.io/StroyremAutomation/303//#testresult/5cbc30c544c2e7c","status":"passed","time":{"start":1715303753937,"stop":1715303765794,"duration":11857}},{"uid":"5d5f4516168809be","reportUrl":"https://Nat754.github.io/StroyremAutomation/302//#testresult/5d5f4516168809be","status":"passed","time":{"start":1715216994362,"stop":1715217005101,"duration":10739}},{"uid":"d9a57f8ddda056cc","reportUrl":"https://Nat754.github.io/StroyremAutomation/301//#testresult/d9a57f8ddda056cc","status":"passed","time":{"start":1715130364574,"stop":1715130376354,"duration":11780}},{"uid":"8c71590298db9794","reportUrl":"https://Nat754.github.io/StroyremAutomation/300//#testresult/8c71590298db9794","status":"passed","time":{"start":1715044176680,"stop":1715044187741,"duration":11061}},{"uid":"5aba4e99dddf8741","reportUrl":"https://Nat754.github.io/StroyremAutomation/299//#testresult/5aba4e99dddf8741","status":"passed","time":{"start":1714957834769,"stop":1714957845678,"duration":10909}},{"uid":"1f172364c494c76","reportUrl":"https://Nat754.github.io/StroyremAutomation/298//#testresult/1f172364c494c76","status":"passed","time":{"start":1714871576830,"stop":1714871587661,"duration":10831}},{"uid":"52c60b2a369c08c7","reportUrl":"https://Nat754.github.io/StroyremAutomation/297//#testresult/52c60b2a369c08c7","status":"passed","time":{"start":1714784971719,"stop":1714784982368,"duration":10649}},{"uid":"43761ae7ffa053a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/296//#testresult/43761ae7ffa053a1","status":"passed","time":{"start":1714698839756,"stop":1714698850699,"duration":10943}},{"uid":"809646de39a7996c","reportUrl":"https://Nat754.github.io/StroyremAutomation/295//#testresult/809646de39a7996c","status":"passed","time":{"start":1714612119124,"stop":1714612129800,"duration":10676}},{"uid":"b56a1478ace9a308","reportUrl":"https://Nat754.github.io/StroyremAutomation/294//#testresult/b56a1478ace9a308","status":"passed","time":{"start":1714525972969,"stop":1714525983612,"duration":10643}},{"uid":"fc018ca406f62eab","reportUrl":"https://Nat754.github.io/StroyremAutomation/293//#testresult/fc018ca406f62eab","status":"passed","time":{"start":1714439341225,"stop":1714439352172,"duration":10947}},{"uid":"8580d4454dc89aba","reportUrl":"https://Nat754.github.io/StroyremAutomation/292//#testresult/8580d4454dc89aba","status":"passed","time":{"start":1714353026383,"stop":1714353037285,"duration":10902}},{"uid":"f6f2db119a1ab6fc","reportUrl":"https://Nat754.github.io/StroyremAutomation/291//#testresult/f6f2db119a1ab6fc","status":"passed","time":{"start":1714267025100,"stop":1714267036797,"duration":11697}},{"uid":"884e4617c449f19a","reportUrl":"https://Nat754.github.io/StroyremAutomation/290//#testresult/884e4617c449f19a","status":"passed","time":{"start":1714180401620,"stop":1714180413630,"duration":12010}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"49266622b3f4c604.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}