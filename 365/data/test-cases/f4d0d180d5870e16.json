{"uid":"f4d0d180d5870e16","name":"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke","historyId":"ae0b03f524f3687047fb70a412376bdb","time":{"start":1720660512322,"stop":1720660517520,"duration":5198},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x565280dc6c7a <unknown>\n#1 0x565280aa9e2c <unknown>\n#2 0x565280aaf539 <unknown>\n#3 0x565280ab12e5 <unknown>\n#4 0x565280ab136c <unknown>\n#5 0x565280afd31c <unknown>\n#6 0x565280afb246 <unknown>\n#7 0x565280af8c27 <unknown>\n#8 0x565280af7a60 <unknown>\n#9 0x565280aeb15f <unknown>\n#10 0x565280b195c2 <unknown>\n#11 0x565280aeaad9 <unknown>\n#12 0x565280b1978e <unknown>\n#13 0x565280b38303 <unknown>\n#14 0x565280b19363 <unknown>\n#15 0x565280ae9247 <unknown>\n#16 0x565280ae9b9e <unknown>\n#17 0x565280d8d24b <unknown>\n#18 0x565280d912f1 <unknown>\n#19 0x565280d78afe <unknown>\n#20 0x565280d91e52 <unknown>\n#21 0x565280d5d79f <unknown>\n#22 0x565280db6638 <unknown>\n#23 0x565280db6810 <unknown>\n#24 0x565280dc5dac <unknown>\n#25 0x7f620d783134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f113fde49d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f11403c3010>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f11403873d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x565280db6810 \\\\u003Cunknown>\\\\n#24 0x565280dc5dac \\\\u003Cunknown>\\\\n#25 0x7f620d783134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x565280dc6c7a <unknown>\nE       #1 0x565280aa9e2c <unknown>\nE       #2 0x565280aaf539 <unknown>\nE       #3 0x565280ab12e5 <unknown>\nE       #4 0x565280ab136c <unknown>\nE       #5 0x565280afd31c <unknown>\nE       #6 0x565280afb246 <unknown>\nE       #7 0x565280af8c27 <unknown>\nE       #8 0x565280af7a60 <unknown>\nE       #9 0x565280aeb15f <unknown>\nE       #10 0x565280b195c2 <unknown>\nE       #11 0x565280aeaad9 <unknown>\nE       #12 0x565280b1978e <unknown>\nE       #13 0x565280b38303 <unknown>\nE       #14 0x565280b19363 <unknown>\nE       #15 0x565280ae9247 <unknown>\nE       #16 0x565280ae9b9e <unknown>\nE       #17 0x565280d8d24b <unknown>\nE       #18 0x565280d912f1 <unknown>\nE       #19 0x565280d78afe <unknown>\nE       #20 0x565280d91e52 <unknown>\nE       #21 0x565280d5d79f <unknown>\nE       #22 0x565280db6638 <unknown>\nE       #23 0x565280db6810 <unknown>\nE       #24 0x565280dc5dac <unknown>\nE       #25 0x7f620d783134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720659373917,"stop":1720659373983,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1720659373984,"stop":1720659373984,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1720660501202,"stop":1720660501896,"duration":694},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1720660501896,"stop":1720660501897,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1720660501897,"stop":1720660512322,"duration":10425},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x565280dc6c7a <unknown>\n#1 0x565280aa9e2c <unknown>\n#2 0x565280aaf539 <unknown>\n#3 0x565280ab12e5 <unknown>\n#4 0x565280ab136c <unknown>\n#5 0x565280afd31c <unknown>\n#6 0x565280afb246 <unknown>\n#7 0x565280af8c27 <unknown>\n#8 0x565280af7a60 <unknown>\n#9 0x565280aeb15f <unknown>\n#10 0x565280b195c2 <unknown>\n#11 0x565280aeaad9 <unknown>\n#12 0x565280b1978e <unknown>\n#13 0x565280b38303 <unknown>\n#14 0x565280b19363 <unknown>\n#15 0x565280ae9247 <unknown>\n#16 0x565280ae9b9e <unknown>\n#17 0x565280d8d24b <unknown>\n#18 0x565280d912f1 <unknown>\n#19 0x565280d78afe <unknown>\n#20 0x565280d91e52 <unknown>\n#21 0x565280d5d79f <unknown>\n#22 0x565280db6638 <unknown>\n#23 0x565280db6810 <unknown>\n#24 0x565280dc5dac <unknown>\n#25 0x7f620d783134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f113fde49d0>\nlink = 'https://stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f11403c3010>\n\n    @allure.title(\"positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        product_page_open.get_text_red_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:239: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f11403873d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x565280db6810 \\\\u003Cunknown>\\\\n#24 0x565280dc5dac \\\\u003Cunknown>\\\\n#25 0x7f620d783134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=126.0.6478.126); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x565280dc6c7a <unknown>\nE       #1 0x565280aa9e2c <unknown>\nE       #2 0x565280aaf539 <unknown>\nE       #3 0x565280ab12e5 <unknown>\nE       #4 0x565280ab136c <unknown>\nE       #5 0x565280afd31c <unknown>\nE       #6 0x565280afb246 <unknown>\nE       #7 0x565280af8c27 <unknown>\nE       #8 0x565280af7a60 <unknown>\nE       #9 0x565280aeb15f <unknown>\nE       #10 0x565280b195c2 <unknown>\nE       #11 0x565280aeaad9 <unknown>\nE       #12 0x565280b1978e <unknown>\nE       #13 0x565280b38303 <unknown>\nE       #14 0x565280b19363 <unknown>\nE       #15 0x565280ae9247 <unknown>\nE       #16 0x565280ae9b9e <unknown>\nE       #17 0x565280d8d24b <unknown>\nE       #18 0x565280d912f1 <unknown>\nE       #19 0x565280d78afe <unknown>\nE       #20 0x565280d91e52 <unknown>\nE       #21 0x565280d5d79f <unknown>\nE       #22 0x565280db6638 <unknown>\nE       #23 0x565280db6810 <unknown>\nE       #24 0x565280dc5dac <unknown>\nE       #25 0x7f620d783134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1720660512322,"stop":1720660512378,"duration":56},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1720660514442,"stop":1720660514483,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1720660516822,"stop":1720660516872,"duration":50},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"6cf561094a00df37","name":"Screenshot","source":"6cf561094a00df37.png","type":"image/png","size":249415},{"uid":"3272ea4f9dad8a06","name":"HTML source","source":"3272ea4f9dad8a06.html","type":"text/html","size":900211}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1720660517727,"stop":1720660517802,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1720660517727,"stop":1720660517727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"5ff5d3ad11f6"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":36,"unknown":0,"total":43},"items":[{"uid":"1ad1d3c3a779b4d5","reportUrl":"https://Nat754.github.io/StroyremAutomation/364//#testresult/1ad1d3c3a779b4d5","status":"passed","time":{"start":1720574092914,"stop":1720574104007,"duration":11093}},{"uid":"7ea59da55f2007c8","reportUrl":"https://Nat754.github.io/StroyremAutomation/363//#testresult/7ea59da55f2007c8","status":"passed","time":{"start":1720487782146,"stop":1720487792396,"duration":10250}},{"uid":"d92d5a20d6e1f5d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/362//#testresult/d92d5a20d6e1f5d0","status":"passed","time":{"start":1720401223518,"stop":1720401233205,"duration":9687}},{"uid":"6f14471fd14d9ef1","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/6f14471fd14d9ef1","status":"passed","time":{"start":1720314999189,"stop":1720315008147,"duration":8958}},{"uid":"539d33362e905ea6","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/539d33362e905ea6","status":"passed","time":{"start":1720228311502,"stop":1720228321467,"duration":9965}},{"uid":"57c893e392e6acc1","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/57c893e392e6acc1","status":"passed","time":{"start":1720141909664,"stop":1720141919539,"duration":9875}},{"uid":"bdb72ea5c1d88632","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/bdb72ea5c1d88632","status":"passed","time":{"start":1720055586244,"stop":1720055596314,"duration":10070}},{"uid":"3470f53eca3382df","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/3470f53eca3382df","status":"passed","time":{"start":1719969238419,"stop":1719969248748,"duration":10329}},{"uid":"c27ab51b29a711ad","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/c27ab51b29a711ad","status":"passed","time":{"start":1719882825996,"stop":1719882835314,"duration":9318}},{"uid":"b208aca03c4bb5bd","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/b208aca03c4bb5bd","status":"passed","time":{"start":1719796658752,"stop":1719796667826,"duration":9074}},{"uid":"ebc22087447d3663","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/ebc22087447d3663","status":"passed","time":{"start":1719710180927,"stop":1719710190056,"duration":9129}},{"uid":"3037a42773305f1c","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/3037a42773305f1c","status":"passed","time":{"start":1719623470780,"stop":1719623482727,"duration":11947}},{"uid":"d04111c24072abc9","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/d04111c24072abc9","status":"passed","time":{"start":1719537358047,"stop":1719537369812,"duration":11765}},{"uid":"f1bf4bf5fe5d8262","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/f1bf4bf5fe5d8262","status":"passed","time":{"start":1719450775385,"stop":1719450785223,"duration":9838}},{"uid":"12ac544fadb77e4e","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/12ac544fadb77e4e","status":"passed","time":{"start":1719364312188,"stop":1719364321271,"duration":9083}},{"uid":"eab5ee786ece846f","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/eab5ee786ece846f","status":"passed","time":{"start":1719278139115,"stop":1719278149140,"duration":10025}},{"uid":"fd9d254cbac1592a","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/fd9d254cbac1592a","status":"passed","time":{"start":1719191682368,"stop":1719191692083,"duration":9715}},{"uid":"45f68572a7ccac0f","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/45f68572a7ccac0f","status":"passed","time":{"start":1719105405607,"stop":1719105414927,"duration":9320}},{"uid":"aaa4db56f679cff5","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/aaa4db56f679cff5","status":"passed","time":{"start":1719018826592,"stop":1719018836464,"duration":9872}},{"uid":"def9c00ed6461cdb","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/def9c00ed6461cdb","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=126.0.6478.63); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55b47949c69a <unknown>\n#1 0x55b47917f0dc <unknown>\n#2 0x55b4791847e9 <unknown>\n#3 0x55b479186595 <unknown>\n#4 0x55b47918661c <unknown>\n#5 0x55b4791d25dc <unknown>\n#6 0x55b4791d005d <unknown>\n#7 0x55b4791cdef7 <unknown>\n#8 0x55b4791ccd2c <unknown>\n#9 0x55b4791c040f <unknown>\n#10 0x55b4791ee872 <unknown>\n#11 0x55b4791bfd89 <unknown>\n#12 0x55b4791eea3e <unknown>\n#13 0x55b47920d5c3 <unknown>\n#14 0x55b4791ee613 <unknown>\n#15 0x55b4791be4f7 <unknown>\n#16 0x55b4791bee4e <unknown>\n#17 0x55b47946286b <unknown>\n#18 0x55b479466911 <unknown>\n#19 0x55b47944e35e <unknown>\n#20 0x55b479467472 <unknown>\n#21 0x55b479432cbf <unknown>\n#22 0x55b47948c098 <unknown>\n#23 0x55b47948c270 <unknown>\n#24 0x55b47949b7cc <unknown>\n#25 0x7f5b5409e134 <unknown>","time":{"start":1718932557985,"stop":1718932562360,"duration":4375}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"f4d0d180d5870e16.json","parameterValues":["'https://stroyrem-nn.ru/catalog/action'"]}