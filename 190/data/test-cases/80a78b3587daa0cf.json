{"uid":"80a78b3587daa0cf","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"8519a10778cf28e105209a17627cfb4a","time":{"start":1705543400809,"stop":1705543403085,"duration":2276},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x56478ff87f83 <unknown>\n#1 0x56478fc40cf7 <unknown>\n#2 0x56478fc98d92 <unknown>\n#3 0x56478fc967f4 <unknown>\n#4 0x56478fc93894 <unknown>\n#5 0x56478fc924b9 <unknown>\n#6 0x56478fc84313 <unknown>\n#7 0x56478fcba0b2 <unknown>\n#8 0x56478fc83b49 <unknown>\n#9 0x56478fcba4ce <unknown>\n#10 0x56478fcd9006 <unknown>\n#11 0x56478fcb9e53 <unknown>\n#12 0x56478fc81dd4 <unknown>\n#13 0x56478fc831de <unknown>\n#14 0x56478ff4c531 <unknown>\n#15 0x56478ff50455 <unknown>\n#16 0x56478ff38f55 <unknown>\n#17 0x56478ff510ef <unknown>\n#18 0x56478ff1c99f <unknown>\n#19 0x56478ff75008 <unknown>\n#20 0x56478ff751d7 <unknown>\n#21 0x56478ff87124 <unknown>\n#22 0x7faa9b31c044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fb6912dbc90>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fb691273750>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb6903bc110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56478ff751d7 \\\\u003Cunknown>\\\\n#21 0x56478ff87124 \\\\u003Cunknown>\\\\n#22 0x7faa9b31c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x56478ff87f83 <unknown>\nE       #1 0x56478fc40cf7 <unknown>\nE       #2 0x56478fc98d92 <unknown>\nE       #3 0x56478fc967f4 <unknown>\nE       #4 0x56478fc93894 <unknown>\nE       #5 0x56478fc924b9 <unknown>\nE       #6 0x56478fc84313 <unknown>\nE       #7 0x56478fcba0b2 <unknown>\nE       #8 0x56478fc83b49 <unknown>\nE       #9 0x56478fcba4ce <unknown>\nE       #10 0x56478fcd9006 <unknown>\nE       #11 0x56478fcb9e53 <unknown>\nE       #12 0x56478fc81dd4 <unknown>\nE       #13 0x56478fc831de <unknown>\nE       #14 0x56478ff4c531 <unknown>\nE       #15 0x56478ff50455 <unknown>\nE       #16 0x56478ff38f55 <unknown>\nE       #17 0x56478ff510ef <unknown>\nE       #18 0x56478ff1c99f <unknown>\nE       #19 0x56478ff75008 <unknown>\nE       #20 0x56478ff751d7 <unknown>\nE       #21 0x56478ff87124 <unknown>\nE       #22 0x7faa9b31c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705539112215,"stop":1705539112282,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705539112282,"stop":1705539112282,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705543386766,"stop":1705543387548,"duration":782},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705543387548,"stop":1705543387548,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1705543387548,"stop":1705543400808,"duration":13260},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=120.0.6099.109)\nStacktrace:\n#0 0x56478ff87f83 <unknown>\n#1 0x56478fc40cf7 <unknown>\n#2 0x56478fc98d92 <unknown>\n#3 0x56478fc967f4 <unknown>\n#4 0x56478fc93894 <unknown>\n#5 0x56478fc924b9 <unknown>\n#6 0x56478fc84313 <unknown>\n#7 0x56478fcba0b2 <unknown>\n#8 0x56478fc83b49 <unknown>\n#9 0x56478fcba4ce <unknown>\n#10 0x56478fcd9006 <unknown>\n#11 0x56478fcb9e53 <unknown>\n#12 0x56478fc81dd4 <unknown>\n#13 0x56478fc831de <unknown>\n#14 0x56478ff4c531 <unknown>\n#15 0x56478ff50455 <unknown>\n#16 0x56478ff38f55 <unknown>\n#17 0x56478ff510ef <unknown>\n#18 0x56478ff1c99f <unknown>\n#19 0x56478ff75008 <unknown>\n#20 0x56478ff751d7 <unknown>\n#21 0x56478ff87124 <unknown>\n#22 0x7faa9b31c044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fb6912dbc90>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fb691273750>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb6903bc110>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x56478ff751d7 \\\\u003Cunknown>\\\\n#21 0x56478ff87124 \\\\u003Cunknown>\\\\n#22 0x7faa9b31c044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=120.0.6099.109)\nE       Stacktrace:\nE       #0 0x56478ff87f83 <unknown>\nE       #1 0x56478fc40cf7 <unknown>\nE       #2 0x56478fc98d92 <unknown>\nE       #3 0x56478fc967f4 <unknown>\nE       #4 0x56478fc93894 <unknown>\nE       #5 0x56478fc924b9 <unknown>\nE       #6 0x56478fc84313 <unknown>\nE       #7 0x56478fcba0b2 <unknown>\nE       #8 0x56478fc83b49 <unknown>\nE       #9 0x56478fcba4ce <unknown>\nE       #10 0x56478fcd9006 <unknown>\nE       #11 0x56478fcb9e53 <unknown>\nE       #12 0x56478fc81dd4 <unknown>\nE       #13 0x56478fc831de <unknown>\nE       #14 0x56478ff4c531 <unknown>\nE       #15 0x56478ff50455 <unknown>\nE       #16 0x56478ff38f55 <unknown>\nE       #17 0x56478ff510ef <unknown>\nE       #18 0x56478ff1c99f <unknown>\nE       #19 0x56478ff75008 <unknown>\nE       #20 0x56478ff751d7 <unknown>\nE       #21 0x56478ff87124 <unknown>\nE       #22 0x7faa9b31c044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1705543400809,"stop":1705543400841,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1705543400914,"stop":1705543400940,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1705543401982,"stop":1705543402023,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"843c331a011c4c08","name":"Screenshot","source":"843c331a011c4c08.png","type":"image/png","size":153123},{"uid":"846d33fb193221c","name":"HTML source","source":"846d33fb193221c.html","type":"text/html","size":910542}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705543403275,"stop":1705543403275,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1705543403276,"stop":1705543403347,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"aea21bf909b0"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":164,"unknown":0,"total":171},"items":[{"uid":"325255558e34aebd","reportUrl":"https://Nat754.github.io/StroyremAutomation/189//#testresult/325255558e34aebd","status":"passed","time":{"start":1705457038947,"stop":1705457049931,"duration":10984}},{"uid":"8a36f9d3b2a01e40","reportUrl":"https://Nat754.github.io/StroyremAutomation/188//#testresult/8a36f9d3b2a01e40","status":"passed","time":{"start":1705370630240,"stop":1705370639545,"duration":9305}},{"uid":"cb45a73860d273b1","reportUrl":"https://Nat754.github.io/StroyremAutomation/187//#testresult/cb45a73860d273b1","status":"passed","time":{"start":1705280803379,"stop":1705280813225,"duration":9846}},{"uid":"bdf23a490b0a7887","reportUrl":"https://Nat754.github.io/StroyremAutomation/186//#testresult/bdf23a490b0a7887","status":"passed","time":{"start":1705194607512,"stop":1705194617824,"duration":10312}},{"uid":"3e0dc811bef9ca8e","reportUrl":"https://Nat754.github.io/StroyremAutomation/185//#testresult/3e0dc811bef9ca8e","status":"passed","time":{"start":1705107896762,"stop":1705107907119,"duration":10357}},{"uid":"edf20818a4a9826a","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/edf20818a4a9826a","status":"passed","time":{"start":1705021432934,"stop":1705021442717,"duration":9783}},{"uid":"4a5db89a1f6b59d3","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/4a5db89a1f6b59d3","status":"passed","time":{"start":1704935126743,"stop":1704935137063,"duration":10320}},{"uid":"bc2392f40c5cb469","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/bc2392f40c5cb469","status":"passed","time":{"start":1704848735878,"stop":1704848746227,"duration":10349}},{"uid":"69dde91f4b478e86","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/69dde91f4b478e86","status":"passed","time":{"start":1704762149988,"stop":1704762159424,"duration":9436}},{"uid":"ca9c2c2e3d677971","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/ca9c2c2e3d677971","status":"passed","time":{"start":1704675780910,"stop":1704675790544,"duration":9634}},{"uid":"ed2e8baa782e40cc","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/ed2e8baa782e40cc","status":"passed","time":{"start":1704589728807,"stop":1704589738877,"duration":10070}},{"uid":"b488ba95730c4eaa","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/b488ba95730c4eaa","status":"passed","time":{"start":1704502981684,"stop":1704502992220,"duration":10536}},{"uid":"64b465af0c040884","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/64b465af0c040884","status":"passed","time":{"start":1704416506863,"stop":1704416516458,"duration":9595}},{"uid":"21c1b6e7839e803","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/21c1b6e7839e803","status":"passed","time":{"start":1704330103322,"stop":1704330112778,"duration":9456}},{"uid":"2d3421c92e8132d1","reportUrl":"https://Nat754.github.io/StroyremAutomation/175//#testresult/2d3421c92e8132d1","status":"passed","time":{"start":1704243748357,"stop":1704243758215,"duration":9858}},{"uid":"973a8ae6a48eea0a","reportUrl":"https://Nat754.github.io/StroyremAutomation/174//#testresult/973a8ae6a48eea0a","status":"passed","time":{"start":1704157187203,"stop":1704157196592,"duration":9389}},{"uid":"b8085f3f758d5f38","reportUrl":"https://Nat754.github.io/StroyremAutomation/173//#testresult/b8085f3f758d5f38","status":"passed","time":{"start":1704071141285,"stop":1704071150674,"duration":9389}},{"uid":"6d306b3d4f60b329","reportUrl":"https://Nat754.github.io/StroyremAutomation/172//#testresult/6d306b3d4f60b329","status":"passed","time":{"start":1703984662502,"stop":1703984671856,"duration":9354}},{"uid":"6c1d2bdcb1c384c2","reportUrl":"https://Nat754.github.io/StroyremAutomation/171//#testresult/6c1d2bdcb1c384c2","status":"passed","time":{"start":1703897933787,"stop":1703897943168,"duration":9381}},{"uid":"45e63739b5f5a412","reportUrl":"https://Nat754.github.io/StroyremAutomation/170//#testresult/45e63739b5f5a412","status":"passed","time":{"start":1703811241630,"stop":1703811252471,"duration":10841}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"80a78b3587daa0cf.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}