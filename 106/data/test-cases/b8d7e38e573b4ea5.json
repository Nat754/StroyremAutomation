{"uid":"b8d7e38e573b4ea5","name":"TC 012 - Проверка функциональности ссылки 'Местоположение'","fullName":"tests.main.test_main_page.TestMainPage#test_positive_footer_location_smoke","historyId":"30b7c94be63d0e6d5ca725d0db54179a","time":{"start":1698281896093,"stop":1698281896144,"duration":51},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55c7d64b7fb3 <unknown>\n#1 0x55c7d618b2f6 <unknown>\n#2 0x55c7d61d3f26 <unknown>\n#3 0x55c7d61c8d59 <unknown>\n#4 0x55c7d61f4942 <unknown>\n#5 0x55c7d61c8776 <unknown>\n#6 0x55c7d61f4b0e <unknown>\n#7 0x55c7d620dc02 <unknown>\n#8 0x55c7d61f4713 <unknown>\n#9 0x55c7d61c718b <unknown>\n#10 0x55c7d61c7f7e <unknown>\n#11 0x55c7d647d8d8 <unknown>\n#12 0x55c7d6481800 <unknown>\n#13 0x55c7d648bcfc <unknown>\n#14 0x55c7d6482418 <unknown>\n#15 0x55c7d644f42f <unknown>\n#16 0x55c7d64a64e8 <unknown>\n#17 0x55c7d64a66b4 <unknown>\n#18 0x55c7d64b7143 <unknown>\n#19 0x7fa5afca7044 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7fb248434390>\nmain_page = <pages.main_page.MainPage object at 0x7fb24803c510>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 012 - Проверка функциональности ссылки 'Местоположение'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_location_smoke(self, main_page):\n        location_page = LocationPage(main_page.driver)\n>       main_page.check_location_link()\n\ntests/main/test_main_page.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:148: in check_location_link\n    self.driver.find_element(*self._location).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb24846c310>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55c7d64a66b4 \\\\u003Cunknown>\\\\n#18 0x55c7d64b7143 \\\\u003Cunknown>\\\\n#19 0x7fa5afca7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x55c7d64b7fb3 <unknown>\nE       #1 0x55c7d618b2f6 <unknown>\nE       #2 0x55c7d61d3f26 <unknown>\nE       #3 0x55c7d61c8d59 <unknown>\nE       #4 0x55c7d61f4942 <unknown>\nE       #5 0x55c7d61c8776 <unknown>\nE       #6 0x55c7d61f4b0e <unknown>\nE       #7 0x55c7d620dc02 <unknown>\nE       #8 0x55c7d61f4713 <unknown>\nE       #9 0x55c7d61c718b <unknown>\nE       #10 0x55c7d61c7f7e <unknown>\nE       #11 0x55c7d647d8d8 <unknown>\nE       #12 0x55c7d6481800 <unknown>\nE       #13 0x55c7d648bcfc <unknown>\nE       #14 0x55c7d6482418 <unknown>\nE       #15 0x55c7d644f42f <unknown>\nE       #16 0x55c7d64a64e8 <unknown>\nE       #17 0x55c7d64a66b4 <unknown>\nE       #18 0x55c7d64b7143 <unknown>\nE       #19 0x7fa5afca7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1698281206912,"stop":1698281207009,"duration":97},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1698281207009,"stop":1698281207009,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1698281888156,"stop":1698281889032,"duration":876},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1698281889032,"stop":1698281889032,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"main_page","time":{"start":1698281889033,"stop":1698281896093,"duration":7060},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1698282035322,"stop":1698282035323,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55c7d64b7fb3 <unknown>\n#1 0x55c7d618b2f6 <unknown>\n#2 0x55c7d61d3f26 <unknown>\n#3 0x55c7d61c8d59 <unknown>\n#4 0x55c7d61f4942 <unknown>\n#5 0x55c7d61c8776 <unknown>\n#6 0x55c7d61f4b0e <unknown>\n#7 0x55c7d620dc02 <unknown>\n#8 0x55c7d61f4713 <unknown>\n#9 0x55c7d61c718b <unknown>\n#10 0x55c7d61c7f7e <unknown>\n#11 0x55c7d647d8d8 <unknown>\n#12 0x55c7d6481800 <unknown>\n#13 0x55c7d648bcfc <unknown>\n#14 0x55c7d6482418 <unknown>\n#15 0x55c7d644f42f <unknown>\n#16 0x55c7d64a64e8 <unknown>\n#17 0x55c7d64a66b4 <unknown>\n#18 0x55c7d64b7143 <unknown>\n#19 0x7fa5afca7044 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7fb248434390>\nmain_page = <pages.main_page.MainPage object at 0x7fb24803c510>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 012 - Проверка функциональности ссылки 'Местоположение'\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_location_smoke(self, main_page):\n        location_page = LocationPage(main_page.driver)\n>       main_page.check_location_link()\n\ntests/main/test_main_page.py:110: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:148: in check_location_link\n    self.driver.find_element(*self._location).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fb24846c310>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x55c7d64a66b4 \\\\u003Cunknown>\\\\n#18 0x55c7d64b7143 \\\\u003Cunknown>\\\\n#19 0x7fa5afca7044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=118.0.5993.70)\nE       Stacktrace:\nE       #0 0x55c7d64b7fb3 <unknown>\nE       #1 0x55c7d618b2f6 <unknown>\nE       #2 0x55c7d61d3f26 <unknown>\nE       #3 0x55c7d61c8d59 <unknown>\nE       #4 0x55c7d61f4942 <unknown>\nE       #5 0x55c7d61c8776 <unknown>\nE       #6 0x55c7d61f4b0e <unknown>\nE       #7 0x55c7d620dc02 <unknown>\nE       #8 0x55c7d61f4713 <unknown>\nE       #9 0x55c7d61c718b <unknown>\nE       #10 0x55c7d61c7f7e <unknown>\nE       #11 0x55c7d647d8d8 <unknown>\nE       #12 0x55c7d6481800 <unknown>\nE       #13 0x55c7d648bcfc <unknown>\nE       #14 0x55c7d6482418 <unknown>\nE       #15 0x55c7d644f42f <unknown>\nE       #16 0x55c7d64a64e8 <unknown>\nE       #17 0x55c7d64a66b4 <unknown>\nE       #18 0x55c7d64b7143 <unknown>\nE       #19 0x7fa5afca7044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Местоположение'","time":{"start":1698281896093,"stop":1698281896143,"duration":50},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x55c7d64b7fb3 <unknown>\n#1 0x55c7d618b2f6 <unknown>\n#2 0x55c7d61d3f26 <unknown>\n#3 0x55c7d61c8d59 <unknown>\n#4 0x55c7d61f4942 <unknown>\n#5 0x55c7d61c8776 <unknown>\n#6 0x55c7d61f4b0e <unknown>\n#7 0x55c7d620dc02 <unknown>\n#8 0x55c7d61f4713 <unknown>\n#9 0x55c7d61c718b <unknown>\n#10 0x55c7d61c7f7e <unknown>\n#11 0x55c7d647d8d8 <unknown>\n#12 0x55c7d6481800 <unknown>\n#13 0x55c7d648bcfc <unknown>\n#14 0x55c7d6482418 <unknown>\n#15 0x55c7d644f42f <unknown>\n#16 0x55c7d64a64e8 <unknown>\n#17 0x55c7d64a66b4 <unknown>\n#18 0x55c7d64b7143 <unknown>\n#19 0x7fa5afca7044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 148, in check_location_link\n    self.driver.find_element(*self._location).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[{"uid":"edb174594252445f","name":"Screenshot","source":"edb174594252445f.png","type":"image/png","size":218748},{"uid":"673e5786d80d277","name":"HTML source","source":"673e5786d80d277.html","type":"text/html","size":392931}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1698281896393,"stop":1698281896393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1698281896394,"stop":1698281896461,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup::0","time":{"start":1698282050986,"stop":1698282050986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Footer functionality"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.main"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"330ab4ff7306"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.main.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":21,"unknown":0,"total":25},"items":[{"uid":"5b8e2e0e06856a4f","reportUrl":"https://Nat754.github.io/StroyremAutomation/105//#testresult/5b8e2e0e06856a4f","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x561113b58fb3 <unknown>\n#1 0x56111382c2f6 <unknown>\n#2 0x561113874f26 <unknown>\n#3 0x561113869d59 <unknown>\n#4 0x561113895942 <unknown>\n#5 0x561113869776 <unknown>\n#6 0x561113895b0e <unknown>\n#7 0x5611138aec02 <unknown>\n#8 0x561113895713 <unknown>\n#9 0x56111386818b <unknown>\n#10 0x561113868f7e <unknown>\n#11 0x561113b1e8d8 <unknown>\n#12 0x561113b22800 <unknown>\n#13 0x561113b2ccfc <unknown>\n#14 0x561113b23418 <unknown>\n#15 0x561113af042f <unknown>\n#16 0x561113b474e8 <unknown>\n#17 0x561113b476b4 <unknown>\n#18 0x561113b58143 <unknown>\n#19 0x7fde60492044 <unknown>","time":{"start":1698195486264,"stop":1698195486318,"duration":54}},{"uid":"d7817efb23bb06e7","reportUrl":"https://Nat754.github.io/StroyremAutomation/104//#testresult/d7817efb23bb06e7","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x558714df6fb3 <unknown>\n#1 0x558714aca2f6 <unknown>\n#2 0x558714b12f26 <unknown>\n#3 0x558714b07d59 <unknown>\n#4 0x558714b33942 <unknown>\n#5 0x558714b07776 <unknown>\n#6 0x558714b33b0e <unknown>\n#7 0x558714b4cc02 <unknown>\n#8 0x558714b33713 <unknown>\n#9 0x558714b0618b <unknown>\n#10 0x558714b06f7e <unknown>\n#11 0x558714dbc8d8 <unknown>\n#12 0x558714dc0800 <unknown>\n#13 0x558714dcacfc <unknown>\n#14 0x558714dc1418 <unknown>\n#15 0x558714d8e42f <unknown>\n#16 0x558714de54e8 <unknown>\n#17 0x558714de56b4 <unknown>\n#18 0x558714df6143 <unknown>\n#19 0x7f3168d07044 <unknown>","time":{"start":1698109165486,"stop":1698109165527,"duration":41}},{"uid":"1a82b67ff129b738","reportUrl":"https://Nat754.github.io/StroyremAutomation/103//#testresult/1a82b67ff129b738","status":"broken","statusDetails":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=118.0.5993.70)\nStacktrace:\n#0 0x5562ff7d4fb3 <unknown>\n#1 0x5562ff4a82f6 <unknown>\n#2 0x5562ff4f0f26 <unknown>\n#3 0x5562ff4e5d59 <unknown>\n#4 0x5562ff511942 <unknown>\n#5 0x5562ff4e5776 <unknown>\n#6 0x5562ff511b0e <unknown>\n#7 0x5562ff52ac02 <unknown>\n#8 0x5562ff511713 <unknown>\n#9 0x5562ff4e418b <unknown>\n#10 0x5562ff4e4f7e <unknown>\n#11 0x5562ff79a8d8 <unknown>\n#12 0x5562ff79e800 <unknown>\n#13 0x5562ff7a8cfc <unknown>\n#14 0x5562ff79f418 <unknown>\n#15 0x5562ff76c42f <unknown>\n#16 0x5562ff7c34e8 <unknown>\n#17 0x5562ff7c36b4 <unknown>\n#18 0x5562ff7d4143 <unknown>\n#19 0x7f7221af7044 <unknown>","time":{"start":1698022919197,"stop":1698022919240,"duration":43}},{"uid":"487a245f62fdcce3","reportUrl":"https://Nat754.github.io/StroyremAutomation/102//#testresult/487a245f62fdcce3","status":"passed","time":{"start":1697936503931,"stop":1697936507266,"duration":3335}},{"uid":"ce5111285f7af86b","reportUrl":"https://Nat754.github.io/StroyremAutomation/101//#testresult/ce5111285f7af86b","status":"passed","time":{"start":1697849970904,"stop":1697849976083,"duration":5179}},{"uid":"f9110a6dc07a481a","reportUrl":"https://Nat754.github.io/StroyremAutomation/100//#testresult/f9110a6dc07a481a","status":"passed","time":{"start":1697763530175,"stop":1697763532402,"duration":2227}},{"uid":"3e0a04a00d46d500","reportUrl":"https://Nat754.github.io/StroyremAutomation/99//#testresult/3e0a04a00d46d500","status":"passed","time":{"start":1697677118968,"stop":1697677121033,"duration":2065}},{"uid":"9cf8d2abdf7721d0","reportUrl":"https://Nat754.github.io/StroyremAutomation/98//#testresult/9cf8d2abdf7721d0","status":"passed","time":{"start":1697590727655,"stop":1697590731139,"duration":3484}},{"uid":"8156a26aa795d612","reportUrl":"https://Nat754.github.io/StroyremAutomation/97//#testresult/8156a26aa795d612","status":"passed","time":{"start":1697504421702,"stop":1697504424207,"duration":2505}},{"uid":"b6b317dcb313138a","reportUrl":"https://Nat754.github.io/StroyremAutomation/96//#testresult/b6b317dcb313138a","status":"passed","time":{"start":1697418062689,"stop":1697418067259,"duration":4570}},{"uid":"4a625f0a489771ef","reportUrl":"https://Nat754.github.io/StroyremAutomation/95//#testresult/4a625f0a489771ef","status":"passed","time":{"start":1697331760633,"stop":1697331765859,"duration":5226}},{"uid":"26ec977fd199bba","reportUrl":"https://Nat754.github.io/StroyremAutomation/94//#testresult/26ec977fd199bba","status":"passed","time":{"start":1697245366543,"stop":1697245370614,"duration":4071}},{"uid":"e6687a2aeb7e7d4b","reportUrl":"https://Nat754.github.io/StroyremAutomation/93//#testresult/e6687a2aeb7e7d4b","status":"passed","time":{"start":1697158832353,"stop":1697158835624,"duration":3271}},{"uid":"7b550e3b2f677ab3","reportUrl":"https://Nat754.github.io/StroyremAutomation/92//#testresult/7b550e3b2f677ab3","status":"passed","time":{"start":1697072244157,"stop":1697072247423,"duration":3266}},{"uid":"f446f33057ce4bef","reportUrl":"https://Nat754.github.io/StroyremAutomation/91//#testresult/f446f33057ce4bef","status":"passed","time":{"start":1696985878370,"stop":1696985881845,"duration":3475}},{"uid":"d7500e366a3cae85","reportUrl":"https://Nat754.github.io/StroyremAutomation/90//#testresult/d7500e366a3cae85","status":"passed","time":{"start":1696899419558,"stop":1696899423799,"duration":4241}},{"uid":"9f54707a8ddf679b","reportUrl":"https://Nat754.github.io/StroyremAutomation/89//#testresult/9f54707a8ddf679b","status":"passed","time":{"start":1696812999605,"stop":1696813003071,"duration":3466}},{"uid":"78102ba1b7731e40","reportUrl":"https://Nat754.github.io/StroyremAutomation/88//#testresult/78102ba1b7731e40","status":"passed","time":{"start":1696727022321,"stop":1696727027515,"duration":5194}},{"uid":"ee407d7a0a2e8b23","reportUrl":"https://Nat754.github.io/StroyremAutomation/87//#testresult/ee407d7a0a2e8b23","status":"passed","time":{"start":1696640157945,"stop":1696640161556,"duration":3611}},{"uid":"b5853e2a4fed6946","reportUrl":"https://Nat754.github.io/StroyremAutomation/86//#testresult/b5853e2a4fed6946","status":"passed","time":{"start":1696553795427,"stop":1696553798845,"duration":3418}}]},"tags":["smoke_test"]},"source":"b8d7e38e573b4ea5.json","parameterValues":["'https://stroyrem-nn.ru/'"]}