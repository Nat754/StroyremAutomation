{"uid":"de6f801b8911c7f7","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke","historyId":"efd25b243308c430f9522a855290012b","time":{"start":1724807400649,"stop":1724807402931,"duration":2282},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x563e1865181a <unknown>\n#1 0x563e1831fe50 <unknown>\n#2 0x563e18376346 <unknown>\n#3 0x563e1837425d <unknown>\n#4 0x563e18371cf7 <unknown>\n#5 0x563e18370b9c <unknown>\n#6 0x563e183644d6 <unknown>\n#7 0x563e18394492 <unknown>\n#8 0x563e18363e89 <unknown>\n#9 0x563e1839465e <unknown>\n#10 0x563e183b29c6 <unknown>\n#11 0x563e18394233 <unknown>\n#12 0x563e18362093 <unknown>\n#13 0x563e1836309e <unknown>\n#14 0x563e18618a7b <unknown>\n#15 0x563e1861ca31 <unknown>\n#16 0x563e18604645 <unknown>\n#17 0x563e1861d5a2 <unknown>\n#18 0x563e185e981f <unknown>\n#19 0x563e18640618 <unknown>\n#20 0x563e186407e2 <unknown>\n#21 0x563e1865060c <unknown>\n#22 0x7f9367d73134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f614343ca50>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f61429af850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f61429f53d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563e186407e2 \\\\u003Cunknown>\\\\n#21 0x563e1865060c \\\\u003Cunknown>\\\\n#22 0x7f9367d73134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome=128.0.6613.84)\nE       Stacktrace:\nE       #0 0x563e1865181a <unknown>\nE       #1 0x563e1831fe50 <unknown>\nE       #2 0x563e18376346 <unknown>\nE       #3 0x563e1837425d <unknown>\nE       #4 0x563e18371cf7 <unknown>\nE       #5 0x563e18370b9c <unknown>\nE       #6 0x563e183644d6 <unknown>\nE       #7 0x563e18394492 <unknown>\nE       #8 0x563e18363e89 <unknown>\nE       #9 0x563e1839465e <unknown>\nE       #10 0x563e183b29c6 <unknown>\nE       #11 0x563e18394233 <unknown>\nE       #12 0x563e18362093 <unknown>\nE       #13 0x563e1836309e <unknown>\nE       #14 0x563e18618a7b <unknown>\nE       #15 0x563e1861ca31 <unknown>\nE       #16 0x563e18604645 <unknown>\nE       #17 0x563e1861d5a2 <unknown>\nE       #18 0x563e185e981f <unknown>\nE       #19 0x563e18640618 <unknown>\nE       #20 0x563e186407e2 <unknown>\nE       #21 0x563e1865060c <unknown>\nE       #22 0x7f9367d73134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1724806737658,"stop":1724806737730,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1724806737730,"stop":1724806737730,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1724807393371,"stop":1724807394182,"duration":811},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1724807394183,"stop":1724807400648,"duration":6465},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1724807394183,"stop":1724807394183,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome=128.0.6613.84)\nStacktrace:\n#0 0x563e1865181a <unknown>\n#1 0x563e1831fe50 <unknown>\n#2 0x563e18376346 <unknown>\n#3 0x563e1837425d <unknown>\n#4 0x563e18371cf7 <unknown>\n#5 0x563e18370b9c <unknown>\n#6 0x563e183644d6 <unknown>\n#7 0x563e18394492 <unknown>\n#8 0x563e18363e89 <unknown>\n#9 0x563e1839465e <unknown>\n#10 0x563e183b29c6 <unknown>\n#11 0x563e18394233 <unknown>\n#12 0x563e18362093 <unknown>\n#13 0x563e1836309e <unknown>\n#14 0x563e18618a7b <unknown>\n#15 0x563e1861ca31 <unknown>\n#16 0x563e18604645 <unknown>\n#17 0x563e1861d5a2 <unknown>\n#18 0x563e185e981f <unknown>\n#19 0x563e18640618 <unknown>\n#20 0x563e186407e2 <unknown>\n#21 0x563e1865060c <unknown>\n#22 0x7f9367d73134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f614343ca50>\nlink = 'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f61429af850>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_0-49rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHURUPY_PO_DEREVU_PAGE_URL}?price_first=0&price_last=49\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_0_49rub_smoke(self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(0)\n        product_page_open.get_field_price_last().send_keys(49)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f61429f53d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563e186407e2 \\\\u003Cunknown>\\\\n#21 0x563e1865060c \\\\u003Cunknown>\\\\n#22 0x7f9367d73134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome=128.0.6613.84)\nE       Stacktrace:\nE       #0 0x563e1865181a <unknown>\nE       #1 0x563e1831fe50 <unknown>\nE       #2 0x563e18376346 <unknown>\nE       #3 0x563e1837425d <unknown>\nE       #4 0x563e18371cf7 <unknown>\nE       #5 0x563e18370b9c <unknown>\nE       #6 0x563e183644d6 <unknown>\nE       #7 0x563e18394492 <unknown>\nE       #8 0x563e18363e89 <unknown>\nE       #9 0x563e1839465e <unknown>\nE       #10 0x563e183b29c6 <unknown>\nE       #11 0x563e18394233 <unknown>\nE       #12 0x563e18362093 <unknown>\nE       #13 0x563e1836309e <unknown>\nE       #14 0x563e18618a7b <unknown>\nE       #15 0x563e1861ca31 <unknown>\nE       #16 0x563e18604645 <unknown>\nE       #17 0x563e1861d5a2 <unknown>\nE       #18 0x563e185e981f <unknown>\nE       #19 0x563e18640618 <unknown>\nE       #20 0x563e186407e2 <unknown>\nE       #21 0x563e1865060c <unknown>\nE       #22 0x7f9367d73134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1724807400649,"stop":1724807400687,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1724807400751,"stop":1724807400783,"duration":32},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1724807401825,"stop":1724807401867,"duration":42},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7314638e765fe02d","name":"Screenshot","source":"7314638e765fe02d.png","type":"image/png","size":55567},{"uid":"927112b5b0af61fb","name":"HTML source","source":"927112b5b0af61fb.html","type":"text/html","size":946222}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1724807403089,"stop":1724807403168,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1724807403089,"stop":1724807403089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"5817ca615996"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":23,"skipped":0,"passed":67,"unknown":0,"total":90},"items":[{"uid":"a68a74f72b64439","reportUrl":"https://Nat754.github.io/StroyremAutomation/412//#testresult/a68a74f72b64439","status":"passed","time":{"start":1724720969497,"stop":1724720979277,"duration":9780}},{"uid":"19485569f91139e8","reportUrl":"https://Nat754.github.io/StroyremAutomation/411//#testresult/19485569f91139e8","status":"passed","time":{"start":1724634588606,"stop":1724634598479,"duration":9873}},{"uid":"d3d15c0b3a4a85c8","reportUrl":"https://Nat754.github.io/StroyremAutomation/410//#testresult/d3d15c0b3a4a85c8","status":"passed","time":{"start":1724548479261,"stop":1724548488892,"duration":9631}},{"uid":"a91217b8bceb429f","reportUrl":"https://Nat754.github.io/StroyremAutomation/409//#testresult/a91217b8bceb429f","status":"passed","time":{"start":1724461718925,"stop":1724461729659,"duration":10734}},{"uid":"c941fa8e852f67e","reportUrl":"https://Nat754.github.io/StroyremAutomation/407//#testresult/c941fa8e852f67e","status":"passed","time":{"start":1724289044556,"stop":1724289055991,"duration":11435}},{"uid":"dadf176230153332","reportUrl":"https://Nat754.github.io/StroyremAutomation/406//#testresult/dadf176230153332","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55dedd7036ca <unknown>\n#1 0x55dedd3d4600 <unknown>\n#2 0x55dedd3da48f <unknown>\n#3 0x55dedd3dc0b5 <unknown>\n#4 0x55dedd3dc13c <unknown>\n#5 0x55dedd42a7fc <unknown>\n#6 0x55dedd4287f6 <unknown>\n#7 0x55dedd426277 <unknown>\n#8 0x55dedd42511c <unknown>\n#9 0x55dedd418be6 <unknown>\n#10 0x55dedd4468a2 <unknown>\n#11 0x55dedd418599 <unknown>\n#12 0x55dedd446a6e <unknown>\n#13 0x55dedd46504a <unknown>\n#14 0x55dedd446643 <unknown>\n#15 0x55dedd416d31 <unknown>\n#16 0x55dedd41779e <unknown>\n#17 0x55dedd6cb25b <unknown>\n#18 0x55dedd6cf1f2 <unknown>\n#19 0x55dedd6b8615 <unknown>\n#20 0x55dedd6cfd82 <unknown>\n#21 0x55dedd69d25f <unknown>\n#22 0x55dedd6f2e68 <unknown>\n#23 0x55dedd6f3040 <unknown>\n#24 0x55dedd70249c <unknown>\n#25 0x7efca6cc2134 <unknown>","time":{"start":1724202674450,"stop":1724202678838,"duration":4388}},{"uid":"1702815a9032672d","reportUrl":"https://Nat754.github.io/StroyremAutomation/405//#testresult/1702815a9032672d","status":"passed","time":{"start":1724116328253,"stop":1724116340006,"duration":11753}},{"uid":"a85804e79dc754a1","reportUrl":"https://Nat754.github.io/StroyremAutomation/404//#testresult/a85804e79dc754a1","status":"passed","time":{"start":1724029717319,"stop":1724029726608,"duration":9289}},{"uid":"6fd30f86339047c3","reportUrl":"https://Nat754.github.io/StroyremAutomation/403//#testresult/6fd30f86339047c3","status":"passed","time":{"start":1723943562588,"stop":1723943571978,"duration":9390}},{"uid":"43acf64ee17e788d","reportUrl":"https://Nat754.github.io/StroyremAutomation/402//#testresult/43acf64ee17e788d","status":"passed","time":{"start":1723856787454,"stop":1723856798103,"duration":10649}},{"uid":"9dda15b808d12dc7","reportUrl":"https://Nat754.github.io/StroyremAutomation/401//#testresult/9dda15b808d12dc7","status":"passed","time":{"start":1723770509148,"stop":1723770519307,"duration":10159}},{"uid":"3c928efc5945a245","reportUrl":"https://Nat754.github.io/StroyremAutomation/400//#testresult/3c928efc5945a245","status":"passed","time":{"start":1723684001683,"stop":1723684011285,"duration":9602}},{"uid":"37c0f1d554a22ab1","reportUrl":"https://Nat754.github.io/StroyremAutomation/399//#testresult/37c0f1d554a22ab1","status":"passed","time":{"start":1723597711487,"stop":1723597720894,"duration":9407}},{"uid":"c1062d0fbfc2b483","reportUrl":"https://Nat754.github.io/StroyremAutomation/398//#testresult/c1062d0fbfc2b483","status":"broken","statusDetails":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.99); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x56443e6926aa <unknown>\n#1 0x56443e363600 <unknown>\n#2 0x56443e36948f <unknown>\n#3 0x56443e36b0b5 <unknown>\n#4 0x56443e36b13c <unknown>\n#5 0x56443e3b97fc <unknown>\n#6 0x56443e3b77f6 <unknown>\n#7 0x56443e3b5277 <unknown>\n#8 0x56443e3b411c <unknown>\n#9 0x56443e3a7be6 <unknown>\n#10 0x56443e3d58a2 <unknown>\n#11 0x56443e3a7599 <unknown>\n#12 0x56443e3d5a6e <unknown>\n#13 0x56443e3f404a <unknown>\n#14 0x56443e3d5643 <unknown>\n#15 0x56443e3a5d31 <unknown>\n#16 0x56443e3a679e <unknown>\n#17 0x56443e65a23b <unknown>\n#18 0x56443e65e1d2 <unknown>\n#19 0x56443e6475f5 <unknown>\n#20 0x56443e65ed62 <unknown>\n#21 0x56443e62c23f <unknown>\n#22 0x56443e681e48 <unknown>\n#23 0x56443e682020 <unknown>\n#24 0x56443e69147c <unknown>\n#25 0x7f30106de134 <unknown>","time":{"start":1723511527352,"stop":1723511531884,"duration":4532}},{"uid":"9c4d1b59c63d4594","reportUrl":"https://Nat754.github.io/StroyremAutomation/397//#testresult/9c4d1b59c63d4594","status":"passed","time":{"start":1723425050926,"stop":1723425060309,"duration":9383}},{"uid":"2e443a423a88694f","reportUrl":"https://Nat754.github.io/StroyremAutomation/396//#testresult/2e443a423a88694f","status":"passed","time":{"start":1723338955092,"stop":1723338965289,"duration":10197}},{"uid":"5f180c35e64594e1","reportUrl":"https://Nat754.github.io/StroyremAutomation/395//#testresult/5f180c35e64594e1","status":"passed","time":{"start":1723252064252,"stop":1723252073595,"duration":9343}},{"uid":"41e702509b71cae","reportUrl":"https://Nat754.github.io/StroyremAutomation/394//#testresult/41e702509b71cae","status":"passed","time":{"start":1723165721266,"stop":1723165730676,"duration":9410}},{"uid":"756693861663d24a","reportUrl":"https://Nat754.github.io/StroyremAutomation/393//#testresult/756693861663d24a","status":"passed","time":{"start":1723079301827,"stop":1723079312283,"duration":10456}},{"uid":"367b6548ba0a4390","reportUrl":"https://Nat754.github.io/StroyremAutomation/392//#testresult/367b6548ba0a4390","status":"passed","time":{"start":1722992982284,"stop":1722992991983,"duration":9699}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"de6f801b8911c7f7.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shurupy-po-derevu?price_first=0&price_last=49'"]}