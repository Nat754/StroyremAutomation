{"uid":"41b24aa6d5069294","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.main.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"bbc89feb303b1807835770c04ab6aedf","time":{"start":1717117355030,"stop":1717117355060,"duration":30},"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x564004a4ee3a <unknown>\n#1 0x5640047382a1 <unknown>\n#2 0x56400478570f <unknown>\n#3 0x5640047790ff <unknown>\n#4 0x5640047a74b2 <unknown>\n#5 0x564004778a79 <unknown>\n#6 0x5640047a767e <unknown>\n#7 0x5640047c62cc <unknown>\n#8 0x5640047a7253 <unknown>\n#9 0x5640047771c7 <unknown>\n#10 0x564004777b3e <unknown>\n#11 0x564004a1527b <unknown>\n#12 0x564004a19327 <unknown>\n#13 0x564004a01dae <unknown>\n#14 0x564004a19df2 <unknown>\n#15 0x5640049e674f <unknown>\n#16 0x564004a3e128 <unknown>\n#17 0x564004a3e2fb <unknown>\n#18 0x564004a4df6c <unknown>\n#19 0x7f1313018134 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7fde52818ad0>\nmain_page = <pages.main_page.MainPage object at 0x7fde51e45350>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail  # \"Сломалось?\"\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/main/test_main_page.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:104: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fde52206a10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x564004a3e2fb \\\\u003Cunknown>\\\\n#18 0x564004a4df6c \\\\u003Cunknown>\\\\n#19 0x7f1313018134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x564004a4ee3a <unknown>\nE       #1 0x5640047382a1 <unknown>\nE       #2 0x56400478570f <unknown>\nE       #3 0x5640047790ff <unknown>\nE       #4 0x5640047a74b2 <unknown>\nE       #5 0x564004778a79 <unknown>\nE       #6 0x5640047a767e <unknown>\nE       #7 0x5640047c62cc <unknown>\nE       #8 0x5640047a7253 <unknown>\nE       #9 0x5640047771c7 <unknown>\nE       #10 0x564004777b3e <unknown>\nE       #11 0x564004a1527b <unknown>\nE       #12 0x564004a19327 <unknown>\nE       #13 0x564004a01dae <unknown>\nE       #14 0x564004a19df2 <unknown>\nE       #15 0x5640049e674f <unknown>\nE       #16 0x564004a3e128 <unknown>\nE       #17 0x564004a3e2fb <unknown>\nE       #18 0x564004a4df6c <unknown>\nE       #19 0x7f1313018134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717116834579,"stop":1717116834656,"duration":77},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1717116834656,"stop":1717116834656,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1717117345071,"stop":1717117345757,"duration":686},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"main_page","time":{"start":1717117345757,"stop":1717117355029,"duration":9272},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1717117345757,"stop":1717117345757,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1717117680466,"stop":1717117680466,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x564004a4ee3a <unknown>\n#1 0x5640047382a1 <unknown>\n#2 0x56400478570f <unknown>\n#3 0x5640047790ff <unknown>\n#4 0x5640047a74b2 <unknown>\n#5 0x564004778a79 <unknown>\n#6 0x5640047a767e <unknown>\n#7 0x5640047c62cc <unknown>\n#8 0x5640047a7253 <unknown>\n#9 0x5640047771c7 <unknown>\n#10 0x564004777b3e <unknown>\n#11 0x564004a1527b <unknown>\n#12 0x564004a19327 <unknown>\n#13 0x564004a01dae <unknown>\n#14 0x564004a19df2 <unknown>\n#15 0x5640049e674f <unknown>\n#16 0x564004a3e128 <unknown>\n#17 0x564004a3e2fb <unknown>\n#18 0x564004a4df6c <unknown>\n#19 0x7f1313018134 <unknown>","statusTrace":"self = <tests.main.test_main_page.TestMainPage object at 0x7fde52818ad0>\nmain_page = <pages.main_page.MainPage object at 0x7fde51e45350>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail  # \"Сломалось?\"\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/main/test_main_page.py:61: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:104: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fde52206a10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x564004a3e2fb \\\\u003Cunknown>\\\\n#18 0x564004a4df6c \\\\u003Cunknown>\\\\n#19 0x7f1313018134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x564004a4ee3a <unknown>\nE       #1 0x5640047382a1 <unknown>\nE       #2 0x56400478570f <unknown>\nE       #3 0x5640047790ff <unknown>\nE       #4 0x5640047a74b2 <unknown>\nE       #5 0x564004778a79 <unknown>\nE       #6 0x5640047a767e <unknown>\nE       #7 0x5640047c62cc <unknown>\nE       #8 0x5640047a7253 <unknown>\nE       #9 0x5640047771c7 <unknown>\nE       #10 0x564004777b3e <unknown>\nE       #11 0x564004a1527b <unknown>\nE       #12 0x564004a19327 <unknown>\nE       #13 0x564004a01dae <unknown>\nE       #14 0x564004a19df2 <unknown>\nE       #15 0x5640049e674f <unknown>\nE       #16 0x564004a3e128 <unknown>\nE       #17 0x564004a3e2fb <unknown>\nE       #18 0x564004a4df6c <unknown>\nE       #19 0x7f1313018134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Обратный звонок'","time":{"start":1717117355030,"stop":1717117355059,"duration":29},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x564004a4ee3a <unknown>\n#1 0x5640047382a1 <unknown>\n#2 0x56400478570f <unknown>\n#3 0x5640047790ff <unknown>\n#4 0x5640047a74b2 <unknown>\n#5 0x564004778a79 <unknown>\n#6 0x5640047a767e <unknown>\n#7 0x5640047c62cc <unknown>\n#8 0x5640047a7253 <unknown>\n#9 0x5640047771c7 <unknown>\n#10 0x564004777b3e <unknown>\n#11 0x564004a1527b <unknown>\n#12 0x564004a19327 <unknown>\n#13 0x564004a01dae <unknown>\n#14 0x564004a19df2 <unknown>\n#15 0x5640049e674f <unknown>\n#16 0x564004a3e128 <unknown>\n#17 0x564004a3e2fb <unknown>\n#18 0x564004a4df6c <unknown>\n#19 0x7f1313018134 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 104, in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 345, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3ea9d098beff1cdb","name":"Screenshot","source":"3ea9d098beff1cdb.png","type":"image/png","size":255481},{"uid":"cbb0736bfe215b06","name":"HTML source","source":"cbb0736bfe215b06.html","type":"text/html","size":386358}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1717117355208,"stop":1717117355208,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1717117355208,"stop":1717117355279,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup::0","time":{"start":1717117693806,"stop":1717117693806,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"feature","value":"Footer functionality"},{"name":"epic","value":"Main Page"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail"},{"name":"parentSuite","value":"tests.main"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"373c34aee6e9"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.main.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://dev:123456@test2.stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"9c9ff6001ab121f5","reportUrl":"https://Nat754.github.io/StroyremAutomation/323//#testresult/9c9ff6001ab121f5","status":"skipped","statusDetails":"XFAIL\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome-headless-shell=125.0.6422.78)\nStacktrace:\n#0 0x55bab249de8a <unknown>\n#1 0x55bab21872a1 <unknown>\n#2 0x55bab21d470f <unknown>\n#3 0x55bab21c80ff <unknown>\n#4 0x55bab21f64b2 <unknown>\n#5 0x55bab21c7a79 <unknown>\n#6 0x55bab21f667e <unknown>\n#7 0x55bab22152cc <unknown>\n#8 0x55bab21f6253 <unknown>\n#9 0x55bab21c61c7 <unknown>\n#10 0x55bab21c6b3e <unknown>\n#11 0x55bab24642cb <unknown>\n#12 0x55bab2468377 <unknown>\n#13 0x55bab2450dfe <unknown>\n#14 0x55bab2468e42 <unknown>\n#15 0x55bab243579f <unknown>\n#16 0x55bab248d178 <unknown>\n#17 0x55bab248d34b <unknown>\n#18 0x55bab249cfbc <unknown>\n#19 0x7f123f720134 <unknown>","time":{"start":1717030791621,"stop":1717030791651,"duration":30}}]},"tags":["@pytest.mark.xfail","smoke_test"]},"source":"41b24aa6d5069294.json","parameterValues":["'https://dev:123456@test2.stroyrem-nn.ru/'"]}