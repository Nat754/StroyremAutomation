{"uid":"78fdf9f1dcfb102e","name":"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke","historyId":"dc4e879f02824a08e341b1bdc96aa5ba","time":{"start":1694199396919,"stop":1694199399348,"duration":2429},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f2c5f35e23 <unknown>\n#1 0x55f2c5c5e7a7 <unknown>\n#2 0x55f2c5ca2d22 <unknown>\n#3 0x55f2c5ca1267 <unknown>\n#4 0x55f2c5c9f1e8 <unknown>\n#5 0x55f2c5c9e32d <unknown>\n#6 0x55f2c5c93599 <unknown>\n#7 0x55f2c5cbe012 <unknown>\n#8 0x55f2c5c92fb6 <unknown>\n#9 0x55f2c5cbe1de <unknown>\n#10 0x55f2c5cd6369 <unknown>\n#11 0x55f2c5cbdde3 <unknown>\n#12 0x55f2c5c91a7b <unknown>\n#13 0x55f2c5c9281e <unknown>\n#14 0x55f2c5ef7638 <unknown>\n#15 0x55f2c5efb507 <unknown>\n#16 0x55f2c5f05c4c <unknown>\n#17 0x55f2c5efc136 <unknown>\n#18 0x55f2c5eca9cf <unknown>\n#19 0x55f2c5f1fb98 <unknown>\n#20 0x55f2c5f1fd68 <unknown>\n#21 0x55f2c5f2ecb3 <unknown>\n#22 0x7f40e8a38044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ffb7dfb6510>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ffb7d404b90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb7d362fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f2c5f1fd68 \\\\u003Cunknown>\\\\n#21 0x55f2c5f2ecb3 \\\\u003Cunknown>\\\\n#22 0x7f40e8a38044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55f2c5f35e23 <unknown>\nE       #1 0x55f2c5c5e7a7 <unknown>\nE       #2 0x55f2c5ca2d22 <unknown>\nE       #3 0x55f2c5ca1267 <unknown>\nE       #4 0x55f2c5c9f1e8 <unknown>\nE       #5 0x55f2c5c9e32d <unknown>\nE       #6 0x55f2c5c93599 <unknown>\nE       #7 0x55f2c5cbe012 <unknown>\nE       #8 0x55f2c5c92fb6 <unknown>\nE       #9 0x55f2c5cbe1de <unknown>\nE       #10 0x55f2c5cd6369 <unknown>\nE       #11 0x55f2c5cbdde3 <unknown>\nE       #12 0x55f2c5c91a7b <unknown>\nE       #13 0x55f2c5c9281e <unknown>\nE       #14 0x55f2c5ef7638 <unknown>\nE       #15 0x55f2c5efb507 <unknown>\nE       #16 0x55f2c5f05c4c <unknown>\nE       #17 0x55f2c5efc136 <unknown>\nE       #18 0x55f2c5eca9cf <unknown>\nE       #19 0x55f2c5f1fb98 <unknown>\nE       #20 0x55f2c5f1fd68 <unknown>\nE       #21 0x55f2c5f2ecb3 <unknown>\nE       #22 0x7f40e8a38044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1694198443391,"stop":1694198443489,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1694198443489,"stop":1694198443489,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1694199390338,"stop":1694199391186,"duration":848},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1694199391187,"stop":1694199391187,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"product_page_open","time":{"start":1694199391187,"stop":1694199396918,"duration":5731},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55f2c5f35e23 <unknown>\n#1 0x55f2c5c5e7a7 <unknown>\n#2 0x55f2c5ca2d22 <unknown>\n#3 0x55f2c5ca1267 <unknown>\n#4 0x55f2c5c9f1e8 <unknown>\n#5 0x55f2c5c9e32d <unknown>\n#6 0x55f2c5c93599 <unknown>\n#7 0x55f2c5cbe012 <unknown>\n#8 0x55f2c5c92fb6 <unknown>\n#9 0x55f2c5cbe1de <unknown>\n#10 0x55f2c5cd6369 <unknown>\n#11 0x55f2c5cbdde3 <unknown>\n#12 0x55f2c5c91a7b <unknown>\n#13 0x55f2c5c9281e <unknown>\n#14 0x55f2c5ef7638 <unknown>\n#15 0x55f2c5efb507 <unknown>\n#16 0x55f2c5f05c4c <unknown>\n#17 0x55f2c5efc136 <unknown>\n#18 0x55f2c5eca9cf <unknown>\n#19 0x55f2c5f1fb98 <unknown>\n#20 0x55f2c5f1fd68 <unknown>\n#21 0x55f2c5f2ecb3 <unknown>\n#22 0x7f40e8a38044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7ffb7dfb6510>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7ffb7d404b90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHLIFOVALNYE_MASHINY_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_7500_to_9999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:390: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7ffb7d362fd0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55f2c5f1fd68 \\\\u003Cunknown>\\\\n#21 0x55f2c5f2ecb3 \\\\u003Cunknown>\\\\n#22 0x7f40e8a38044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x55f2c5f35e23 <unknown>\nE       #1 0x55f2c5c5e7a7 <unknown>\nE       #2 0x55f2c5ca2d22 <unknown>\nE       #3 0x55f2c5ca1267 <unknown>\nE       #4 0x55f2c5c9f1e8 <unknown>\nE       #5 0x55f2c5c9e32d <unknown>\nE       #6 0x55f2c5c93599 <unknown>\nE       #7 0x55f2c5cbe012 <unknown>\nE       #8 0x55f2c5c92fb6 <unknown>\nE       #9 0x55f2c5cbe1de <unknown>\nE       #10 0x55f2c5cd6369 <unknown>\nE       #11 0x55f2c5cbdde3 <unknown>\nE       #12 0x55f2c5c91a7b <unknown>\nE       #13 0x55f2c5c9281e <unknown>\nE       #14 0x55f2c5ef7638 <unknown>\nE       #15 0x55f2c5efb507 <unknown>\nE       #16 0x55f2c5f05c4c <unknown>\nE       #17 0x55f2c5efc136 <unknown>\nE       #18 0x55f2c5eca9cf <unknown>\nE       #19 0x55f2c5f1fb98 <unknown>\nE       #20 0x55f2c5f1fd68 <unknown>\nE       #21 0x55f2c5f2ecb3 <unknown>\nE       #22 0x7f40e8a38044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1694199396919,"stop":1694199396976,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1694199397068,"stop":1694199397112,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1694199398192,"stop":1694199398266,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"attachments":[{"uid":"c38c177df2737f1e","name":"Screenshot","source":"c38c177df2737f1e.png","type":"image/png","size":79209},{"uid":"f10e03b5e21780c9","name":"HTML source","source":"f10e03b5e21780c9.html","type":"text/html","size":638429}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1694199399607,"stop":1694199399607,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1694199399607,"stop":1694199399674,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"c06e537eda55"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":7,"skipped":0,"passed":18,"unknown":0,"total":25},"items":[{"uid":"df4180c4014d3cd4","reportUrl":"https://Nat754.github.io/StroyremAutomation/4//#testresult/df4180c4014d3cd4","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55a103eb3e23 <unknown>\n#1 0x55a103bdc7a7 <unknown>\n#2 0x55a103c20d22 <unknown>\n#3 0x55a103c1f267 <unknown>\n#4 0x55a103c1d1e8 <unknown>\n#5 0x55a103c1c32d <unknown>\n#6 0x55a103c11599 <unknown>\n#7 0x55a103c3c012 <unknown>\n#8 0x55a103c10fb6 <unknown>\n#9 0x55a103c3c1de <unknown>\n#10 0x55a103c54369 <unknown>\n#11 0x55a103c3bde3 <unknown>\n#12 0x55a103c0fa7b <unknown>\n#13 0x55a103c1081e <unknown>\n#14 0x55a103e75638 <unknown>\n#15 0x55a103e79507 <unknown>\n#16 0x55a103e83c4c <unknown>\n#17 0x55a103e7a136 <unknown>\n#18 0x55a103e489cf <unknown>\n#19 0x55a103e9db98 <unknown>\n#20 0x55a103e9dd68 <unknown>\n#21 0x55a103eaccb3 <unknown>\n#22 0x7f435a2bb044 <unknown>","time":{"start":1694183886301,"stop":1694183888714,"duration":2413}},{"uid":"1d2c7e4b65665527","reportUrl":"https://Nat754.github.io/StroyremAutomation/52//#testresult/1d2c7e4b65665527","status":"passed","time":{"start":1694135308560,"stop":1694135318543,"duration":9983}},{"uid":"225906613ed8274a","reportUrl":"https://Nat754.github.io/StroyremAutomation/51//#testresult/225906613ed8274a","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x557af1ee1e23 <unknown>\n#1 0x557af1c0a7a7 <unknown>\n#2 0x557af1c4ed22 <unknown>\n#3 0x557af1c4d267 <unknown>\n#4 0x557af1c4b1e8 <unknown>\n#5 0x557af1c4a32d <unknown>\n#6 0x557af1c3f599 <unknown>\n#7 0x557af1c6a012 <unknown>\n#8 0x557af1c3efb6 <unknown>\n#9 0x557af1c6a1de <unknown>\n#10 0x557af1c82369 <unknown>\n#11 0x557af1c69de3 <unknown>\n#12 0x557af1c3da7b <unknown>\n#13 0x557af1c3e81e <unknown>\n#14 0x557af1ea3638 <unknown>\n#15 0x557af1ea7507 <unknown>\n#16 0x557af1eb1c4c <unknown>\n#17 0x557af1ea8136 <unknown>\n#18 0x557af1e769cf <unknown>\n#19 0x557af1ecbb98 <unknown>\n#20 0x557af1ecbd68 <unknown>\n#21 0x557af1edacb3 <unknown>\n#22 0x7f6090d8d044 <unknown>","time":{"start":1694048545180,"stop":1694048547584,"duration":2404}},{"uid":"df116a2ddfaa77cf","reportUrl":"https://Nat754.github.io/StroyremAutomation/50//#testresult/df116a2ddfaa77cf","status":"passed","time":{"start":1693962751825,"stop":1693962762801,"duration":10976}},{"uid":"7361a4e6c945fd39","reportUrl":"https://Nat754.github.io/StroyremAutomation/49//#testresult/7361a4e6c945fd39","status":"passed","time":{"start":1693875818799,"stop":1693875828405,"duration":9606}},{"uid":"30a9f1a954066eb5","reportUrl":"https://Nat754.github.io/StroyremAutomation/48//#testresult/30a9f1a954066eb5","status":"passed","time":{"start":1693789898972,"stop":1693789909377,"duration":10405}},{"uid":"e675350d2a6b448","reportUrl":"https://Nat754.github.io/StroyremAutomation/3//#testresult/e675350d2a6b448","status":"passed","time":{"start":1693730569714,"stop":1693730579378,"duration":9664}},{"uid":"722a376e8d5a3bff","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/722a376e8d5a3bff","status":"passed","time":{"start":1693731393738,"stop":1693731404149,"duration":10411}},{"uid":"e645688366dee697","reportUrl":"https://Nat754.github.io/StroyremAutomation/47//#testresult/e645688366dee697","status":"passed","time":{"start":1693703764670,"stop":1693703775478,"duration":10808}},{"uid":"a114db981aa0e0de","reportUrl":"https://Nat754.github.io/StroyremAutomation/46//#testresult/a114db981aa0e0de","status":"passed","time":{"start":1693616940170,"stop":1693616951010,"duration":10840}},{"uid":"bd55b1a57584a9ce","reportUrl":"https://Nat754.github.io/StroyremAutomation/45//#testresult/bd55b1a57584a9ce","status":"passed","time":{"start":1693530827551,"stop":1693530838079,"duration":10528}},{"uid":"1dd2bf67b5215083","reportUrl":"https://Nat754.github.io/StroyremAutomation/2//#testresult/1dd2bf67b5215083","status":"passed","time":{"start":1693476637497,"stop":1693476647840,"duration":10343}},{"uid":"a85ca4f2a4957a48","reportUrl":"https://Nat754.github.io/StroyremAutomation/44//#testresult/a85ca4f2a4957a48","status":"passed","time":{"start":1693444074329,"stop":1693444084740,"duration":10411}},{"uid":"e8c4ee094bcc12a9","reportUrl":"https://Nat754.github.io/StroyremAutomation/43//#testresult/e8c4ee094bcc12a9","status":"passed","time":{"start":1693357790116,"stop":1693357800950,"duration":10834}},{"uid":"5687a0ab4f84150c","reportUrl":"https://Nat754.github.io/StroyremAutomation/42//#testresult/5687a0ab4f84150c","status":"passed","time":{"start":1693300584409,"stop":1693300593411,"duration":9002}},{"uid":"e4f2066f3833b4ea","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/e4f2066f3833b4ea","status":"passed","time":{"start":1693298771912,"stop":1693298781399,"duration":9487}},{"uid":"60388f6998cbb4fc","reportUrl":"https://Nat754.github.io/StroyremAutomation/41//#testresult/60388f6998cbb4fc","status":"passed","time":{"start":1693271000695,"stop":1693271010218,"duration":9523}},{"uid":"f08488eea0f46193","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/f08488eea0f46193","status":"passed","time":{"start":1693244258792,"stop":1693244269646,"duration":10854}},{"uid":"36be2d89f7709a5c","reportUrl":"https://Nat754.github.io/StroyremAutomation/40//#testresult/36be2d89f7709a5c","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x559413ce0e23 <unknown>\n#1 0x559413a097a7 <unknown>\n#2 0x559413a481d3 <unknown>\n#3 0x559413a482c1 <unknown>\n#4 0x559413a83a04 <unknown>\n#5 0x559413a6903d <unknown>\n#6 0x559413a81369 <unknown>\n#7 0x559413a68de3 <unknown>\n#8 0x559413a3ca7b <unknown>\n#9 0x559413a3d81e <unknown>\n#10 0x559413ca2638 <unknown>\n#11 0x559413ca6507 <unknown>\n#12 0x559413cb0c4c <unknown>\n#13 0x559413ca7136 <unknown>\n#14 0x559413c759cf <unknown>\n#15 0x559413ccab98 <unknown>\n#16 0x559413ccad68 <unknown>\n#17 0x559413cd9cb3 <unknown>\n#18 0x7f1d61d57044 <unknown>","time":{"start":1693184703762,"stop":1693184718932,"duration":15170}},{"uid":"a6aa1bbf718946c9","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/a6aa1bbf718946c9","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55dab44cee23 <unknown>\n#1 0x55dab41f77a7 <unknown>\n#2 0x55dab42361d3 <unknown>\n#3 0x55dab42362c1 <unknown>\n#4 0x55dab4271a04 <unknown>\n#5 0x55dab425703d <unknown>\n#6 0x55dab426f369 <unknown>\n#7 0x55dab4256de3 <unknown>\n#8 0x55dab422aa7b <unknown>\n#9 0x55dab422b81e <unknown>\n#10 0x55dab4490638 <unknown>\n#11 0x55dab4494507 <unknown>\n#12 0x55dab449ec4c <unknown>\n#13 0x55dab4495136 <unknown>\n#14 0x55dab44639cf <unknown>\n#15 0x55dab44b8b98 <unknown>\n#16 0x55dab44b8d68 <unknown>\n#17 0x55dab44c7cb3 <unknown>\n#18 0x7f61c38b3044 <unknown>","time":{"start":1693170823393,"stop":1693170838578,"duration":15185}}]},"tags":["smoke_test"]},"source":"78fdf9f1dcfb102e.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shlifovalnye-mashiny'"]}