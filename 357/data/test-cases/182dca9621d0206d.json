{"uid":"182dca9621d0206d","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1719969014343,"stop":1719969016635,"duration":2292},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55aca5921c7a <unknown>\n#1 0x55aca5604e2c <unknown>\n#2 0x55aca5658406 <unknown>\n#3 0x55aca5656246 <unknown>\n#4 0x55aca5653c27 <unknown>\n#5 0x55aca5652a60 <unknown>\n#6 0x55aca564615f <unknown>\n#7 0x55aca56745c2 <unknown>\n#8 0x55aca5645ad9 <unknown>\n#9 0x55aca567478e <unknown>\n#10 0x55aca5693303 <unknown>\n#11 0x55aca5674363 <unknown>\n#12 0x55aca5644247 <unknown>\n#13 0x55aca5644b9e <unknown>\n#14 0x55aca58e824b <unknown>\n#15 0x55aca58ec2f1 <unknown>\n#16 0x55aca58d3afe <unknown>\n#17 0x55aca58ece52 <unknown>\n#18 0x55aca58b879f <unknown>\n#19 0x55aca5911638 <unknown>\n#20 0x55aca5911810 <unknown>\n#21 0x55aca5920dac <unknown>\n#22 0x7f29ef2bb134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f13c7540590>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f13c64cecd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f13c755a890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55aca5911810 \\\\u003Cunknown>\\\\n#21 0x55aca5920dac \\\\u003Cunknown>\\\\n#22 0x7f29ef2bb134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55aca5921c7a <unknown>\nE       #1 0x55aca5604e2c <unknown>\nE       #2 0x55aca5658406 <unknown>\nE       #3 0x55aca5656246 <unknown>\nE       #4 0x55aca5653c27 <unknown>\nE       #5 0x55aca5652a60 <unknown>\nE       #6 0x55aca564615f <unknown>\nE       #7 0x55aca56745c2 <unknown>\nE       #8 0x55aca5645ad9 <unknown>\nE       #9 0x55aca567478e <unknown>\nE       #10 0x55aca5693303 <unknown>\nE       #11 0x55aca5674363 <unknown>\nE       #12 0x55aca5644247 <unknown>\nE       #13 0x55aca5644b9e <unknown>\nE       #14 0x55aca58e824b <unknown>\nE       #15 0x55aca58ec2f1 <unknown>\nE       #16 0x55aca58d3afe <unknown>\nE       #17 0x55aca58ece52 <unknown>\nE       #18 0x55aca58b879f <unknown>\nE       #19 0x55aca5911638 <unknown>\nE       #20 0x55aca5911810 <unknown>\nE       #21 0x55aca5920dac <unknown>\nE       #22 0x7f29ef2bb134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1719968125601,"stop":1719968125667,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1719968125667,"stop":1719968125667,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1719969004254,"stop":1719969004944,"duration":690},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1719969004944,"stop":1719969004944,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1719969004945,"stop":1719969014342,"duration":9397},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55aca5921c7a <unknown>\n#1 0x55aca5604e2c <unknown>\n#2 0x55aca5658406 <unknown>\n#3 0x55aca5656246 <unknown>\n#4 0x55aca5653c27 <unknown>\n#5 0x55aca5652a60 <unknown>\n#6 0x55aca564615f <unknown>\n#7 0x55aca56745c2 <unknown>\n#8 0x55aca5645ad9 <unknown>\n#9 0x55aca567478e <unknown>\n#10 0x55aca5693303 <unknown>\n#11 0x55aca5674363 <unknown>\n#12 0x55aca5644247 <unknown>\n#13 0x55aca5644b9e <unknown>\n#14 0x55aca58e824b <unknown>\n#15 0x55aca58ec2f1 <unknown>\n#16 0x55aca58d3afe <unknown>\n#17 0x55aca58ece52 <unknown>\n#18 0x55aca58b879f <unknown>\n#19 0x55aca5911638 <unknown>\n#20 0x55aca5911810 <unknown>\n#21 0x55aca5920dac <unknown>\n#22 0x7f29ef2bb134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f13c7540590>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f13c64cecd0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f13c755a890>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55aca5911810 \\\\u003Cunknown>\\\\n#21 0x55aca5920dac \\\\u003Cunknown>\\\\n#22 0x7f29ef2bb134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x55aca5921c7a <unknown>\nE       #1 0x55aca5604e2c <unknown>\nE       #2 0x55aca5658406 <unknown>\nE       #3 0x55aca5656246 <unknown>\nE       #4 0x55aca5653c27 <unknown>\nE       #5 0x55aca5652a60 <unknown>\nE       #6 0x55aca564615f <unknown>\nE       #7 0x55aca56745c2 <unknown>\nE       #8 0x55aca5645ad9 <unknown>\nE       #9 0x55aca567478e <unknown>\nE       #10 0x55aca5693303 <unknown>\nE       #11 0x55aca5674363 <unknown>\nE       #12 0x55aca5644247 <unknown>\nE       #13 0x55aca5644b9e <unknown>\nE       #14 0x55aca58e824b <unknown>\nE       #15 0x55aca58ec2f1 <unknown>\nE       #16 0x55aca58d3afe <unknown>\nE       #17 0x55aca58ece52 <unknown>\nE       #18 0x55aca58b879f <unknown>\nE       #19 0x55aca5911638 <unknown>\nE       #20 0x55aca5911810 <unknown>\nE       #21 0x55aca5920dac <unknown>\nE       #22 0x7f29ef2bb134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1719969014343,"stop":1719969014374,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1719969014445,"stop":1719969014474,"duration":29},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1719969015514,"stop":1719969015553,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"eeda81b3332745a9","name":"Screenshot","source":"eeda81b3332745a9.png","type":"image/png","size":101358},{"uid":"e0467833ea746dc6","name":"HTML source","source":"e0467833ea746dc6.html","type":"text/html","size":944137}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1719969016800,"stop":1719969016800,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1719969016801,"stop":1719969016875,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"f3159710353e"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":6,"skipped":0,"passed":29,"unknown":0,"total":35},"items":[{"uid":"3134932b4a0b8ddd","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/3134932b4a0b8ddd","status":"passed","time":{"start":1719882596188,"stop":1719882609005,"duration":12817}},{"uid":"df5b0a1362b7f63","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/df5b0a1362b7f63","status":"passed","time":{"start":1719796455752,"stop":1719796464725,"duration":8973}},{"uid":"df9663cb25053735","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/df9663cb25053735","status":"passed","time":{"start":1719709973399,"stop":1719709982012,"duration":8613}},{"uid":"e61f16d735237c9c","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/e61f16d735237c9c","status":"passed","time":{"start":1719623254386,"stop":1719623263756,"duration":9370}},{"uid":"456929fbba971107","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/456929fbba971107","status":"passed","time":{"start":1719537100810,"stop":1719537110635,"duration":9825}},{"uid":"2542d88342df8007","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/2542d88342df8007","status":"passed","time":{"start":1719450550300,"stop":1719450561730,"duration":11430}},{"uid":"19955f1f1d7d5b34","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/19955f1f1d7d5b34","status":"passed","time":{"start":1719364119581,"stop":1719364129038,"duration":9457}},{"uid":"a642e39ace7aacd3","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/a642e39ace7aacd3","status":"passed","time":{"start":1719277880347,"stop":1719277889915,"duration":9568}},{"uid":"9be63531fe3a4902","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/9be63531fe3a4902","status":"passed","time":{"start":1719191457606,"stop":1719191467341,"duration":9735}},{"uid":"90bed5cb651cdcd3","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/90bed5cb651cdcd3","status":"passed","time":{"start":1719105180894,"stop":1719105191462,"duration":10568}},{"uid":"40db4b3f916ec247","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/40db4b3f916ec247","status":"passed","time":{"start":1719018578378,"stop":1719018588948,"duration":10570}},{"uid":"59a5eac70d6c503e","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/59a5eac70d6c503e","status":"passed","time":{"start":1718932284745,"stop":1718932294899,"duration":10154}},{"uid":"ce797d26104d7bb8","reportUrl":"https://Nat754.github.io/StroyremAutomation/344//#testresult/ce797d26104d7bb8","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.62)\nStacktrace:\n#0 0x55c61b9bd70a <unknown>\n#1 0x55c61b6a00dc <unknown>\n#2 0x55c61b6f36c6 <unknown>\n#3 0x55c61b6f1516 <unknown>\n#4 0x55c61b6eeef7 <unknown>\n#5 0x55c61b6edd2c <unknown>\n#6 0x55c61b6e140f <unknown>\n#7 0x55c61b70f872 <unknown>\n#8 0x55c61b6e0d89 <unknown>\n#9 0x55c61b70fa3e <unknown>\n#10 0x55c61b72e5c3 <unknown>\n#11 0x55c61b70f613 <unknown>\n#12 0x55c61b6df4f7 <unknown>\n#13 0x55c61b6dfe4e <unknown>\n#14 0x55c61b9838db <unknown>\n#15 0x55c61b987981 <unknown>\n#16 0x55c61b96f3ce <unknown>\n#17 0x55c61b9884e2 <unknown>\n#18 0x55c61b953d2f <unknown>\n#19 0x55c61b9ad108 <unknown>\n#20 0x55c61b9ad2e0 <unknown>\n#21 0x55c61b9bc83c <unknown>\n#22 0x7fd1be788134 <unknown>","time":{"start":1718845628762,"stop":1718845631078,"duration":2316}},{"uid":"9a99a3dea71033c4","reportUrl":"https://Nat754.github.io/StroyremAutomation/343//#testresult/9a99a3dea71033c4","status":"passed","time":{"start":1718759558017,"stop":1718759568795,"duration":10778}},{"uid":"2bfbfa46d59b0869","reportUrl":"https://Nat754.github.io/StroyremAutomation/342//#testresult/2bfbfa46d59b0869","status":"passed","time":{"start":1718672984872,"stop":1718672994597,"duration":9725}},{"uid":"cb74320f3d91a6e3","reportUrl":"https://Nat754.github.io/StroyremAutomation/341//#testresult/cb74320f3d91a6e3","status":"passed","time":{"start":1718586823060,"stop":1718586833023,"duration":9963}},{"uid":"1c4302e5a4d41ab4","reportUrl":"https://Nat754.github.io/StroyremAutomation/340//#testresult/1c4302e5a4d41ab4","status":"passed","time":{"start":1718500524278,"stop":1718500533917,"duration":9639}},{"uid":"e5f9d3bb5ec3429d","reportUrl":"https://Nat754.github.io/StroyremAutomation/339//#testresult/e5f9d3bb5ec3429d","status":"passed","time":{"start":1718413900538,"stop":1718413911207,"duration":10669}},{"uid":"428586479ee6163c","reportUrl":"https://Nat754.github.io/StroyremAutomation/338//#testresult/428586479ee6163c","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.61)\nStacktrace:\n#0 0x562cb95a76aa <unknown>\n#1 0x562cb928a0dc <unknown>\n#2 0x562cb92dd6c6 <unknown>\n#3 0x562cb92db516 <unknown>\n#4 0x562cb92d8ef7 <unknown>\n#5 0x562cb92d7d2c <unknown>\n#6 0x562cb92cb40f <unknown>\n#7 0x562cb92f9872 <unknown>\n#8 0x562cb92cad89 <unknown>\n#9 0x562cb92f9a3e <unknown>\n#10 0x562cb93185c3 <unknown>\n#11 0x562cb92f9613 <unknown>\n#12 0x562cb92c94f7 <unknown>\n#13 0x562cb92c9e4e <unknown>\n#14 0x562cb956d87b <unknown>\n#15 0x562cb9571921 <unknown>\n#16 0x562cb955936e <unknown>\n#17 0x562cb9572482 <unknown>\n#18 0x562cb953dccf <unknown>\n#19 0x562cb95970a8 <unknown>\n#20 0x562cb9597280 <unknown>\n#21 0x562cb95a67dc <unknown>\n#22 0x7fcb69997134 <unknown>","time":{"start":1718327417857,"stop":1718327420164,"duration":2307}},{"uid":"6f9a5ba9e6accf65","reportUrl":"https://Nat754.github.io/StroyremAutomation/337//#testresult/6f9a5ba9e6accf65","status":"passed","time":{"start":1718240996292,"stop":1718241010016,"duration":13724}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"182dca9621d0206d.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}