{"uid":"2d8eb5bb5a1b05ea","name":"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke","historyId":"fd3dac514beac2a104acb88cf11d7062","time":{"start":1705281200781,"stop":1705281205245,"duration":4464},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f11b003f83 <unknown>\n#1 0x55f11acbccf7 <unknown>\n#2 0x55f11acc32a3 <unknown>\n#3 0x55f11acc5798 <unknown>\n#4 0x55f11acc58ec <unknown>\n#5 0x55f11ad14cb1 <unknown>\n#6 0x55f11ad127f4 <unknown>\n#7 0x55f11ad0f894 <unknown>\n#8 0x55f11ad0e4b9 <unknown>\n#9 0x55f11ad00313 <unknown>\n#10 0x55f11ad360b2 <unknown>\n#11 0x55f11acffb49 <unknown>\n#12 0x55f11ad364ce <unknown>\n#13 0x55f11ad55006 <unknown>\n#14 0x55f11ad35e53 <unknown>\n#15 0x55f11acfddd4 <unknown>\n#16 0x55f11acff1de <unknown>\n#17 0x55f11afc8531 <unknown>\n#18 0x55f11afcc455 <unknown>\n#19 0x55f11afb4f55 <unknown>\n#20 0x55f11afcd0ef <unknown>\n#21 0x55f11af9899f <unknown>\n#22 0x55f11aff1008 <unknown>\n#23 0x55f11aff11d7 <unknown>\n#24 0x55f11b003124 <unknown>\n#25 0x7fe6e98e0044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f6947ae9710>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6946c41e90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2].replace(' ', '')))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f69468a8f10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55f11aff11d7 \\\\u003Cunknown>\\\\n#24 0x55f11b003124 \\\\u003Cunknown>\\\\n#25 0x7fe6e98e0044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f11b003f83 <unknown>\nE       #1 0x55f11acbccf7 <unknown>\nE       #2 0x55f11acc32a3 <unknown>\nE       #3 0x55f11acc5798 <unknown>\nE       #4 0x55f11acc58ec <unknown>\nE       #5 0x55f11ad14cb1 <unknown>\nE       #6 0x55f11ad127f4 <unknown>\nE       #7 0x55f11ad0f894 <unknown>\nE       #8 0x55f11ad0e4b9 <unknown>\nE       #9 0x55f11ad00313 <unknown>\nE       #10 0x55f11ad360b2 <unknown>\nE       #11 0x55f11acffb49 <unknown>\nE       #12 0x55f11ad364ce <unknown>\nE       #13 0x55f11ad55006 <unknown>\nE       #14 0x55f11ad35e53 <unknown>\nE       #15 0x55f11acfddd4 <unknown>\nE       #16 0x55f11acff1de <unknown>\nE       #17 0x55f11afc8531 <unknown>\nE       #18 0x55f11afcc455 <unknown>\nE       #19 0x55f11afb4f55 <unknown>\nE       #20 0x55f11afcd0ef <unknown>\nE       #21 0x55f11af9899f <unknown>\nE       #22 0x55f11aff1008 <unknown>\nE       #23 0x55f11aff11d7 <unknown>\nE       #24 0x55f11b003124 <unknown>\nE       #25 0x7fe6e98e0044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1705280052701,"stop":1705280052768,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1705280052768,"stop":1705280052768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1705281185971,"stop":1705281186744,"duration":773},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1705281186744,"stop":1705281186744,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1705281186745,"stop":1705281200780,"duration":14035},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55f11b003f83 <unknown>\n#1 0x55f11acbccf7 <unknown>\n#2 0x55f11acc32a3 <unknown>\n#3 0x55f11acc5798 <unknown>\n#4 0x55f11acc58ec <unknown>\n#5 0x55f11ad14cb1 <unknown>\n#6 0x55f11ad127f4 <unknown>\n#7 0x55f11ad0f894 <unknown>\n#8 0x55f11ad0e4b9 <unknown>\n#9 0x55f11ad00313 <unknown>\n#10 0x55f11ad360b2 <unknown>\n#11 0x55f11acffb49 <unknown>\n#12 0x55f11ad364ce <unknown>\n#13 0x55f11ad55006 <unknown>\n#14 0x55f11ad35e53 <unknown>\n#15 0x55f11acfddd4 <unknown>\n#16 0x55f11acff1de <unknown>\n#17 0x55f11afc8531 <unknown>\n#18 0x55f11afcc455 <unknown>\n#19 0x55f11afb4f55 <unknown>\n#20 0x55f11afcd0ef <unknown>\n#21 0x55f11af9899f <unknown>\n#22 0x55f11aff1008 <unknown>\n#23 0x55f11aff11d7 <unknown>\n#24 0x55f11b003124 <unknown>\n#25 0x7fe6e98e0044 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f6947ae9710>\nlink = 'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f6946c41e90>\n\n    @allure.title(\"positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_discount_for_unauthorized_customer_purchase_amount_10000_to_14999rub_smoke(\n            self, link, product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n        price = (float(product_page_open.get_pc_price().text[:-2].replace(' ', '')))\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:260: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f69468a8f10>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55f11aff11d7 \\\\u003Cunknown>\\\\n#24 0x55f11b003124 \\\\u003Cunknown>\\\\n#25 0x7fe6e98e0044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: chrome-headless-shell=120.0.6099.109); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55f11b003f83 <unknown>\nE       #1 0x55f11acbccf7 <unknown>\nE       #2 0x55f11acc32a3 <unknown>\nE       #3 0x55f11acc5798 <unknown>\nE       #4 0x55f11acc58ec <unknown>\nE       #5 0x55f11ad14cb1 <unknown>\nE       #6 0x55f11ad127f4 <unknown>\nE       #7 0x55f11ad0f894 <unknown>\nE       #8 0x55f11ad0e4b9 <unknown>\nE       #9 0x55f11ad00313 <unknown>\nE       #10 0x55f11ad360b2 <unknown>\nE       #11 0x55f11acffb49 <unknown>\nE       #12 0x55f11ad364ce <unknown>\nE       #13 0x55f11ad55006 <unknown>\nE       #14 0x55f11ad35e53 <unknown>\nE       #15 0x55f11acfddd4 <unknown>\nE       #16 0x55f11acff1de <unknown>\nE       #17 0x55f11afc8531 <unknown>\nE       #18 0x55f11afcc455 <unknown>\nE       #19 0x55f11afb4f55 <unknown>\nE       #20 0x55f11afcd0ef <unknown>\nE       #21 0x55f11af9899f <unknown>\nE       #22 0x55f11aff1008 <unknown>\nE       #23 0x55f11aff11d7 <unknown>\nE       #24 0x55f11b003124 <unknown>\nE       #25 0x7fe6e98e0044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1705281200781,"stop":1705281200814,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1705281200869,"stop":1705281200895,"duration":26},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1705281201936,"stop":1705281201977,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость цены товара","time":{"start":1705281204594,"stop":1705281204633,"duration":39},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1705281204643,"stop":1705281204686,"duration":43},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"a94e982cbfa4b86b","name":"Screenshot","source":"a94e982cbfa4b86b.png","type":"image/png","size":55758},{"uid":"5790dd3d3c3a96c1","name":"HTML source","source":"5790dd3d3c3a96c1.html","type":"text/html","size":547647}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1705281205388,"stop":1705281205388,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1705281205389,"stop":1705281205463,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"85a0874d609d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":22,"skipped":0,"passed":130,"unknown":0,"total":152},"items":[{"uid":"e3af2e3be14b7138","reportUrl":"https://Nat754.github.io/StroyremAutomation/186//#testresult/e3af2e3be14b7138","status":"passed","time":{"start":1705195065399,"stop":1705195074125,"duration":8726}},{"uid":"f56f2168e6f6ebd0","reportUrl":"https://Nat754.github.io/StroyremAutomation/185//#testresult/f56f2168e6f6ebd0","status":"passed","time":{"start":1705108320513,"stop":1705108329373,"duration":8860}},{"uid":"e450b125a6a3b1da","reportUrl":"https://Nat754.github.io/StroyremAutomation/184//#testresult/e450b125a6a3b1da","status":"passed","time":{"start":1705021814049,"stop":1705021822129,"duration":8080}},{"uid":"42db535e95776f63","reportUrl":"https://Nat754.github.io/StroyremAutomation/183//#testresult/42db535e95776f63","status":"passed","time":{"start":1704935563341,"stop":1704935571787,"duration":8446}},{"uid":"f5053454cc21f64d","reportUrl":"https://Nat754.github.io/StroyremAutomation/182//#testresult/f5053454cc21f64d","status":"passed","time":{"start":1704849173288,"stop":1704849181433,"duration":8145}},{"uid":"884cf9673a844bab","reportUrl":"https://Nat754.github.io/StroyremAutomation/181//#testresult/884cf9673a844bab","status":"passed","time":{"start":1704762501836,"stop":1704762509414,"duration":7578}},{"uid":"f9816064bd82a58d","reportUrl":"https://Nat754.github.io/StroyremAutomation/180//#testresult/f9816064bd82a58d","status":"passed","time":{"start":1704676141058,"stop":1704676149265,"duration":8207}},{"uid":"43e42d5d77f0075b","reportUrl":"https://Nat754.github.io/StroyremAutomation/179//#testresult/43e42d5d77f0075b","status":"passed","time":{"start":1704590162980,"stop":1704590171578,"duration":8598}},{"uid":"661deadf1fcc1632","reportUrl":"https://Nat754.github.io/StroyremAutomation/178//#testresult/661deadf1fcc1632","status":"passed","time":{"start":1704503418805,"stop":1704503427443,"duration":8638}},{"uid":"707763b1e4f86e73","reportUrl":"https://Nat754.github.io/StroyremAutomation/177//#testresult/707763b1e4f86e73","status":"passed","time":{"start":1704416865024,"stop":1704416872848,"duration":7824}},{"uid":"9abee5cf48d3088a","reportUrl":"https://Nat754.github.io/StroyremAutomation/176//#testresult/9abee5cf48d3088a","status":"passed","time":{"start":1704330468809,"stop":1704330476774,"duration":7965}},{"uid":"bc808d1ca7693bb3","reportUrl":"https://Nat754.github.io/StroyremAutomation/175//#testresult/bc808d1ca7693bb3","status":"passed","time":{"start":1704244139497,"stop":1704244147978,"duration":8481}},{"uid":"a4dce524ab59e047","reportUrl":"https://Nat754.github.io/StroyremAutomation/174//#testresult/a4dce524ab59e047","status":"passed","time":{"start":1704157544500,"stop":1704157552270,"duration":7770}},{"uid":"53e31c5904c3423e","reportUrl":"https://Nat754.github.io/StroyremAutomation/173//#testresult/53e31c5904c3423e","status":"passed","time":{"start":1704071496553,"stop":1704071504431,"duration":7878}},{"uid":"dd9d4d50dfe6ff94","reportUrl":"https://Nat754.github.io/StroyremAutomation/172//#testresult/dd9d4d50dfe6ff94","status":"passed","time":{"start":1703985018126,"stop":1703985025959,"duration":7833}},{"uid":"a98d5ce14ab3ce1","reportUrl":"https://Nat754.github.io/StroyremAutomation/171//#testresult/a98d5ce14ab3ce1","status":"passed","time":{"start":1703898294864,"stop":1703898302815,"duration":7951}},{"uid":"7072cd78923bbd3b","reportUrl":"https://Nat754.github.io/StroyremAutomation/170//#testresult/7072cd78923bbd3b","status":"passed","time":{"start":1703811697730,"stop":1703811706363,"duration":8633}},{"uid":"6312b82dab136ab","reportUrl":"https://Nat754.github.io/StroyremAutomation/169//#testresult/6312b82dab136ab","status":"passed","time":{"start":1703725541118,"stop":1703725549213,"duration":8095}},{"uid":"d0cacd84ceb38ad5","reportUrl":"https://Nat754.github.io/StroyremAutomation/168//#testresult/d0cacd84ceb38ad5","status":"passed","time":{"start":1703639401595,"stop":1703639411119,"duration":9524}},{"uid":"8ba4bce5a6dcaaa4","reportUrl":"https://Nat754.github.io/StroyremAutomation/167//#testresult/8ba4bce5a6dcaaa4","status":"passed","time":{"start":1703552690198,"stop":1703552698044,"duration":7846}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"2d8eb5bb5a1b05ea.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}