{"uid":"62587e3571b0294e","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke","historyId":"60ac608ef0b195b1f9aff92ab9d21fa8","time":{"start":1723684260194,"stop":1723684264731,"duration":4537},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x558f1c2df6ca <unknown>\n#1 0x558f1bfb0600 <unknown>\n#2 0x558f1bfb648f <unknown>\n#3 0x558f1bfb80b5 <unknown>\n#4 0x558f1bfb813c <unknown>\n#5 0x558f1c0067fc <unknown>\n#6 0x558f1c0047f6 <unknown>\n#7 0x558f1c002277 <unknown>\n#8 0x558f1c00111c <unknown>\n#9 0x558f1bff4be6 <unknown>\n#10 0x558f1c0228a2 <unknown>\n#11 0x558f1bff4599 <unknown>\n#12 0x558f1c022a6e <unknown>\n#13 0x558f1c04104a <unknown>\n#14 0x558f1c022643 <unknown>\n#15 0x558f1bff2d31 <unknown>\n#16 0x558f1bff379e <unknown>\n#17 0x558f1c2a725b <unknown>\n#18 0x558f1c2ab1f2 <unknown>\n#19 0x558f1c294615 <unknown>\n#20 0x558f1c2abd82 <unknown>\n#21 0x558f1c27925f <unknown>\n#22 0x558f1c2cee68 <unknown>\n#23 0x558f1c2cf040 <unknown>\n#24 0x558f1c2de49c <unknown>\n#25 0x7f8fcb09d134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f3c83c320d0>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f3c83c6ce90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3c82caaad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x558f1c2cf040 \\\\u003Cunknown>\\\\n#24 0x558f1c2de49c \\\\u003Cunknown>\\\\n#25 0x7f8fcb09d134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x558f1c2df6ca <unknown>\nE       #1 0x558f1bfb0600 <unknown>\nE       #2 0x558f1bfb648f <unknown>\nE       #3 0x558f1bfb80b5 <unknown>\nE       #4 0x558f1bfb813c <unknown>\nE       #5 0x558f1c0067fc <unknown>\nE       #6 0x558f1c0047f6 <unknown>\nE       #7 0x558f1c002277 <unknown>\nE       #8 0x558f1c00111c <unknown>\nE       #9 0x558f1bff4be6 <unknown>\nE       #10 0x558f1c0228a2 <unknown>\nE       #11 0x558f1bff4599 <unknown>\nE       #12 0x558f1c022a6e <unknown>\nE       #13 0x558f1c04104a <unknown>\nE       #14 0x558f1c022643 <unknown>\nE       #15 0x558f1bff2d31 <unknown>\nE       #16 0x558f1bff379e <unknown>\nE       #17 0x558f1c2a725b <unknown>\nE       #18 0x558f1c2ab1f2 <unknown>\nE       #19 0x558f1c294615 <unknown>\nE       #20 0x558f1c2abd82 <unknown>\nE       #21 0x558f1c27925f <unknown>\nE       #22 0x558f1c2cee68 <unknown>\nE       #23 0x558f1c2cf040 <unknown>\nE       #24 0x558f1c2de49c <unknown>\nE       #25 0x7f8fcb09d134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1723683318952,"stop":1723683319023,"duration":71},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1723683319023,"stop":1723683319023,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1723684247793,"stop":1723684248486,"duration":693},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1723684248487,"stop":1723684260194,"duration":11707},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1723684248487,"stop":1723684248487,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\n  (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x558f1c2df6ca <unknown>\n#1 0x558f1bfb0600 <unknown>\n#2 0x558f1bfb648f <unknown>\n#3 0x558f1bfb80b5 <unknown>\n#4 0x558f1bfb813c <unknown>\n#5 0x558f1c0067fc <unknown>\n#6 0x558f1c0047f6 <unknown>\n#7 0x558f1c002277 <unknown>\n#8 0x558f1c00111c <unknown>\n#9 0x558f1bff4be6 <unknown>\n#10 0x558f1c0228a2 <unknown>\n#11 0x558f1bff4599 <unknown>\n#12 0x558f1c022a6e <unknown>\n#13 0x558f1c04104a <unknown>\n#14 0x558f1c022643 <unknown>\n#15 0x558f1bff2d31 <unknown>\n#16 0x558f1bff379e <unknown>\n#17 0x558f1c2a725b <unknown>\n#18 0x558f1c2ab1f2 <unknown>\n#19 0x558f1c294615 <unknown>\n#20 0x558f1c2abd82 <unknown>\n#21 0x558f1c27925f <unknown>\n#22 0x558f1c2cee68 <unknown>\n#23 0x558f1c2cf040 <unknown>\n#24 0x558f1c2de49c <unknown>\n#25 0x7f8fcb09d134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f3c83c320d0>\nlink = 'https://stroyrem-nn.ru/catalog/elektroinstrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f3c83c6ce90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ELECTROINSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ELECTROINSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_7500_9999rub_smoke(self, link,\n                                                                                             product_page_open):\n        product_page_open.get_field_price_first().send_keys(7500)\n        product_page_open.get_field_price_last().send_keys(9999)\n        time.sleep(1)\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(2)\n>       product_page_open.get_add_to_cart_btn().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f3c82caaad0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x558f1c2cf040 \\\\u003Cunknown>\\\\n#24 0x558f1c2de49c \\\\u003Cunknown>\\\\n#25 0x7f8fcb09d134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found in the current frame\nE         (Session info: chrome-headless-shell=127.0.6533.119); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x558f1c2df6ca <unknown>\nE       #1 0x558f1bfb0600 <unknown>\nE       #2 0x558f1bfb648f <unknown>\nE       #3 0x558f1bfb80b5 <unknown>\nE       #4 0x558f1bfb813c <unknown>\nE       #5 0x558f1c0067fc <unknown>\nE       #6 0x558f1c0047f6 <unknown>\nE       #7 0x558f1c002277 <unknown>\nE       #8 0x558f1c00111c <unknown>\nE       #9 0x558f1bff4be6 <unknown>\nE       #10 0x558f1c0228a2 <unknown>\nE       #11 0x558f1bff4599 <unknown>\nE       #12 0x558f1c022a6e <unknown>\nE       #13 0x558f1c04104a <unknown>\nE       #14 0x558f1c022643 <unknown>\nE       #15 0x558f1bff2d31 <unknown>\nE       #16 0x558f1bff379e <unknown>\nE       #17 0x558f1c2a725b <unknown>\nE       #18 0x558f1c2ab1f2 <unknown>\nE       #19 0x558f1c294615 <unknown>\nE       #20 0x558f1c2abd82 <unknown>\nE       #21 0x558f1c27925f <unknown>\nE       #22 0x558f1c2cee68 <unknown>\nE       #23 0x558f1c2cf040 <unknown>\nE       #24 0x558f1c2de49c <unknown>\nE       #25 0x7f8fcb09d134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1723684260194,"stop":1723684260227,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1723684260292,"stop":1723684260325,"duration":33},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1723684261364,"stop":1723684261409,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'В корзину'","time":{"start":1723684263714,"stop":1723684263782,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"659a2188f05f8b82","name":"Screenshot","source":"659a2188f05f8b82.png","type":"image/png","size":140664},{"uid":"fa6eae7acfa15173","name":"HTML source","source":"fa6eae7acfa15173.html","type":"text/html","size":665727}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1723684264893,"stop":1723684264893,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1723684264894,"stop":1723684264983,"duration":89},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"a8086e5f0c79"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/elektroinstrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":20,"skipped":0,"passed":58,"unknown":0,"total":78},"items":[{"uid":"5d1f900be31a20ff","reportUrl":"https://Nat754.github.io/StroyremAutomation/399//#testresult/5d1f900be31a20ff","status":"passed","time":{"start":1723597950942,"stop":1723597960156,"duration":9214}},{"uid":"53e9fe0128245892","reportUrl":"https://Nat754.github.io/StroyremAutomation/398//#testresult/53e9fe0128245892","status":"passed","time":{"start":1723511823713,"stop":1723511834754,"duration":11041}},{"uid":"a31c136f20832546","reportUrl":"https://Nat754.github.io/StroyremAutomation/397//#testresult/a31c136f20832546","status":"passed","time":{"start":1723425313037,"stop":1723425322920,"duration":9883}},{"uid":"22eeab96aa8e3de6","reportUrl":"https://Nat754.github.io/StroyremAutomation/396//#testresult/22eeab96aa8e3de6","status":"passed","time":{"start":1723339260144,"stop":1723339271498,"duration":11354}},{"uid":"6e6c00310bea6f3a","reportUrl":"https://Nat754.github.io/StroyremAutomation/395//#testresult/6e6c00310bea6f3a","status":"passed","time":{"start":1723252307494,"stop":1723252316885,"duration":9391}},{"uid":"30345d941b604ef8","reportUrl":"https://Nat754.github.io/StroyremAutomation/394//#testresult/30345d941b604ef8","status":"passed","time":{"start":1723165953502,"stop":1723165962061,"duration":8559}},{"uid":"d5089e130f33d283","reportUrl":"https://Nat754.github.io/StroyremAutomation/393//#testresult/d5089e130f33d283","status":"passed","time":{"start":1723079547433,"stop":1723079556464,"duration":9031}},{"uid":"5acefdc6622bff3d","reportUrl":"https://Nat754.github.io/StroyremAutomation/392//#testresult/5acefdc6622bff3d","status":"passed","time":{"start":1722993249810,"stop":1722993259496,"duration":9686}},{"uid":"7c28eacd6e959ab9","reportUrl":"https://Nat754.github.io/StroyremAutomation/391//#testresult/7c28eacd6e959ab9","status":"passed","time":{"start":1722906706789,"stop":1722906715681,"duration":8892}},{"uid":"3384d43eebf40c7e","reportUrl":"https://Nat754.github.io/StroyremAutomation/390//#testresult/3384d43eebf40c7e","status":"passed","time":{"start":1722820426190,"stop":1722820435233,"duration":9043}},{"uid":"6d135d7c1b573de5","reportUrl":"https://Nat754.github.io/StroyremAutomation/389//#testresult/6d135d7c1b573de5","status":"passed","time":{"start":1722734375766,"stop":1722734385303,"duration":9537}},{"uid":"e25a0d2f4fb333d2","reportUrl":"https://Nat754.github.io/StroyremAutomation/388//#testresult/e25a0d2f4fb333d2","status":"passed","time":{"start":1722647683812,"stop":1722647693389,"duration":9577}},{"uid":"44a2cccf2c557c8a","reportUrl":"https://Nat754.github.io/StroyremAutomation/387//#testresult/44a2cccf2c557c8a","status":"passed","time":{"start":1722561085028,"stop":1722561094655,"duration":9627}},{"uid":"dc3f1f4951cce308","reportUrl":"https://Nat754.github.io/StroyremAutomation/386//#testresult/dc3f1f4951cce308","status":"passed","time":{"start":1722475026692,"stop":1722475036399,"duration":9707}},{"uid":"4b2f2091e63a512e","reportUrl":"https://Nat754.github.io/StroyremAutomation/385//#testresult/4b2f2091e63a512e","status":"passed","time":{"start":1722387645778,"stop":1722387655062,"duration":9284}},{"uid":"ec71fe11c8269c6f","reportUrl":"https://Nat754.github.io/StroyremAutomation/384//#testresult/ec71fe11c8269c6f","status":"passed","time":{"start":1722301852627,"stop":1722301861719,"duration":9092}},{"uid":"8991401914749082","reportUrl":"https://Nat754.github.io/StroyremAutomation/383//#testresult/8991401914749082","status":"passed","time":{"start":1722215572719,"stop":1722215581285,"duration":8566}},{"uid":"9d432255fbc4f6f8","reportUrl":"https://Nat754.github.io/StroyremAutomation/382//#testresult/9d432255fbc4f6f8","status":"passed","time":{"start":1722129389084,"stop":1722129398271,"duration":9187}},{"uid":"2f9b6adba3223d6c","reportUrl":"https://Nat754.github.io/StroyremAutomation/381//#testresult/2f9b6adba3223d6c","status":"passed","time":{"start":1722042643800,"stop":1722042653126,"duration":9326}},{"uid":"53da58438b2c4d1d","reportUrl":"https://Nat754.github.io/StroyremAutomation/380//#testresult/53da58438b2c4d1d","status":"passed","time":{"start":1721956249004,"stop":1721956258303,"duration":9299}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"62587e3571b0294e.json","parameterValues":["'https://stroyrem-nn.ru/catalog/elektroinstrument'"]}