{"uid":"bc1a7a3f6dbcf6f3","name":"TC 006 - Проверка функциональности ссылки 'Обратный звонок'","fullName":"tests.test_main_page.TestMainPage#test_positive_footer_back_call_smoke","historyId":"8a1ebd75b8bb4dbf0f8c6237ff40e90b","time":{"start":1693169695366,"stop":1693169695399,"duration":33},"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x558a22f65e23 <unknown>\n#1 0x558a22c8e5f6 <unknown>\n#2 0x558a22cce1c2 <unknown>\n#3 0x558a22cc3599 <unknown>\n#4 0x558a22cee012 <unknown>\n#5 0x558a22cc2fb6 <unknown>\n#6 0x558a22cee1de <unknown>\n#7 0x558a22d06369 <unknown>\n#8 0x558a22cedde3 <unknown>\n#9 0x558a22cc1a7b <unknown>\n#10 0x558a22cc281e <unknown>\n#11 0x558a22f27638 <unknown>\n#12 0x558a22f2b507 <unknown>\n#13 0x558a22f35c4c <unknown>\n#14 0x558a22f2c136 <unknown>\n#15 0x558a22efa9cf <unknown>\n#16 0x558a22f4fb98 <unknown>\n#17 0x558a22f4fd68 <unknown>\n#18 0x558a22f5ecb3 <unknown>\n#19 0x7ff3217c6044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7f572c631250>\nmain_page = <pages.main_page.MainPage object at 0x7f572c6dbe50>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f572c8f6ed0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x558a22f4fd68 \\\\u003Cunknown>\\\\n#18 0x558a22f5ecb3 \\\\u003Cunknown>\\\\n#19 0x7ff3217c6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x558a22f65e23 <unknown>\nE       #1 0x558a22c8e5f6 <unknown>\nE       #2 0x558a22cce1c2 <unknown>\nE       #3 0x558a22cc3599 <unknown>\nE       #4 0x558a22cee012 <unknown>\nE       #5 0x558a22cc2fb6 <unknown>\nE       #6 0x558a22cee1de <unknown>\nE       #7 0x558a22d06369 <unknown>\nE       #8 0x558a22cedde3 <unknown>\nE       #9 0x558a22cc1a7b <unknown>\nE       #10 0x558a22cc281e <unknown>\nE       #11 0x558a22f27638 <unknown>\nE       #12 0x558a22f2b507 <unknown>\nE       #13 0x558a22f35c4c <unknown>\nE       #14 0x558a22f2c136 <unknown>\nE       #15 0x558a22efa9cf <unknown>\nE       #16 0x558a22f4fb98 <unknown>\nE       #17 0x558a22f4fd68 <unknown>\nE       #18 0x558a22f5ecb3 <unknown>\nE       #19 0x7ff3217c6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1693169558517,"stop":1693169558592,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"clear_allure_results_folder","time":{"start":1693169558593,"stop":1693169558593,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1693169685960,"stop":1693169686714,"duration":754},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"main_page","time":{"start":1693169686715,"stop":1693169695365,"duration":8650},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1693169686715,"stop":1693169686715,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Сломалось?\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x558a22f65e23 <unknown>\n#1 0x558a22c8e5f6 <unknown>\n#2 0x558a22cce1c2 <unknown>\n#3 0x558a22cc3599 <unknown>\n#4 0x558a22cee012 <unknown>\n#5 0x558a22cc2fb6 <unknown>\n#6 0x558a22cee1de <unknown>\n#7 0x558a22d06369 <unknown>\n#8 0x558a22cedde3 <unknown>\n#9 0x558a22cc1a7b <unknown>\n#10 0x558a22cc281e <unknown>\n#11 0x558a22f27638 <unknown>\n#12 0x558a22f2b507 <unknown>\n#13 0x558a22f35c4c <unknown>\n#14 0x558a22f2c136 <unknown>\n#15 0x558a22efa9cf <unknown>\n#16 0x558a22f4fb98 <unknown>\n#17 0x558a22f4fd68 <unknown>\n#18 0x558a22f5ecb3 <unknown>\n#19 0x7ff3217c6044 <unknown>","statusTrace":"self = <tests.test_main_page.TestMainPage object at 0x7f572c631250>\nmain_page = <pages.main_page.MainPage object at 0x7f572c6dbe50>\n\n    @allure.feature(\"Footer functionality\")\n    @allure.title(\"TC 006 - Проверка функциональности ссылки 'Обратный звонок'\")\n    @pytest.mark.xfail(reason=\"Сломалось?\")\n    @pytest.mark.smoke_test\n    def test_positive_footer_back_call_smoke(self, main_page):\n>       result = main_page.check_call_back_link()\n\ntests/test_main_page.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:103: in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f572c8f6ed0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...\\\\n#17 0x558a22f4fd68 \\\\u003Cunknown>\\\\n#18 0x558a22f5ecb3 \\\\u003Cunknown>\\\\n#19 0x7ff3217c6044 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: headless chrome=116.0.5845.96)\nE       Stacktrace:\nE       #0 0x558a22f65e23 <unknown>\nE       #1 0x558a22c8e5f6 <unknown>\nE       #2 0x558a22cce1c2 <unknown>\nE       #3 0x558a22cc3599 <unknown>\nE       #4 0x558a22cee012 <unknown>\nE       #5 0x558a22cc2fb6 <unknown>\nE       #6 0x558a22cee1de <unknown>\nE       #7 0x558a22d06369 <unknown>\nE       #8 0x558a22cedde3 <unknown>\nE       #9 0x558a22cc1a7b <unknown>\nE       #10 0x558a22cc281e <unknown>\nE       #11 0x558a22f27638 <unknown>\nE       #12 0x558a22f2b507 <unknown>\nE       #13 0x558a22f35c4c <unknown>\nE       #14 0x558a22f2c136 <unknown>\nE       #15 0x558a22efa9cf <unknown>\nE       #16 0x558a22f4fb98 <unknown>\nE       #17 0x558a22f4fd68 <unknown>\nE       #18 0x558a22f5ecb3 <unknown>\nE       #19 0x7ff3217c6044 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: ElementNotInteractableException","steps":[{"name":"Проверка функциональности ссылки 'Обратный звонок'","time":{"start":1693169695366,"stop":1693169695398,"duration":32},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x558a22f65e23 <unknown>\n#1 0x558a22c8e5f6 <unknown>\n#2 0x558a22cce1c2 <unknown>\n#3 0x558a22cc3599 <unknown>\n#4 0x558a22cee012 <unknown>\n#5 0x558a22cc2fb6 <unknown>\n#6 0x558a22cee1de <unknown>\n#7 0x558a22d06369 <unknown>\n#8 0x558a22cedde3 <unknown>\n#9 0x558a22cc1a7b <unknown>\n#10 0x558a22cc281e <unknown>\n#11 0x558a22f27638 <unknown>\n#12 0x558a22f2b507 <unknown>\n#13 0x558a22f35c4c <unknown>\n#14 0x558a22f2c136 <unknown>\n#15 0x558a22efa9cf <unknown>\n#16 0x558a22f4fb98 <unknown>\n#17 0x558a22f4fd68 <unknown>\n#18 0x558a22f5ecb3 <unknown>\n#19 0x7ff3217c6044 <unknown>\n\n","statusTrace":"  File \"/usr/local/lib/python3.11/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/app/pages/main_page.py\", line 103, in check_call_back_link\n    self.driver.find_element(*self._call_back_link).click()\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py\", line 346, in execute\n    self.error_handler.check_response(response)\n  File \"/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"7cb2180eec2943c","name":"Screenshot","source":"7cb2180eec2943c.png","type":"image/png","size":258761},{"uid":"8fd3d1a69d15a3a1","name":"HTML source","source":"8fd3d1a69d15a3a1.html","type":"text/html","size":398099}],"parameters":[],"stepsCount":1,"attachmentsCount":2,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1693169695666,"stop":1693169695666,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver::0","time":{"start":1693169695667,"stop":1693169695729,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Main Page"},{"name":"feature","value":"Footer functionality"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"@pytest.mark.xfail(reason='Сломалось?')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_main_page"},{"name":"subSuite","value":"TestMainPage"},{"name":"host","value":"57ad57fd3a6d"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_main_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://stroyrem-nn.ru/'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":33,"unknown":0,"total":35},"items":[{"uid":"366f52c3f895c555","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/366f52c3f895c555","status":"skipped","statusDetails":"XFAIL Сломалось?\n\nselenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: headless chrome=116.0.5845.96)\nStacktrace:\n#0 0x55bab077de23 <unknown>\n#1 0x55bab04a65f6 <unknown>\n#2 0x55bab04e61c2 <unknown>\n#3 0x55bab04db599 <unknown>\n#4 0x55bab0506012 <unknown>\n#5 0x55bab04dafb6 <unknown>\n#6 0x55bab05061de <unknown>\n#7 0x55bab051e369 <unknown>\n#8 0x55bab0505de3 <unknown>\n#9 0x55bab04d9a7b <unknown>\n#10 0x55bab04da81e <unknown>\n#11 0x55bab073f638 <unknown>\n#12 0x55bab0743507 <unknown>\n#13 0x55bab074dc4c <unknown>\n#14 0x55bab0744136 <unknown>\n#15 0x55bab07129cf <unknown>\n#16 0x55bab0767b98 <unknown>\n#17 0x55bab0767d68 <unknown>\n#18 0x55bab0776cb3 <unknown>\n#19 0x7f919d0b9044 <unknown>","time":{"start":1693139924958,"stop":1693139924992,"duration":34}},{"uid":"b848dfd8f855e299","reportUrl":"https://Nat754.github.io/StroyremAutomation/39//#testresult/b848dfd8f855e299","status":"passed","statusDetails":"XPASS Сломалось?","time":{"start":1693097456849,"stop":1693097456995,"duration":146}},{"uid":"ea80eacd5754f686","reportUrl":"https://Nat754.github.io/StroyremAutomation/38//#testresult/ea80eacd5754f686","status":"passed","statusDetails":"XPASS Сломалось?","time":{"start":1693031236140,"stop":1693031236274,"duration":134}},{"uid":"3a893513951f560","reportUrl":"https://Nat754.github.io/StroyremAutomation/38//#testresult/3a893513951f560","status":"passed","statusDetails":"XPASS Сломалось?","time":{"start":1693010807376,"stop":1693010807518,"duration":142}},{"uid":"3baa9485b0409c7f","reportUrl":"https://Nat754.github.io/StroyremAutomation/36//#testresult/3baa9485b0409c7f","status":"passed","time":{"start":1692838013670,"stop":1692838013772,"duration":102}},{"uid":"58e63bb4ae768e20","reportUrl":"https://Nat754.github.io/StroyremAutomation/35//#testresult/58e63bb4ae768e20","status":"passed","time":{"start":1692810926842,"stop":1692810926956,"duration":114}},{"uid":"23a7f6ad6d19dea8","reportUrl":"https://Nat754.github.io/StroyremAutomation/35//#testresult/23a7f6ad6d19dea8","status":"passed","time":{"start":1692751637895,"stop":1692751638010,"duration":115}},{"uid":"12624537b05f6df","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/12624537b05f6df","status":"passed","time":{"start":1692723634333,"stop":1692723634453,"duration":120}},{"uid":"dfd51770baa1d49d","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/dfd51770baa1d49d","status":"passed","time":{"start":1692720752856,"stop":1692720753028,"duration":172}},{"uid":"1f5c1dd7a7d07a10","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/1f5c1dd7a7d07a10","status":"passed","time":{"start":1692717755358,"stop":1692717755522,"duration":164}},{"uid":"4819beb9d2cb523c","reportUrl":"https://Nat754.github.io/StroyremAutomation/34//#testresult/4819beb9d2cb523c","status":"passed","time":{"start":1692665265691,"stop":1692665265846,"duration":155}},{"uid":"91e3b0cf0bcbfa2e","reportUrl":"https://Nat754.github.io/StroyremAutomation/33//#testresult/91e3b0cf0bcbfa2e","status":"passed","time":{"start":1692578855246,"stop":1692578855402,"duration":156}},{"uid":"ca5b856b068914d","reportUrl":"https://Nat754.github.io/StroyremAutomation/31//#testresult/ca5b856b068914d","status":"passed","time":{"start":1692567110272,"stop":1692567110408,"duration":136}},{"uid":"157224d6449004ca","reportUrl":"https://Nat754.github.io/StroyremAutomation/32//#testresult/157224d6449004ca","status":"passed","time":{"start":1692565343126,"stop":1692565343264,"duration":138}},{"uid":"f95c9c67f5399870","reportUrl":"https://Nat754.github.io/StroyremAutomation/27//#testresult/f95c9c67f5399870","status":"passed","time":{"start":1692060478803,"stop":1692060478962,"duration":159}},{"uid":"73952c591d1b83e","reportUrl":"https://Nat754.github.io/StroyremAutomation/26//#testresult/73952c591d1b83e","status":"passed","time":{"start":1691974101170,"stop":1691974101338,"duration":168}},{"uid":"6633d574eb37c04d","reportUrl":"https://Nat754.github.io/StroyremAutomation/25//#testresult/6633d574eb37c04d","status":"passed","time":{"start":1691887772557,"stop":1691887772660,"duration":103}},{"uid":"9a48565b4d59844e","reportUrl":"https://Nat754.github.io/StroyremAutomation/24//#testresult/9a48565b4d59844e","status":"passed","time":{"start":1691801134387,"stop":1691801134539,"duration":152}},{"uid":"bc175b52dddf25a","reportUrl":"https://Nat754.github.io/StroyremAutomation/23//#testresult/bc175b52dddf25a","status":"passed","time":{"start":1691714785436,"stop":1691714785573,"duration":137}},{"uid":"9f7d402567311899","reportUrl":"https://Nat754.github.io/StroyremAutomation/22//#testresult/9f7d402567311899","status":"passed","time":{"start":1691629133892,"stop":1691629134057,"duration":165}}]},"tags":["@pytest.mark.xfail(reason='Сломалось?')","smoke_test"]},"source":"bc1a7a3f6dbcf6f3.json","parameterValues":["'https://stroyrem-nn.ru/'"]}