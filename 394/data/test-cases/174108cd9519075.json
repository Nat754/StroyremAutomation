{"uid":"174108cd9519075","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke","historyId":"30a4f622139d182a129f4a7eaccc059b","time":{"start":1723165865162,"stop":1723165867447,"duration":2285},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55a45daa66aa <unknown>\n#1 0x55a45d777600 <unknown>\n#2 0x55a45d7cd8e6 <unknown>\n#3 0x55a45d7cb7f6 <unknown>\n#4 0x55a45d7c9277 <unknown>\n#5 0x55a45d7c811c <unknown>\n#6 0x55a45d7bbbe6 <unknown>\n#7 0x55a45d7e98a2 <unknown>\n#8 0x55a45d7bb599 <unknown>\n#9 0x55a45d7e9a6e <unknown>\n#10 0x55a45d80804a <unknown>\n#11 0x55a45d7e9643 <unknown>\n#12 0x55a45d7b9d31 <unknown>\n#13 0x55a45d7ba79e <unknown>\n#14 0x55a45da6e23b <unknown>\n#15 0x55a45da721d2 <unknown>\n#16 0x55a45da5b5f5 <unknown>\n#17 0x55a45da72d62 <unknown>\n#18 0x55a45da4023f <unknown>\n#19 0x55a45da95e48 <unknown>\n#20 0x55a45da96020 <unknown>\n#21 0x55a45daa547c <unknown>\n#22 0x7fade8bdc134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0b5b2db550>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0b5a3059d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0b5bd6de50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a45da96020 \\\\u003Cunknown>\\\\n#21 0x55a45daa547c \\\\u003Cunknown>\\\\n#22 0x7fade8bdc134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.99)\nE       Stacktrace:\nE       #0 0x55a45daa66aa <unknown>\nE       #1 0x55a45d777600 <unknown>\nE       #2 0x55a45d7cd8e6 <unknown>\nE       #3 0x55a45d7cb7f6 <unknown>\nE       #4 0x55a45d7c9277 <unknown>\nE       #5 0x55a45d7c811c <unknown>\nE       #6 0x55a45d7bbbe6 <unknown>\nE       #7 0x55a45d7e98a2 <unknown>\nE       #8 0x55a45d7bb599 <unknown>\nE       #9 0x55a45d7e9a6e <unknown>\nE       #10 0x55a45d80804a <unknown>\nE       #11 0x55a45d7e9643 <unknown>\nE       #12 0x55a45d7b9d31 <unknown>\nE       #13 0x55a45d7ba79e <unknown>\nE       #14 0x55a45da6e23b <unknown>\nE       #15 0x55a45da721d2 <unknown>\nE       #16 0x55a45da5b5f5 <unknown>\nE       #17 0x55a45da72d62 <unknown>\nE       #18 0x55a45da4023f <unknown>\nE       #19 0x55a45da95e48 <unknown>\nE       #20 0x55a45da96020 <unknown>\nE       #21 0x55a45daa547c <unknown>\nE       #22 0x7fade8bdc134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1723165079556,"stop":1723165079647,"duration":91},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1723165079647,"stop":1723165079647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1723165857700,"stop":1723165858392,"duration":692},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1723165858393,"stop":1723165865162,"duration":6769},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1723165858393,"stop":1723165858393,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=127.0.6533.99)\nStacktrace:\n#0 0x55a45daa66aa <unknown>\n#1 0x55a45d777600 <unknown>\n#2 0x55a45d7cd8e6 <unknown>\n#3 0x55a45d7cb7f6 <unknown>\n#4 0x55a45d7c9277 <unknown>\n#5 0x55a45d7c811c <unknown>\n#6 0x55a45d7bbbe6 <unknown>\n#7 0x55a45d7e98a2 <unknown>\n#8 0x55a45d7bb599 <unknown>\n#9 0x55a45d7e9a6e <unknown>\n#10 0x55a45d80804a <unknown>\n#11 0x55a45d7e9643 <unknown>\n#12 0x55a45d7b9d31 <unknown>\n#13 0x55a45d7ba79e <unknown>\n#14 0x55a45da6e23b <unknown>\n#15 0x55a45da721d2 <unknown>\n#16 0x55a45da5b5f5 <unknown>\n#17 0x55a45da72d62 <unknown>\n#18 0x55a45da4023f <unknown>\n#19 0x55a45da95e48 <unknown>\n#20 0x55a45da96020 <unknown>\n#21 0x55a45daa547c <unknown>\n#22 0x7fade8bdc134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f0b5b2db550>\nlink = 'https://stroyrem-nn.ru/catalog/kisti-malyarnye'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f0b5a3059d0>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_50_3499rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{KISTI_MALYARNYE_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{KISTI_MALYARNYE_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_50_3499rub_smoke(self, link,\n                                                                                           product_page_open):\n        product_page_open.get_field_price_first().send_keys(50)\n        product_page_open.get_field_price_last().send_keys(3499)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f0b5bd6de50>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x55a45da96020 \\\\u003Cunknown>\\\\n#21 0x55a45daa547c \\\\u003Cunknown>\\\\n#22 0x7fade8bdc134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=127.0.6533.99)\nE       Stacktrace:\nE       #0 0x55a45daa66aa <unknown>\nE       #1 0x55a45d777600 <unknown>\nE       #2 0x55a45d7cd8e6 <unknown>\nE       #3 0x55a45d7cb7f6 <unknown>\nE       #4 0x55a45d7c9277 <unknown>\nE       #5 0x55a45d7c811c <unknown>\nE       #6 0x55a45d7bbbe6 <unknown>\nE       #7 0x55a45d7e98a2 <unknown>\nE       #8 0x55a45d7bb599 <unknown>\nE       #9 0x55a45d7e9a6e <unknown>\nE       #10 0x55a45d80804a <unknown>\nE       #11 0x55a45d7e9643 <unknown>\nE       #12 0x55a45d7b9d31 <unknown>\nE       #13 0x55a45d7ba79e <unknown>\nE       #14 0x55a45da6e23b <unknown>\nE       #15 0x55a45da721d2 <unknown>\nE       #16 0x55a45da5b5f5 <unknown>\nE       #17 0x55a45da72d62 <unknown>\nE       #18 0x55a45da4023f <unknown>\nE       #19 0x55a45da95e48 <unknown>\nE       #20 0x55a45da96020 <unknown>\nE       #21 0x55a45daa547c <unknown>\nE       #22 0x7fade8bdc134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1723165865162,"stop":1723165865200,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1723165865271,"stop":1723165865302,"duration":31},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1723165866340,"stop":1723165866384,"duration":44},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"7e96eece0e88623","name":"Screenshot","source":"7e96eece0e88623.png","type":"image/png","size":117412},{"uid":"51ae7eaeaea8de61","name":"HTML source","source":"51ae7eaeaea8de61.html","type":"text/html","size":929494}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1723165867626,"stop":1723165867626,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1723165867627,"stop":1723165867701,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"db9b05301011"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":15,"skipped":0,"passed":57,"unknown":0,"total":72},"items":[{"uid":"43136c45262fea44","reportUrl":"https://Nat754.github.io/StroyremAutomation/393//#testresult/43136c45262fea44","status":"passed","time":{"start":1723079452139,"stop":1723079461180,"duration":9041}},{"uid":"b9de5b3b6376d084","reportUrl":"https://Nat754.github.io/StroyremAutomation/392//#testresult/b9de5b3b6376d084","status":"passed","time":{"start":1722993152381,"stop":1722993161577,"duration":9196}},{"uid":"52e45579daa65afb","reportUrl":"https://Nat754.github.io/StroyremAutomation/391//#testresult/52e45579daa65afb","status":"passed","time":{"start":1722906627114,"stop":1722906636768,"duration":9654}},{"uid":"e02a88ad29112aa8","reportUrl":"https://Nat754.github.io/StroyremAutomation/390//#testresult/e02a88ad29112aa8","status":"passed","time":{"start":1722820332184,"stop":1722820342273,"duration":10089}},{"uid":"12a6204eb4b2d809","reportUrl":"https://Nat754.github.io/StroyremAutomation/389//#testresult/12a6204eb4b2d809","status":"passed","time":{"start":1722734264411,"stop":1722734274223,"duration":9812}},{"uid":"235a2a42c39a03d7","reportUrl":"https://Nat754.github.io/StroyremAutomation/388//#testresult/235a2a42c39a03d7","status":"passed","time":{"start":1722647573643,"stop":1722647583494,"duration":9851}},{"uid":"2ff64d1a975e9468","reportUrl":"https://Nat754.github.io/StroyremAutomation/387//#testresult/2ff64d1a975e9468","status":"passed","time":{"start":1722560988596,"stop":1722560997713,"duration":9117}},{"uid":"9dc46b9975e0445e","reportUrl":"https://Nat754.github.io/StroyremAutomation/386//#testresult/9dc46b9975e0445e","status":"passed","time":{"start":1722474930804,"stop":1722474939875,"duration":9071}},{"uid":"e2c0ba405ac115fc","reportUrl":"https://Nat754.github.io/StroyremAutomation/385//#testresult/e2c0ba405ac115fc","status":"passed","time":{"start":1722387551782,"stop":1722387560636,"duration":8854}},{"uid":"e2299458e7cce74c","reportUrl":"https://Nat754.github.io/StroyremAutomation/384//#testresult/e2299458e7cce74c","status":"passed","time":{"start":1722301772512,"stop":1722301781704,"duration":9192}},{"uid":"650ee4a79f9b90a0","reportUrl":"https://Nat754.github.io/StroyremAutomation/383//#testresult/650ee4a79f9b90a0","status":"passed","time":{"start":1722215478065,"stop":1722215488697,"duration":10632}},{"uid":"b00554def43f8664","reportUrl":"https://Nat754.github.io/StroyremAutomation/382//#testresult/b00554def43f8664","status":"passed","time":{"start":1722129292395,"stop":1722129301628,"duration":9233}},{"uid":"c5038b303a1480a6","reportUrl":"https://Nat754.github.io/StroyremAutomation/381//#testresult/c5038b303a1480a6","status":"passed","time":{"start":1722042547490,"stop":1722042558264,"duration":10774}},{"uid":"99960c2e172a54dc","reportUrl":"https://Nat754.github.io/StroyremAutomation/380//#testresult/99960c2e172a54dc","status":"passed","time":{"start":1721956152533,"stop":1721956163184,"duration":10651}},{"uid":"5e80704fe2330241","reportUrl":"https://Nat754.github.io/StroyremAutomation/379//#testresult/5e80704fe2330241","status":"passed","time":{"start":1721869980159,"stop":1721869991719,"duration":11560}},{"uid":"e3c024404f983baa","reportUrl":"https://Nat754.github.io/StroyremAutomation/378//#testresult/e3c024404f983baa","status":"passed","time":{"start":1721783620687,"stop":1721783630488,"duration":9801}},{"uid":"9b41d02b4e86fffb","reportUrl":"https://Nat754.github.io/StroyremAutomation/377//#testresult/9b41d02b4e86fffb","status":"passed","time":{"start":1721697173694,"stop":1721697183294,"duration":9600}},{"uid":"5d59baf38e2958b","reportUrl":"https://Nat754.github.io/StroyremAutomation/376//#testresult/5d59baf38e2958b","status":"passed","time":{"start":1721610913084,"stop":1721610923882,"duration":10798}},{"uid":"ea4b72a6f8822cc8","reportUrl":"https://Nat754.github.io/StroyremAutomation/375//#testresult/ea4b72a6f8822cc8","status":"passed","time":{"start":1721524437979,"stop":1721524447401,"duration":9422}},{"uid":"97ceeab4131fd443","reportUrl":"https://Nat754.github.io/StroyremAutomation/374//#testresult/97ceeab4131fd443","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.182)\nStacktrace:\n#0 0x55dafe470c5a <unknown>\n#1 0x55dafe153e2c <unknown>\n#2 0x55dafe1a7406 <unknown>\n#3 0x55dafe1a5246 <unknown>\n#4 0x55dafe1a2c27 <unknown>\n#5 0x55dafe1a1a60 <unknown>\n#6 0x55dafe19515f <unknown>\n#7 0x55dafe1c35c2 <unknown>\n#8 0x55dafe194ad9 <unknown>\n#9 0x55dafe1c378e <unknown>\n#10 0x55dafe1e2303 <unknown>\n#11 0x55dafe1c3363 <unknown>\n#12 0x55dafe193247 <unknown>\n#13 0x55dafe193b9e <unknown>\n#14 0x55dafe43722b <unknown>\n#15 0x55dafe43b2d1 <unknown>\n#16 0x55dafe422ade <unknown>\n#17 0x55dafe43be32 <unknown>\n#18 0x55dafe40777f <unknown>\n#19 0x55dafe460618 <unknown>\n#20 0x55dafe4607f0 <unknown>\n#21 0x55dafe46fd8c <unknown>\n#22 0x7f53dcfde134 <unknown>","time":{"start":1721437881360,"stop":1721437883674,"duration":2314}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"174108cd9519075.json","parameterValues":["'https://stroyrem-nn.ru/catalog/kisti-malyarnye'"]}