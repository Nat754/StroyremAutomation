{"uid":"946fe2aa933fa94c","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke","historyId":"8519a10778cf28e105209a17627cfb4a","time":{"start":1717376962312,"stop":1717376964617,"duration":2305},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x564c3fc13e3a <unknown>\n#1 0x564c3f8fd45c <unknown>\n#2 0x564c3f950336 <unknown>\n#3 0x564c3f94e176 <unknown>\n#4 0x564c3f94bb57 <unknown>\n#5 0x564c3f94a97c <unknown>\n#6 0x564c3f93e0ff <unknown>\n#7 0x564c3f96c4b2 <unknown>\n#8 0x564c3f93da79 <unknown>\n#9 0x564c3f96c67e <unknown>\n#10 0x564c3f98b2cc <unknown>\n#11 0x564c3f96c253 <unknown>\n#12 0x564c3f93c1c7 <unknown>\n#13 0x564c3f93cb3e <unknown>\n#14 0x564c3fbda27b <unknown>\n#15 0x564c3fbde327 <unknown>\n#16 0x564c3fbc6dae <unknown>\n#17 0x564c3fbdedf2 <unknown>\n#18 0x564c3fbab74f <unknown>\n#19 0x564c3fc03128 <unknown>\n#20 0x564c3fc032fb <unknown>\n#21 0x564c3fc12f6c <unknown>\n#22 0x7f8a740ae134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fad2d87bc10>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fad2d252a90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fad2dc537d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564c3fc032fb \\\\u003Cunknown>\\\\n#21 0x564c3fc12f6c \\\\u003Cunknown>\\\\n#22 0x7f8a740ae134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x564c3fc13e3a <unknown>\nE       #1 0x564c3f8fd45c <unknown>\nE       #2 0x564c3f950336 <unknown>\nE       #3 0x564c3f94e176 <unknown>\nE       #4 0x564c3f94bb57 <unknown>\nE       #5 0x564c3f94a97c <unknown>\nE       #6 0x564c3f93e0ff <unknown>\nE       #7 0x564c3f96c4b2 <unknown>\nE       #8 0x564c3f93da79 <unknown>\nE       #9 0x564c3f96c67e <unknown>\nE       #10 0x564c3f98b2cc <unknown>\nE       #11 0x564c3f96c253 <unknown>\nE       #12 0x564c3f93c1c7 <unknown>\nE       #13 0x564c3f93cb3e <unknown>\nE       #14 0x564c3fbda27b <unknown>\nE       #15 0x564c3fbde327 <unknown>\nE       #16 0x564c3fbc6dae <unknown>\nE       #17 0x564c3fbdedf2 <unknown>\nE       #18 0x564c3fbab74f <unknown>\nE       #19 0x564c3fc03128 <unknown>\nE       #20 0x564c3fc032fb <unknown>\nE       #21 0x564c3fc12f6c <unknown>\nE       #22 0x7f8a740ae134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1717376057299,"stop":1717376057366,"duration":67},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1717376057367,"stop":1717376057367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1717376949448,"stop":1717376950139,"duration":691},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1717376950139,"stop":1717376950139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1717376950139,"stop":1717376962312,"duration":12173},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x564c3fc13e3a <unknown>\n#1 0x564c3f8fd45c <unknown>\n#2 0x564c3f950336 <unknown>\n#3 0x564c3f94e176 <unknown>\n#4 0x564c3f94bb57 <unknown>\n#5 0x564c3f94a97c <unknown>\n#6 0x564c3f93e0ff <unknown>\n#7 0x564c3f96c4b2 <unknown>\n#8 0x564c3f93da79 <unknown>\n#9 0x564c3f96c67e <unknown>\n#10 0x564c3f98b2cc <unknown>\n#11 0x564c3f96c253 <unknown>\n#12 0x564c3f93c1c7 <unknown>\n#13 0x564c3f93cb3e <unknown>\n#14 0x564c3fbda27b <unknown>\n#15 0x564c3fbde327 <unknown>\n#16 0x564c3fbc6dae <unknown>\n#17 0x564c3fbdedf2 <unknown>\n#18 0x564c3fbab74f <unknown>\n#19 0x564c3fc03128 <unknown>\n#20 0x564c3fc032fb <unknown>\n#21 0x564c3fc12f6c <unknown>\n#22 0x7f8a740ae134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7fad2d87bc10>\nlink = 'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7fad2d252a90>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_10000_14999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{SHTUKATURNO_OTDELOCHNYJ_INSTRUMENT_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_discount_for_unauthorized_customer_for_amount_10000_14999rub_smoke(self, link,\n                                                                                               product_page_open):\n        product_page_open.get_field_price_first().send_keys(10000)\n        product_page_open.get_field_price_last().send_keys(14999)\n        time.sleep(1)\n>       product_page_open.get_in_stock_products_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fad2dc537d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x564c3fc032fb \\\\u003Cunknown>\\\\n#21 0x564c3fc12f6c \\\\u003Cunknown>\\\\n#22 0x7f8a740ae134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=125.0.6422.141)\nE       Stacktrace:\nE       #0 0x564c3fc13e3a <unknown>\nE       #1 0x564c3f8fd45c <unknown>\nE       #2 0x564c3f950336 <unknown>\nE       #3 0x564c3f94e176 <unknown>\nE       #4 0x564c3f94bb57 <unknown>\nE       #5 0x564c3f94a97c <unknown>\nE       #6 0x564c3f93e0ff <unknown>\nE       #7 0x564c3f96c4b2 <unknown>\nE       #8 0x564c3f93da79 <unknown>\nE       #9 0x564c3f96c67e <unknown>\nE       #10 0x564c3f98b2cc <unknown>\nE       #11 0x564c3f96c253 <unknown>\nE       #12 0x564c3f93c1c7 <unknown>\nE       #13 0x564c3f93cb3e <unknown>\nE       #14 0x564c3fbda27b <unknown>\nE       #15 0x564c3fbde327 <unknown>\nE       #16 0x564c3fbc6dae <unknown>\nE       #17 0x564c3fbdedf2 <unknown>\nE       #18 0x564c3fbab74f <unknown>\nE       #19 0x564c3fc03128 <unknown>\nE       #20 0x564c3fc032fb <unknown>\nE       #21 0x564c3fc12f6c <unknown>\nE       #22 0x7f8a740ae134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем видимость поля 'ЦЕНА от'","time":{"start":1717376962312,"stop":1717376962349,"duration":37},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем видимость поля 'ЦЕНА до'","time":{"start":1717376962418,"stop":1717376962446,"duration":28},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1717376963487,"stop":1717376963525,"duration":38},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"b05f7c2a8ffdbde4","name":"Screenshot","source":"b05f7c2a8ffdbde4.png","type":"image/png","size":46997},{"uid":"69300bc930a53d90","name":"HTML source","source":"69300bc930a53d90.html","type":"text/html","size":617963}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1717376964781,"stop":1717376964781,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1717376964782,"stop":1717376964857,"duration":75},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"9caa5a021e76"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":3,"unknown":0,"total":5},"items":[{"uid":"5471fce6477ecce","reportUrl":"https://Nat754.github.io/StroyremAutomation/326//#testresult/5471fce6477ecce","status":"passed","time":{"start":1717290689490,"stop":1717290701170,"duration":11680}},{"uid":"c5a3cc3842e587a9","reportUrl":"https://Nat754.github.io/StroyremAutomation/325//#testresult/c5a3cc3842e587a9","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span>...</span> is not clickable at point (163, 9). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=125.0.6422.141)\nStacktrace:\n#0 0x55c5baa79e3a <unknown>\n#1 0x55c5ba76345c <unknown>\n#2 0x55c5ba7b6336 <unknown>\n#3 0x55c5ba7b4176 <unknown>\n#4 0x55c5ba7b1b57 <unknown>\n#5 0x55c5ba7b097c <unknown>\n#6 0x55c5ba7a40ff <unknown>\n#7 0x55c5ba7d24b2 <unknown>\n#8 0x55c5ba7a3a79 <unknown>\n#9 0x55c5ba7d267e <unknown>\n#10 0x55c5ba7f12cc <unknown>\n#11 0x55c5ba7d2253 <unknown>\n#12 0x55c5ba7a21c7 <unknown>\n#13 0x55c5ba7a2b3e <unknown>\n#14 0x55c5baa4027b <unknown>\n#15 0x55c5baa44327 <unknown>\n#16 0x55c5baa2cdae <unknown>\n#17 0x55c5baa44df2 <unknown>\n#18 0x55c5baa1174f <unknown>\n#19 0x55c5baa69128 <unknown>\n#20 0x55c5baa692fb <unknown>\n#21 0x55c5baa78f6c <unknown>\n#22 0x7fea9b35a134 <unknown>","time":{"start":1717204091026,"stop":1717204093331,"duration":2305}},{"uid":"4aa3da66a01527cb","reportUrl":"https://Nat754.github.io/StroyremAutomation/324//#testresult/4aa3da66a01527cb","status":"passed","time":{"start":1717117731581,"stop":1717117743462,"duration":11881}},{"uid":"fbf944243fb83c26","reportUrl":"https://Nat754.github.io/StroyremAutomation/323//#testresult/fbf944243fb83c26","status":"passed","time":{"start":1717031078279,"stop":1717031089238,"duration":10959}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"946fe2aa933fa94c.json","parameterValues":["'https://stroyrem-nn.ru/catalog/shtukaturno-otdelochnyj-instrument'"]}