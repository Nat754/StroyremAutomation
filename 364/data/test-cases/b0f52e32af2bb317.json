{"uid":"b0f52e32af2bb317","name":"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke","fullName":"tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage#test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke","historyId":"dad3617134a119815037f972e0359b9c","time":{"start":1720574047887,"stop":1720574050072,"duration":2185},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x563702a62c7a <unknown>\n#1 0x563702745e2c <unknown>\n#2 0x563702799406 <unknown>\n#3 0x563702797246 <unknown>\n#4 0x563702794c27 <unknown>\n#5 0x563702793a60 <unknown>\n#6 0x56370278715f <unknown>\n#7 0x5637027b55c2 <unknown>\n#8 0x563702786ad9 <unknown>\n#9 0x5637027b578e <unknown>\n#10 0x5637027d4303 <unknown>\n#11 0x5637027b5363 <unknown>\n#12 0x563702785247 <unknown>\n#13 0x563702785b9e <unknown>\n#14 0x563702a2924b <unknown>\n#15 0x563702a2d2f1 <unknown>\n#16 0x563702a14afe <unknown>\n#17 0x563702a2de52 <unknown>\n#18 0x5637029f979f <unknown>\n#19 0x563702a52638 <unknown>\n#20 0x563702a52810 <unknown>\n#21 0x563702a61dac <unknown>\n#22 0x7fe349aa8134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f89f9e94510>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f89f8f4a710>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89f8f497d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563702a52810 \\\\u003Cunknown>\\\\n#21 0x563702a61dac \\\\u003Cunknown>\\\\n#22 0x7fe349aa8134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x563702a62c7a <unknown>\nE       #1 0x563702745e2c <unknown>\nE       #2 0x563702799406 <unknown>\nE       #3 0x563702797246 <unknown>\nE       #4 0x563702794c27 <unknown>\nE       #5 0x563702793a60 <unknown>\nE       #6 0x56370278715f <unknown>\nE       #7 0x5637027b55c2 <unknown>\nE       #8 0x563702786ad9 <unknown>\nE       #9 0x5637027b578e <unknown>\nE       #10 0x5637027d4303 <unknown>\nE       #11 0x5637027b5363 <unknown>\nE       #12 0x563702785247 <unknown>\nE       #13 0x563702785b9e <unknown>\nE       #14 0x563702a2924b <unknown>\nE       #15 0x563702a2d2f1 <unknown>\nE       #16 0x563702a14afe <unknown>\nE       #17 0x563702a2de52 <unknown>\nE       #18 0x5637029f979f <unknown>\nE       #19 0x563702a52638 <unknown>\nE       #20 0x563702a52810 <unknown>\nE       #21 0x563702a61dac <unknown>\nE       #22 0x7fe349aa8134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1720572991432,"stop":1720572991504,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"clear_allure_results_folder","time":{"start":1720572991504,"stop":1720572991504,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver","time":{"start":1720574034842,"stop":1720574035541,"duration":699},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"product_page_open","time":{"start":1720574035541,"stop":1720574047886,"duration":12345},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"setup","time":{"start":1720574035541,"stop":1720574035541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x563702a62c7a <unknown>\n#1 0x563702745e2c <unknown>\n#2 0x563702799406 <unknown>\n#3 0x563702797246 <unknown>\n#4 0x563702794c27 <unknown>\n#5 0x563702793a60 <unknown>\n#6 0x56370278715f <unknown>\n#7 0x5637027b55c2 <unknown>\n#8 0x563702786ad9 <unknown>\n#9 0x5637027b578e <unknown>\n#10 0x5637027d4303 <unknown>\n#11 0x5637027b5363 <unknown>\n#12 0x563702785247 <unknown>\n#13 0x563702785b9e <unknown>\n#14 0x563702a2924b <unknown>\n#15 0x563702a2d2f1 <unknown>\n#16 0x563702a14afe <unknown>\n#17 0x563702a2de52 <unknown>\n#18 0x5637029f979f <unknown>\n#19 0x563702a52638 <unknown>\n#20 0x563702a52810 <unknown>\n#21 0x563702a61dac <unknown>\n#22 0x7fe349aa8134 <unknown>","statusTrace":"self = <tests.test_products_on_sale.test_products_on_sale_page.TestProductsOnSalePage object at 0x7f89f9e94510>\nlink = 'https://test2.stroyrem-nn.ru/catalog/action'\nproduct_page_open = <pages.products_on_sale_page.ProductsOnSale object at 0x7f89f8f4a710>\n\n    @allure.title(\"positive_check_discount_displayed_for_unauthorized_customer_for_amount_7500_9999rub_smoke\")\n    @pytest.mark.parametrize('link', [f\"{MAIN_PAGE_PROD_URL}{ACTION_PAGE_URL}\",\n                                      f\"{MAIN_PAGE_STAGE_URL}{ACTION_PAGE_URL}\"])\n    @pytest.mark.smoke_test\n    def test_positive_check_there_is_no_discount_for_unauthorized_customer_on_order_page_for_red_prices_smoke(\n            self, link, product_page_open):\n        product_page_open.get_in_stock_products_link().click()\n        time.sleep(1)\n>       product_page_open.get_text_red_link().click()\n\ntests/test_products_on_sale/test_products_on_sale_page.py:195: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:345: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f89f8f497d0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...\\\\n#20 0x563702a52810 \\\\u003Cunknown>\\\\n#21 0x563702a61dac \\\\u003Cunknown>\\\\n#22 0x7fe349aa8134 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\nE         (Session info: chrome-headless-shell=126.0.6478.126)\nE       Stacktrace:\nE       #0 0x563702a62c7a <unknown>\nE       #1 0x563702745e2c <unknown>\nE       #2 0x563702799406 <unknown>\nE       #3 0x563702797246 <unknown>\nE       #4 0x563702794c27 <unknown>\nE       #5 0x563702793a60 <unknown>\nE       #6 0x56370278715f <unknown>\nE       #7 0x5637027b55c2 <unknown>\nE       #8 0x563702786ad9 <unknown>\nE       #9 0x5637027b578e <unknown>\nE       #10 0x5637027d4303 <unknown>\nE       #11 0x5637027b5363 <unknown>\nE       #12 0x563702785247 <unknown>\nE       #13 0x563702785b9e <unknown>\nE       #14 0x563702a2924b <unknown>\nE       #15 0x563702a2d2f1 <unknown>\nE       #16 0x563702a14afe <unknown>\nE       #17 0x563702a2de52 <unknown>\nE       #18 0x5637029f979f <unknown>\nE       #19 0x563702a52638 <unknown>\nE       #20 0x563702a52810 <unknown>\nE       #21 0x563702a61dac <unknown>\nE       #22 0x7fe349aa8134 <unknown>\n\n/usr/local/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"Проверяем кликабельность кнопки 'На складе'","time":{"start":1720574047887,"stop":1720574047941,"duration":54},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Проверяем кликабельность кнопки 'Красная цена!'","time":{"start":1720574048988,"stop":1720574049029,"duration":41},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[{"uid":"8b462bcfddda4f0d","name":"Screenshot","source":"8b462bcfddda4f0d.png","type":"image/png","size":136903},{"uid":"88e3088e04f3e5b5","name":"HTML source","source":"88e3088e04f3e5b5.html","type":"text/html","size":810204}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"setup::0","time":{"start":1720574050256,"stop":1720574050256,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"driver::0","time":{"start":1720574050257,"stop":1720574050336,"duration":79},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"epic","value":"Products On SalePage"},{"name":"tag","value":"smoke_test"},{"name":"tag","value":"flaky(max_runs=3, min_passes=1)"},{"name":"parentSuite","value":"tests.test_products_on_sale"},{"name":"suite","value":"test_products_on_sale_page"},{"name":"subSuite","value":"TestProductsOnSalePage"},{"name":"host","value":"588375ca22f0"},{"name":"thread","value":"1-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_products_on_sale.test_products_on_sale_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"link","value":"'https://test2.stroyrem-nn.ru/catalog/action'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":4,"skipped":0,"passed":38,"unknown":0,"total":42},"items":[{"uid":"1876b8f149ce6d01","reportUrl":"https://Nat754.github.io/StroyremAutomation/363//#testresult/1876b8f149ce6d01","status":"passed","time":{"start":1720487718109,"stop":1720487731017,"duration":12908}},{"uid":"c71cad23a6615a64","reportUrl":"https://Nat754.github.io/StroyremAutomation/362//#testresult/c71cad23a6615a64","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label for=\"discounted_products\" class=\"text-red\">...</label> is not clickable at point (265, 18). Other element would receive the click: <div style=\"position:fixed;background:rgba(255,255,255,0.5);z-index:1000;left:0;top:0;width:100%;height:100%;\" class=\"fpreloader\"></div>\n  (Session info: chrome-headless-shell=126.0.6478.126)\nStacktrace:\n#0 0x55c778df4c7a <unknown>\n#1 0x55c778ad7e2c <unknown>\n#2 0x55c778b2b406 <unknown>\n#3 0x55c778b29246 <unknown>\n#4 0x55c778b26c27 <unknown>\n#5 0x55c778b25a60 <unknown>\n#6 0x55c778b1915f <unknown>\n#7 0x55c778b475c2 <unknown>\n#8 0x55c778b18ad9 <unknown>\n#9 0x55c778b4778e <unknown>\n#10 0x55c778b66303 <unknown>\n#11 0x55c778b47363 <unknown>\n#12 0x55c778b17247 <unknown>\n#13 0x55c778b17b9e <unknown>\n#14 0x55c778dbb24b <unknown>\n#15 0x55c778dbf2f1 <unknown>\n#16 0x55c778da6afe <unknown>\n#17 0x55c778dbfe52 <unknown>\n#18 0x55c778d8b79f <unknown>\n#19 0x55c778de4638 <unknown>\n#20 0x55c778de4810 <unknown>\n#21 0x55c778df3dac <unknown>\n#22 0x7ff30e0e6134 <unknown>","time":{"start":1720401181342,"stop":1720401183582,"duration":2240}},{"uid":"192ab1f601394690","reportUrl":"https://Nat754.github.io/StroyremAutomation/361//#testresult/192ab1f601394690","status":"passed","time":{"start":1720314945537,"stop":1720314956201,"duration":10664}},{"uid":"82066bb9016cabbe","reportUrl":"https://Nat754.github.io/StroyremAutomation/360//#testresult/82066bb9016cabbe","status":"passed","time":{"start":1720228258343,"stop":1720228270354,"duration":12011}},{"uid":"3b97a93d91da4652","reportUrl":"https://Nat754.github.io/StroyremAutomation/359//#testresult/3b97a93d91da4652","status":"passed","time":{"start":1720141859716,"stop":1720141871795,"duration":12079}},{"uid":"c8829e4373f9928f","reportUrl":"https://Nat754.github.io/StroyremAutomation/358//#testresult/c8829e4373f9928f","status":"passed","time":{"start":1720055529316,"stop":1720055541451,"duration":12135}},{"uid":"7a7b8d0ddd9fee28","reportUrl":"https://Nat754.github.io/StroyremAutomation/357//#testresult/7a7b8d0ddd9fee28","status":"passed","time":{"start":1719969179424,"stop":1719969191287,"duration":11863}},{"uid":"689b60670db47a6e","reportUrl":"https://Nat754.github.io/StroyremAutomation/356//#testresult/689b60670db47a6e","status":"passed","time":{"start":1719882768947,"stop":1719882780424,"duration":11477}},{"uid":"51ec60cdf5239460","reportUrl":"https://Nat754.github.io/StroyremAutomation/355//#testresult/51ec60cdf5239460","status":"passed","time":{"start":1719796607329,"stop":1719796618180,"duration":10851}},{"uid":"af67e1db54531917","reportUrl":"https://Nat754.github.io/StroyremAutomation/354//#testresult/af67e1db54531917","status":"passed","time":{"start":1719710129887,"stop":1719710140485,"duration":10598}},{"uid":"9212275c6f0a05db","reportUrl":"https://Nat754.github.io/StroyremAutomation/353//#testresult/9212275c6f0a05db","status":"passed","time":{"start":1719623414066,"stop":1719623425932,"duration":11866}},{"uid":"d7e71c8c1840718c","reportUrl":"https://Nat754.github.io/StroyremAutomation/352//#testresult/d7e71c8c1840718c","status":"passed","time":{"start":1719537292264,"stop":1719537303784,"duration":11520}},{"uid":"5ba5e7d0b5b9614b","reportUrl":"https://Nat754.github.io/StroyremAutomation/351//#testresult/5ba5e7d0b5b9614b","status":"passed","time":{"start":1719450715846,"stop":1719450727070,"duration":11224}},{"uid":"af5d0599dff7b355","reportUrl":"https://Nat754.github.io/StroyremAutomation/350//#testresult/af5d0599dff7b355","status":"passed","time":{"start":1719364260328,"stop":1719364271391,"duration":11063}},{"uid":"239182f2538056b4","reportUrl":"https://Nat754.github.io/StroyremAutomation/349//#testresult/239182f2538056b4","status":"passed","time":{"start":1719278071956,"stop":1719278083346,"duration":11390}},{"uid":"b38332b34a7bd3f4","reportUrl":"https://Nat754.github.io/StroyremAutomation/348//#testresult/b38332b34a7bd3f4","status":"passed","time":{"start":1719191625365,"stop":1719191636367,"duration":11002}},{"uid":"7ff37bfc245d0044","reportUrl":"https://Nat754.github.io/StroyremAutomation/347//#testresult/7ff37bfc245d0044","status":"passed","time":{"start":1719105348118,"stop":1719105359173,"duration":11055}},{"uid":"343d5cac7d584bef","reportUrl":"https://Nat754.github.io/StroyremAutomation/346//#testresult/343d5cac7d584bef","status":"passed","time":{"start":1719018763995,"stop":1719018775522,"duration":11527}},{"uid":"d2d8add4a90b7547","reportUrl":"https://Nat754.github.io/StroyremAutomation/345//#testresult/d2d8add4a90b7547","status":"passed","time":{"start":1718932487715,"stop":1718932499480,"duration":11765}},{"uid":"3d24deeea02ac161","reportUrl":"https://Nat754.github.io/StroyremAutomation/344//#testresult/3d24deeea02ac161","status":"passed","time":{"start":1718845788779,"stop":1718845799657,"duration":10878}}]},"tags":["smoke_test","flaky(max_runs=3, min_passes=1)"]},"source":"b0f52e32af2bb317.json","parameterValues":["'https://test2.stroyrem-nn.ru/catalog/action'"]}